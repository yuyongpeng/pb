// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: pb/paymentpb/payment.proto

package paymentpb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MerchantDetail 商户详情
type MerchantDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId uint32 `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	// 2
	UserId        uint32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                       // 用户ID
	PayChannel    string `protobuf:"bytes,4,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`            // 支付平台标识, alipay_zft支付宝-直付通;alipay_merchant支付宝-商户直连;wxpay_sft微信支付-收付通;wxpay_merchant微信支付-商户直连
	MerchantNo    string `protobuf:"bytes,5,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`            // 支付商户编号
	PayMerchantNo string `protobuf:"bytes,6,opt,name=pay_merchant_no,json=payMerchantNo,proto3" json:"pay_merchant_no,omitempty"` // (支付通道)商户号,支付通道商户编号
	MerchantName  string `protobuf:"bytes,7,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`      // 商户名称
	MerchantType  uint32 `protobuf:"varint,8,opt,name=merchant_type,json=merchantType,proto3" json:"merchant_type,omitempty"`     // 商户类型,1收单商户;2分账商户
	PayApplyNo    string `protobuf:"bytes,9,opt,name=pay_apply_no,json=payApplyNo,proto3" json:"pay_apply_no,omitempty"`          // (支付通道)商户进件申请单号(最近一次)
	// 10
	// 11
	// 12
	// 14
	SettleData  string `protobuf:"bytes,14,opt,name=settle_data,json=settleData,proto3" json:"settle_data,omitempty"`     // 结算信息
	FeeRate     uint32 `protobuf:"varint,15,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`             // 商户费率, 单位万分之一
	ApplyAt     uint32 `protobuf:"varint,16,opt,name=apply_at,json=applyAt,proto3" json:"apply_at,omitempty"`             // 商户认证申请时间
	CertifyAt   uint32 `protobuf:"varint,17,opt,name=certify_at,json=certifyAt,proto3" json:"certify_at,omitempty"`       // (支付通道)商户认证通知时间
	CertifyMsg  string `protobuf:"bytes,18,opt,name=certify_msg,json=certifyMsg,proto3" json:"certify_msg,omitempty"`     // (支付通道)商户认证通知描述
	ApplyStatus uint32 `protobuf:"varint,19,opt,name=apply_status,json=applyStatus,proto3" json:"apply_status,omitempty"` // 商户进件状态,0待进件;1进件中;2进件成功;3进件失败
	AuditStatus uint32 `protobuf:"varint,20,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"` // 审核状态, 0待审核;1审核通过;2审核拒绝
	ModifiedAt  uint32 `protobuf:"varint,21,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`    // 最后修改时间
	CreatedAt   uint32 `protobuf:"varint,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // 创建时间
}

func (x *MerchantDetail) Reset() {
	*x = MerchantDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDetail) ProtoMessage() {}

func (x *MerchantDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDetail.ProtoReflect.Descriptor instead.
func (*MerchantDetail) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{0}
}

func (x *MerchantDetail) GetMerchantId() uint32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantDetail) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantDetail) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *MerchantDetail) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *MerchantDetail) GetPayMerchantNo() string {
	if x != nil {
		return x.PayMerchantNo
	}
	return ""
}

func (x *MerchantDetail) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *MerchantDetail) GetMerchantType() uint32 {
	if x != nil {
		return x.MerchantType
	}
	return 0
}

func (x *MerchantDetail) GetPayApplyNo() string {
	if x != nil {
		return x.PayApplyNo
	}
	return ""
}

func (x *MerchantDetail) GetSettleData() string {
	if x != nil {
		return x.SettleData
	}
	return ""
}

func (x *MerchantDetail) GetFeeRate() uint32 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *MerchantDetail) GetApplyAt() uint32 {
	if x != nil {
		return x.ApplyAt
	}
	return 0
}

func (x *MerchantDetail) GetCertifyAt() uint32 {
	if x != nil {
		return x.CertifyAt
	}
	return 0
}

func (x *MerchantDetail) GetCertifyMsg() string {
	if x != nil {
		return x.CertifyMsg
	}
	return ""
}

func (x *MerchantDetail) GetApplyStatus() uint32 {
	if x != nil {
		return x.ApplyStatus
	}
	return 0
}

func (x *MerchantDetail) GetAuditStatus() uint32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *MerchantDetail) GetModifiedAt() uint32 {
	if x != nil {
		return x.ModifiedAt
	}
	return 0
}

func (x *MerchantDetail) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// MerchantDetailIn 获取商户详情-请求消息
type MerchantDetailIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId uint32 `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID,与商户编号互斥
	MerchantNo string `protobuf:"bytes,2,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`  // 商户编号,与商户ID互斥
}

func (x *MerchantDetailIn) Reset() {
	*x = MerchantDetailIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDetailIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDetailIn) ProtoMessage() {}

func (x *MerchantDetailIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDetailIn.ProtoReflect.Descriptor instead.
func (*MerchantDetailIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{1}
}

func (x *MerchantDetailIn) GetMerchantId() uint32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantDetailIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

// MerchantDetailIn 获取商户详情-响应消息
type MerchantDetailOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *MerchantDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 商户详情
}

func (x *MerchantDetailOut) Reset() {
	*x = MerchantDetailOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDetailOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDetailOut) ProtoMessage() {}

func (x *MerchantDetailOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDetailOut.ProtoReflect.Descriptor instead.
func (*MerchantDetailOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{2}
}

func (x *MerchantDetailOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MerchantDetailOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MerchantDetailOut) GetData() *MerchantDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// MerchantDetailIn 获取商户列表-请求消息
type MerchantListIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户ID
	Page     uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页显示数
}

func (x *MerchantListIn) Reset() {
	*x = MerchantListIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantListIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantListIn) ProtoMessage() {}

func (x *MerchantListIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantListIn.ProtoReflect.Descriptor instead.
func (*MerchantListIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{3}
}

func (x *MerchantListIn) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantListIn) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MerchantListIn) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// MerchantDetailIn 获取商户列表-响应消息
type MerchantListOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *MerchantListOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *MerchantListOut) Reset() {
	*x = MerchantListOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantListOut) ProtoMessage() {}

func (x *MerchantListOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantListOut.ProtoReflect.Descriptor instead.
func (*MerchantListOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{4}
}

func (x *MerchantListOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MerchantListOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MerchantListOut) GetData() *MerchantListOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// MerchantApplyIn 商户进件-请求消息
type MerchantApplyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel       bool                                           `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`                  // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel       string                                         `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`                   // 支付通道
	UserId           uint32                                         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                              // 用户ID
	MerchantNo       string                                         `protobuf:"bytes,4,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`                   // 商户编号
	NotifyUrl        string                                         `protobuf:"bytes,5,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`                      // 商户进件通知地址
	AlipayApplyData  *MerchantApplyIn_MerchantApplyDataForAlipayZFT `protobuf:"bytes,30,opt,name=alipay_apply_data,json=alipayApplyData,proto3" json:"alipay_apply_data,omitempty"` // (支付宝直付通)支付通道商户申请数据, 支付渠道为`支付宝-直付通`必选
	WxpayRegData     *MerchantApplyIn_MerchantApplyDataForWxpaySFT  `protobuf:"bytes,31,opt,name=wxpay_reg_data,json=wxpayRegData,proto3" json:"wxpay_reg_data,omitempty"`          // (微信支付收付通)支付通道商户申请数据
	SkipUserChecking bool                                           `protobuf:"varint,50,opt,name=skip_user_checking,json=skipUserChecking,proto3" json:"skip_user_checking,omitempty"`
}

func (x *MerchantApplyIn) Reset() {
	*x = MerchantApplyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn) ProtoMessage() {}

func (x *MerchantApplyIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5}
}

func (x *MerchantApplyIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *MerchantApplyIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *MerchantApplyIn) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantApplyIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *MerchantApplyIn) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *MerchantApplyIn) GetAlipayApplyData() *MerchantApplyIn_MerchantApplyDataForAlipayZFT {
	if x != nil {
		return x.AlipayApplyData
	}
	return nil
}

func (x *MerchantApplyIn) GetWxpayRegData() *MerchantApplyIn_MerchantApplyDataForWxpaySFT {
	if x != nil {
		return x.WxpayRegData
	}
	return nil
}

func (x *MerchantApplyIn) GetSkipUserChecking() bool {
	if x != nil {
		return x.SkipUserChecking
	}
	return false
}

// MerchantApplyQueryIn 商户进件-请求消息
type MerchantApplyOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *MerchantApplyOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *MerchantApplyOut) Reset() {
	*x = MerchantApplyOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyOut) ProtoMessage() {}

func (x *MerchantApplyOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyOut.ProtoReflect.Descriptor instead.
func (*MerchantApplyOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{6}
}

func (x *MerchantApplyOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MerchantApplyOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MerchantApplyOut) GetData() *MerchantApplyOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// MerchantApplyQueryIn 商户进件查询-请求消息
type MerchantApplyQueryIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`  // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`   // 支付通道
	RegApplyNo string `protobuf:"bytes,3,opt,name=reg_apply_no,json=regApplyNo,proto3" json:"reg_apply_no,omitempty"` // 商户进件申请单号, 与`商户编号`互斥
	MerchantNo string `protobuf:"bytes,4,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`   // 商户编号, 与`商户进件申请单号`互斥
}

func (x *MerchantApplyQueryIn) Reset() {
	*x = MerchantApplyQueryIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyQueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyQueryIn) ProtoMessage() {}

func (x *MerchantApplyQueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyQueryIn.ProtoReflect.Descriptor instead.
func (*MerchantApplyQueryIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{7}
}

func (x *MerchantApplyQueryIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *MerchantApplyQueryIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *MerchantApplyQueryIn) GetRegApplyNo() string {
	if x != nil {
		return x.RegApplyNo
	}
	return ""
}

func (x *MerchantApplyQueryIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

// MerchantApplyQueryOut 商户进件查询-响应消息
type MerchantApplyQueryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *MerchantApplyQueryOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *MerchantApplyQueryOut) Reset() {
	*x = MerchantApplyQueryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyQueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyQueryOut) ProtoMessage() {}

func (x *MerchantApplyQueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyQueryOut.ProtoReflect.Descriptor instead.
func (*MerchantApplyQueryOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{8}
}

func (x *MerchantApplyQueryOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MerchantApplyQueryOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MerchantApplyQueryOut) GetData() *MerchantApplyQueryOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// NotifyIn 支付通知-请求消息
type NotifyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannel                   string                                 `protobuf:"bytes,1,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`                                                             // 支付通道
	NotifyType                   string                                 `protobuf:"bytes,2,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`                                                             // 通知类型
	AlipayMerchantApplyNotifyMsg *NotifyIn_AlipayMerchantApplyNotifyMsg `protobuf:"bytes,3,opt,name=alipay_merchant_apply_notify_msg,json=alipayMerchantApplyNotifyMsg,proto3" json:"alipay_merchant_apply_notify_msg,omitempty"` // 支付宝-直付通: 商户进件通知消息
	AlipayPayNotifyMsg           *NotifyIn_AlipayPayNotifyMsg           `protobuf:"bytes,4,opt,name=alipay_pay_notify_msg,json=alipayPayNotifyMsg,proto3" json:"alipay_pay_notify_msg,omitempty"`                                 // 支付宝-直付通/商户直连: 支付通知消息
	WxpayMerchantApplyNotifyMsg  *NotifyIn_WxpayMerchantApplyNotifyMsg  `protobuf:"bytes,5,opt,name=wxpay_merchant_apply_notify_msg,json=wxpayMerchantApplyNotifyMsg,proto3" json:"wxpay_merchant_apply_notify_msg,omitempty"`    // 微信支付-收付通: 商户进件通知消息
	WxpayPayNotifyMsg            *NotifyIn_WxpayPayNotifyMsg            `protobuf:"bytes,6,opt,name=wxpay_pay_notify_msg,json=wxpayPayNotifyMsg,proto3" json:"wxpay_pay_notify_msg,omitempty"`                                    // 微信支付-收付通: 支付通知消息
}

func (x *NotifyIn) Reset() {
	*x = NotifyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyIn) ProtoMessage() {}

func (x *NotifyIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyIn.ProtoReflect.Descriptor instead.
func (*NotifyIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{9}
}

func (x *NotifyIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *NotifyIn) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *NotifyIn) GetAlipayMerchantApplyNotifyMsg() *NotifyIn_AlipayMerchantApplyNotifyMsg {
	if x != nil {
		return x.AlipayMerchantApplyNotifyMsg
	}
	return nil
}

func (x *NotifyIn) GetAlipayPayNotifyMsg() *NotifyIn_AlipayPayNotifyMsg {
	if x != nil {
		return x.AlipayPayNotifyMsg
	}
	return nil
}

func (x *NotifyIn) GetWxpayMerchantApplyNotifyMsg() *NotifyIn_WxpayMerchantApplyNotifyMsg {
	if x != nil {
		return x.WxpayMerchantApplyNotifyMsg
	}
	return nil
}

func (x *NotifyIn) GetWxpayPayNotifyMsg() *NotifyIn_WxpayPayNotifyMsg {
	if x != nil {
		return x.WxpayPayNotifyMsg
	}
	return nil
}

// PayIn 支付-请求消息
type PayIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel    bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`           // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel    string `protobuf:"bytes,3,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`            // 支付通道
	PayScene      string `protobuf:"bytes,4,opt,name=pay_scene,json=payScene,proto3" json:"pay_scene,omitempty"`                  // 支付场景
	MerchantNo    string `protobuf:"bytes,5,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`            // 商户号
	OutTradeNo    string `protobuf:"bytes,6,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`          // 商户订单号
	TotalAmount   uint32 `protobuf:"varint,7,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`        // 订单总金额,单位分, eg: 1; 123
	Subject       string `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`                                    // 订单标题
	Body          string `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`                                          // 订单附加信息
	NotifyUrl     string `protobuf:"bytes,10,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`              // 应用回调通知地址
	ProfitSharing uint32 `protobuf:"varint,11,opt,name=profit_sharing,json=profitSharing,proto3" json:"profit_sharing,omitempty"` // 是否分账订单, 0非分账订单; 1分账订单
	QuitUrl       string `protobuf:"bytes,12,opt,name=quit_url,json=quitUrl,proto3" json:"quit_url,omitempty"`                    // (支付宝/H5必选) 退出支付返回地址
	ReturnUrl     string `protobuf:"bytes,13,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`              // (支付宝/H5必选) 支付完成返回地址
	Extra         string `protobuf:"bytes,14,opt,name=extra,proto3" json:"extra,omitempty"`                                       // 回传参数
	TimeExpire    string `protobuf:"bytes,15,opt,name=time_expire,json=timeExpire,proto3" json:"time_expire,omitempty"`           // 订单绝对超时时间,格式: 5080-12-13 15:36:19
}

func (x *PayIn) Reset() {
	*x = PayIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayIn) ProtoMessage() {}

func (x *PayIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayIn.ProtoReflect.Descriptor instead.
func (*PayIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{10}
}

func (x *PayIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *PayIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *PayIn) GetPayScene() string {
	if x != nil {
		return x.PayScene
	}
	return ""
}

func (x *PayIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayIn) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayIn) GetTotalAmount() uint32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PayIn) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayIn) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PayIn) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *PayIn) GetProfitSharing() uint32 {
	if x != nil {
		return x.ProfitSharing
	}
	return 0
}

func (x *PayIn) GetQuitUrl() string {
	if x != nil {
		return x.QuitUrl
	}
	return ""
}

func (x *PayIn) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *PayIn) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *PayIn) GetTimeExpire() string {
	if x != nil {
		return x.TimeExpire
	}
	return ""
}

// 微信支付-JSAPI支付-微信支付调起参数
type WxpayParamsJSAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`          // 商户申请的公众号对应的appid
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`               // 时间戳
	NonceStr  string `protobuf:"bytes,3,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"` // 随机字符串，不长于32位
	Package   string `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`                   // JSAPI下单接口返回的prepay_id参数值
	SignType  string `protobuf:"bytes,5,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"` // 签名类型
	PaySign   string `protobuf:"bytes,6,opt,name=pay_sign,json=paySign,proto3" json:"pay_sign,omitempty"`    // 签名
}

func (x *WxpayParamsJSAPI) Reset() {
	*x = WxpayParamsJSAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxpayParamsJSAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxpayParamsJSAPI) ProtoMessage() {}

func (x *WxpayParamsJSAPI) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxpayParamsJSAPI.ProtoReflect.Descriptor instead.
func (*WxpayParamsJSAPI) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{11}
}

func (x *WxpayParamsJSAPI) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WxpayParamsJSAPI) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WxpayParamsJSAPI) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *WxpayParamsJSAPI) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *WxpayParamsJSAPI) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *WxpayParamsJSAPI) GetPaySign() string {
	if x != nil {
		return x.PaySign
	}
	return ""
}

// 微信支付-APP支付-微信支付调起参数
type WxpayParamsAPP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepayId  string `protobuf:"bytes,1,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`    // 微信返回的支付交易会话ID
	PartnerId string `protobuf:"bytes,2,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"` // 商户号mchid对应的值
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // 时间戳
	NonceStr  string `protobuf:"bytes,4,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"`    // 随机字符串，不长于32位
	Package   string `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`                      // JSAPI下单接口返回的prepay_id参数值
	Sign      string `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`                            // 签名
}

func (x *WxpayParamsAPP) Reset() {
	*x = WxpayParamsAPP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxpayParamsAPP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxpayParamsAPP) ProtoMessage() {}

func (x *WxpayParamsAPP) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxpayParamsAPP.ProtoReflect.Descriptor instead.
func (*WxpayParamsAPP) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{12}
}

func (x *WxpayParamsAPP) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *WxpayParamsAPP) GetPartnerId() string {
	if x != nil {
		return x.PartnerId
	}
	return ""
}

func (x *WxpayParamsAPP) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WxpayParamsAPP) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *WxpayParamsAPP) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *WxpayParamsAPP) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// PayOut 支付-响应消息
type PayOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *PayOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *PayOut) Reset() {
	*x = PayOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOut) ProtoMessage() {}

func (x *PayOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOut.ProtoReflect.Descriptor instead.
func (*PayOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{13}
}

func (x *PayOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayOut) GetData() *PayOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 支付查询-请求消息
type PayQueryIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`  // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`   // 支付通道
	MerchantNo string `protobuf:"bytes,3,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`   // 商户号
	OutTradeNo string `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"` // 商户订单号
	TradeNo    string `protobuf:"bytes,5,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`            // 订单号
}

func (x *PayQueryIn) Reset() {
	*x = PayQueryIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayQueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayQueryIn) ProtoMessage() {}

func (x *PayQueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayQueryIn.ProtoReflect.Descriptor instead.
func (*PayQueryIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{14}
}

func (x *PayQueryIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *PayQueryIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *PayQueryIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayQueryIn) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayQueryIn) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

// 支付查询-响应消息
type PayQueryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *PayQueryOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *PayQueryOut) Reset() {
	*x = PayQueryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayQueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayQueryOut) ProtoMessage() {}

func (x *PayQueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayQueryOut.ProtoReflect.Descriptor instead.
func (*PayQueryOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{15}
}

func (x *PayQueryOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayQueryOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayQueryOut) GetData() *PayQueryOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// RefundIn 退款-请求消息
type RefundIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel   bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`       // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel   string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`        // 支付通道
	MerchantNo   string `protobuf:"bytes,3,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`        // 商户号
	OutTradeNo   string `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`      // 商户订单号
	RefundAmount uint32 `protobuf:"varint,5,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"` // 退款金额,单位分, eg: 1; 123
	RefundReason string `protobuf:"bytes,6,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason,omitempty"`  // 退款原因
	NotifyUrl    string `protobuf:"bytes,7,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`           // 退款结果通知地址
}

func (x *RefundIn) Reset() {
	*x = RefundIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundIn) ProtoMessage() {}

func (x *RefundIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundIn.ProtoReflect.Descriptor instead.
func (*RefundIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{16}
}

func (x *RefundIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *RefundIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *RefundIn) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *RefundIn) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *RefundIn) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *RefundIn) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *RefundIn) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

// RefundOut 退款-响应消息
type RefundOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *RefundOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *RefundOut) Reset() {
	*x = RefundOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundOut) ProtoMessage() {}

func (x *RefundOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundOut.ProtoReflect.Descriptor instead.
func (*RefundOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{17}
}

func (x *RefundOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefundOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RefundOut) GetData() *RefundOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// RefundQueryIn 退款查询-请求消息
type RefundQueryIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"` // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`  // 支付通道, alipay_zft:支付宝-直付通, alipay_merchant:支付宝-商户直连
	RequestNo  string `protobuf:"bytes,3,opt,name=request_no,json=requestNo,proto3" json:"request_no,omitempty"`     // 退款请求号(业务操作成功时)
}

func (x *RefundQueryIn) Reset() {
	*x = RefundQueryIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundQueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundQueryIn) ProtoMessage() {}

func (x *RefundQueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundQueryIn.ProtoReflect.Descriptor instead.
func (*RefundQueryIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{18}
}

func (x *RefundQueryIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *RefundQueryIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *RefundQueryIn) GetRequestNo() string {
	if x != nil {
		return x.RequestNo
	}
	return ""
}

// RefundQueryOut 退款查询-响应消息
type RefundQueryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *RefundQueryOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *RefundQueryOut) Reset() {
	*x = RefundQueryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundQueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundQueryOut) ProtoMessage() {}

func (x *RefundQueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundQueryOut.ProtoReflect.Descriptor instead.
func (*RefundQueryOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{19}
}

func (x *RefundQueryOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefundQueryOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RefundQueryOut) GetData() *RefundQueryOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// AmtSettleIn 资金结算-请求消息
type AmtSettleIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel  bool                     `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`   // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel  string                   `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`    // 支付通道, alipay_zft:支付宝-直付通, alipay_merchant:支付宝-商户直连
	OutTradeNo  string                   `protobuf:"bytes,3,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`  // 商户订单号
	Amount      uint32                   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`                             // (optional) 结算金额, 指定的结算金额
	ExtraParams *AmtSettleIn_ExtraParams `protobuf:"bytes,6,opt,name=extra_params,json=extraParams,proto3" json:"extra_params,omitempty"` // (optional) 拓展参数
}

func (x *AmtSettleIn) Reset() {
	*x = AmtSettleIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmtSettleIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmtSettleIn) ProtoMessage() {}

func (x *AmtSettleIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmtSettleIn.ProtoReflect.Descriptor instead.
func (*AmtSettleIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{20}
}

func (x *AmtSettleIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *AmtSettleIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *AmtSettleIn) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *AmtSettleIn) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AmtSettleIn) GetExtraParams() *AmtSettleIn_ExtraParams {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

// AmtSettleOut 资金结算-响应消息
type AmtSettleOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *AmtSettleOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *AmtSettleOut) Reset() {
	*x = AmtSettleOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmtSettleOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmtSettleOut) ProtoMessage() {}

func (x *AmtSettleOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmtSettleOut.ProtoReflect.Descriptor instead.
func (*AmtSettleOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{21}
}

func (x *AmtSettleOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AmtSettleOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AmtSettleOut) GetData() *AmtSettleOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// TransferInfo 分账方信息
type TransferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo string `protobuf:"bytes,1,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"` // 商户号
	Account    string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`                         // 分账方账号
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               // 分账方名称
	// Types that are assignable to Value:
	//
	//	*TransferInfo_Rate
	//	*TransferInfo_Amount
	Value isTransferInfo_Value `protobuf_oneof:"value"`
	Desc  string               `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"` // 分账描述
}

func (x *TransferInfo) Reset() {
	*x = TransferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInfo) ProtoMessage() {}

func (x *TransferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInfo.ProtoReflect.Descriptor instead.
func (*TransferInfo) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{22}
}

func (x *TransferInfo) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *TransferInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *TransferInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *TransferInfo) GetValue() isTransferInfo_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TransferInfo) GetRate() float64 {
	if x, ok := x.GetValue().(*TransferInfo_Rate); ok {
		return x.Rate
	}
	return 0
}

func (x *TransferInfo) GetAmount() float64 {
	if x, ok := x.GetValue().(*TransferInfo_Amount); ok {
		return x.Amount
	}
	return 0
}

func (x *TransferInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type isTransferInfo_Value interface {
	isTransferInfo_Value()
}

type TransferInfo_Rate struct {
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3,oneof"` // 分账比例,值的范围(0.00, 100],精度0.01,仅对分账类型:按比例分账(rate)
}

type TransferInfo_Amount struct {
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3,oneof"` // 分账金额,仅对分账类型:按金额分账(amt)
}

func (*TransferInfo_Rate) isTransferInfo_Value() {}

func (*TransferInfo_Amount) isTransferInfo_Value() {}

// OrderSettleIn 订单结算-请求消息
type OrderSettleIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel       bool                            `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`                  // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel       string                          `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`                   // 支付通道
	OutTradeNo       string                          `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`                 // 商户订单号
	SettlementParams *OrderSettleIn_SettlementParams `protobuf:"bytes,5,opt,name=settlement_params,json=settlementParams,proto3" json:"settlement_params,omitempty"` // 分账参数
}

func (x *OrderSettleIn) Reset() {
	*x = OrderSettleIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleIn) ProtoMessage() {}

func (x *OrderSettleIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleIn.ProtoReflect.Descriptor instead.
func (*OrderSettleIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{23}
}

func (x *OrderSettleIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *OrderSettleIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *OrderSettleIn) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *OrderSettleIn) GetSettlementParams() *OrderSettleIn_SettlementParams {
	if x != nil {
		return x.SettlementParams
	}
	return nil
}

// OrderSettleOut 订单结算-响应消息
type OrderSettleOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *OrderSettleOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *OrderSettleOut) Reset() {
	*x = OrderSettleOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleOut) ProtoMessage() {}

func (x *OrderSettleOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleOut.ProtoReflect.Descriptor instead.
func (*OrderSettleOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{24}
}

func (x *OrderSettleOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderSettleOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderSettleOut) GetData() *OrderSettleOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// OrderSettleQueryIn 订单查询-请求消息
type OrderSettleQueryIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel   bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"`        // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	OutRequestNo string `protobuf:"bytes,2,opt,name=out_request_no,json=outRequestNo,proto3" json:"out_request_no,omitempty"` // 订单结算请求号
}

func (x *OrderSettleQueryIn) Reset() {
	*x = OrderSettleQueryIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleQueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleQueryIn) ProtoMessage() {}

func (x *OrderSettleQueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleQueryIn.ProtoReflect.Descriptor instead.
func (*OrderSettleQueryIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{25}
}

func (x *OrderSettleQueryIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *OrderSettleQueryIn) GetOutRequestNo() string {
	if x != nil {
		return x.OutRequestNo
	}
	return ""
}

// OrderSettleQueryOut 订单查询-响应消息
type OrderSettleQueryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *OrderSettleQueryOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *OrderSettleQueryOut) Reset() {
	*x = OrderSettleQueryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleQueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleQueryOut) ProtoMessage() {}

func (x *OrderSettleQueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleQueryOut.ProtoReflect.Descriptor instead.
func (*OrderSettleQueryOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{26}
}

func (x *OrderSettleQueryOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderSettleQueryOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderSettleQueryOut) GetData() *OrderSettleQueryOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// BillQueryIn 账单查询-请求消息
type BillQueryIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptChannel bool   `protobuf:"varint,1,opt,name=opt_channel,json=optChannel,proto3" json:"opt_channel,omitempty"` // (技术支持专用)是否显示支付通道响应结果, true请求支付通道; false不请求支付通道, 默认值false
	PayChannel string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`  // 支付通道
	Date       string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                // 账单日期 0000-00-00
}

func (x *BillQueryIn) Reset() {
	*x = BillQueryIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillQueryIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillQueryIn) ProtoMessage() {}

func (x *BillQueryIn) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillQueryIn.ProtoReflect.Descriptor instead.
func (*BillQueryIn) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{27}
}

func (x *BillQueryIn) GetOptChannel() bool {
	if x != nil {
		return x.OptChannel
	}
	return false
}

func (x *BillQueryIn) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *BillQueryIn) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// BillQueryOut 账单查询-响应消息
type BillQueryOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *BillQueryOut_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *BillQueryOut) Reset() {
	*x = BillQueryOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillQueryOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillQueryOut) ProtoMessage() {}

func (x *BillQueryOut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillQueryOut.ProtoReflect.Descriptor instead.
func (*BillQueryOut) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{28}
}

func (x *BillQueryOut) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BillQueryOut) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BillQueryOut) GetData() *BillQueryOut_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type MerchantListOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     uint32            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                          // 结果总数
	PageTotal uint32            `protobuf:"varint,2,opt,name=page_total,json=pageTotal,proto3" json:"page_total,omitempty"` // 总页数
	List      []*MerchantDetail `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`                             // 商户列表
}

func (x *MerchantListOut_Data) Reset() {
	*x = MerchantListOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantListOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantListOut_Data) ProtoMessage() {}

func (x *MerchantListOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantListOut_Data.ProtoReflect.Descriptor instead.
func (*MerchantListOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MerchantListOut_Data) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MerchantListOut_Data) GetPageTotal() uint32 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

func (x *MerchantListOut_Data) GetList() []*MerchantDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type MerchantApplyIn_MerchantApplyDataForAlipayZFT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                                                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                 // 进件的二级商户名称。一般情况下要与证件的名称相同。个体工商户类型可以放宽到法人名称
	AliasName            string                                                           `protobuf:"bytes,2,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`                                      // 商户别名。支付宝账单中的商户名称会展示此处设置的别名,如果涉及支付宝APP内的支付,支付结果页也会展示该别名.如果涉及当面付场景,请填写线下店铺名称
	MerchantType         string                                                           `protobuf:"bytes,3,opt,name=merchant_type,json=merchantType,proto3" json:"merchant_type,omitempty"`                             // 商户类型: 01: 企业; cert_type填写201(营业执照);cert_no填写营业执照号; 02:事业单位:cert_type填写218(事业单位法人证书);cert_no填写事业单位法人证书编号; 03:民办非企业组织:cert_type填写204(民办非企业登记证书);cert_no填写民办非企业登记证书编号; 04:社会团体:cert_type填写206(社会团体法人登记证书);cert_no填写社会团体法人登记证书编号; 05:党政及国家机关:cert_type填写219(党政机关批准设立文件/行政执法主体资格证);cert_no填写党政机关批准设立文件/行政执法主体资格证编号; 06:个人商户:cert_type填写100(个人身份证);cert_no填写个人身份证号码; 07:个体工商户:cert_type填写201(营业执照);cert_no填写营业执照编号;
	Mcc                  string                                                           `protobuf:"bytes,4,opt,name=mcc,proto3" json:"mcc,omitempty"`                                                                   // 商户类别码mcc,参见https://gw.alipayobjects.com/os/bmw-prod/b28421ce-0ddf-422f-9e9c-c2c3c7f30c73.xlsx 特殊行业要按照MCC说明中的资质一栏上传辅助资质,辅助资质要在qualifications中上传,会有人工审核。
	ExternalId           string                                                           `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`                                   // 商户编号,由机构定义,需要保证在机构下唯一。与smid二选一必填
	DefaultSettleRule    *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule `protobuf:"bytes,6,opt,name=default_settle_rule,json=defaultSettleRule,proto3" json:"default_settle_rule,omitempty"`            // 默认结算规则。当调用收单接口,结算条款中设置默认结算规则时,交易资金将结算至此处设置的默认结算目标账户中。其详细描述及收单接口传参示例参考功能包文档
	AlipayLogonId        string                                                           `protobuf:"bytes,7,opt,name=alipay_logon_id,json=alipayLogonId,proto3" json:"alipay_logon_id,omitempty"`                        // 结算支付宝账号,结算账号使用支付宝账号时必填.本字段要求与商户名称name同名,且是实名认证支付宝账户(个体工商户可以与name或cert_name相同)
	BindingAlipayLogonId string                                                           `protobuf:"bytes,8,opt,name=binding_alipay_logon_id,json=bindingAlipayLogonId,proto3" json:"binding_alipay_logon_id,omitempty"` // 签约支付宝账户,用于协议确认,及后续二级商户增值产品服务签约时使用。本字段要求与商户名称name同名(个体工商户可以与name或cert_name相同),且是实名认证支付宝账户
	ContactInfos         *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo       `protobuf:"bytes,9,opt,name=contact_infos,json=contactInfos,proto3" json:"contact_infos,omitempty"`                             // 商户联系人信息。在本业务中,ContactInfo对象中联系人姓名、手机号必填,其他选填
	Sites                []*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo        `protobuf:"bytes,10,rep,name=sites,proto3" json:"sites,omitempty"`                                                              // 商户站点信息,包括网站、app、小程序。商户使用服务包含电脑支付或wap支付时,必须填充一个类型为01(网站)的SiteInfo对象,site_type/site_url/site_name必填;当包含app支付时,必须至少填充类型为02(APP)或06(支付宝小程序)中一种类型的SiteInfo对象,site_type/site_name必填
	Service              []string                                                         `protobuf:"bytes,11,rep,name=service,proto3" json:"service,omitempty"`                                                          // 商户使用服务,可选值有:当面付、app支付、wap支付、电脑支付、线上资金预授权、新当面资金授权、商户代扣、小程序支付。其值会影响其他字段必填性,详见其他字段描述
	BusinessAddress      *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo       `protobuf:"bytes,12,opt,name=business_address,json=businessAddress,proto3" json:"business_address,omitempty"`                   // 经营地址。当使用当面付服务时,本字段要求必填。地址对象中省、市、区、地址必填,其余选填
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForAlipayZFT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForAlipayZFT.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 0}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetMerchantType() string {
	if x != nil {
		return x.MerchantType
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetMcc() string {
	if x != nil {
		return x.Mcc
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetDefaultSettleRule() *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule {
	if x != nil {
		return x.DefaultSettleRule
	}
	return nil
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetAlipayLogonId() string {
	if x != nil {
		return x.AlipayLogonId
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetBindingAlipayLogonId() string {
	if x != nil {
		return x.BindingAlipayLogonId
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetContactInfos() *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo {
	if x != nil {
		return x.ContactInfos
	}
	return nil
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetSites() []*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetService() []string {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT) GetBusinessAddress() *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo {
	if x != nil {
		return x.BusinessAddress
	}
	return nil
}

// 微信支付-收付通: 商户进件信息
type MerchantApplyIn_MerchantApplyDataForWxpaySFT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MerchantApplyIn_MerchantApplyDataForWxpaySFT) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForWxpaySFT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForWxpaySFT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForWxpaySFT) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForWxpaySFT) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForWxpaySFT.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForWxpaySFT) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 1}
}

func (x *MerchantApplyIn_MerchantApplyDataForWxpaySFT) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultSettleType   string `protobuf:"bytes,1,opt,name=default_settle_type,json=defaultSettleType,proto3" json:"default_settle_type,omitempty"`       // 默认结算类型,可选值有bankCard/alipayAccount。bankCard表示结算到银行卡;alipayAccount表示结算到支付宝账号
	DefaultSettleTarget string `protobuf:"bytes,2,opt,name=default_settle_target,json=defaultSettleTarget,proto3" json:"default_settle_target,omitempty"` // 默认结算目标。当默认结算类型为bankCard时填写银行卡卡号,其值需在进件填写的结算银行卡范围内;当默认结算类型为alipayAccount时填写支付宝账号登录号,其值需在进件填写的结算支付宝账号范围内。
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) GetDefaultSettleType() string {
	if x != nil {
		return x.DefaultSettleType
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule) GetDefaultSettleTarget() string {
	if x != nil {
		return x.DefaultSettleTarget
	}
	return ""
}

type MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                           // 联系人名字
	Phone    string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`                         // 电话
	Mobile   string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                       // 手机号。必填与否参见外层对象描述,无特别说明认为是非必填
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                         // 电子邮箱
	IdCardNo string `protobuf:"bytes,5,opt,name=id_card_no,json=idCardNo,proto3" json:"id_card_no,omitempty"` // 身份证号
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 0, 1}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo) GetIdCardNo() string {
	if x != nil {
		return x.IdCardNo
	}
	return ""
}

type MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteType string `protobuf:"bytes,1,opt,name=site_type,json=siteType,proto3" json:"site_type,omitempty"` // 网站:01 APP:02 服务窗:03 公众号:04 其他:05 支付宝小程序:06
	SiteUrl  string `protobuf:"bytes,2,opt,name=site_url,json=siteUrl,proto3" json:"site_url,omitempty"`    // 站点地址
	SiteName string `protobuf:"bytes,3,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty"` // 站点名称
	Account  string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`                   // 测试账号
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`                 // 测试密码
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 0, 2}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) GetSiteType() string {
	if x != nil {
		return x.SiteType
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceCode string `protobuf:"bytes,1,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"` // 省份编码。请按照https://gw.alipayobjects.com/os/basement_prod/253c4dcb-b8a4-4a1e-8be2-79e191a9b6db.xlsx 表格中内容填写。
	CityCode     string `protobuf:"bytes,2,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`             // 城市编码。请按照https://gw.alipayobjects.com/os/basement_prod/253c4dcb-b8a4-4a1e-8be2-79e191a9b6db.xlsx 表格中内容填写。
	DistrictCode string `protobuf:"bytes,3,opt,name=district_code,json=districtCode,proto3" json:"district_code,omitempty"` // 区县编码。请按照https://gw.alipayobjects.com/os/basement_prod/253c4dcb-b8a4-4a1e-8be2-79e191a9b6db.xlsx 表格中内容填写。
	Address      string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) Reset() {
	*x = MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) ProtoMessage() {}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo.ProtoReflect.Descriptor instead.
func (*MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{5, 0, 3}
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) GetCityCode() string {
	if x != nil {
		return x.CityCode
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) GetDistrictCode() string {
	if x != nil {
		return x.DistrictCode
	}
	return ""
}

func (x *MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MerchantApplyOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegApplyNo string          `protobuf:"bytes,1,opt,name=reg_apply_no,json=regApplyNo,proto3" json:"reg_apply_no,omitempty"` // 商户进件单号
	MerchantNo string          `protobuf:"bytes,2,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`   // 商户编号
	Result     bool            `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                            // 业务操作结果
	Error      string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`                               // 业务操作结果
	PayResp    *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`           // 支付通道响应数据
}

func (x *MerchantApplyOut_Data) Reset() {
	*x = MerchantApplyOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyOut_Data) ProtoMessage() {}

func (x *MerchantApplyOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyOut_Data.ProtoReflect.Descriptor instead.
func (*MerchantApplyOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{6, 0}
}

func (x *MerchantApplyOut_Data) GetRegApplyNo() string {
	if x != nil {
		return x.RegApplyNo
	}
	return ""
}

func (x *MerchantApplyOut_Data) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *MerchantApplyOut_Data) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MerchantApplyOut_Data) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MerchantApplyOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type MerchantApplyQueryOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegApplyNo  string          `protobuf:"bytes,1,opt,name=reg_apply_no,json=regApplyNo,proto3" json:"reg_apply_no,omitempty"`   // 商户进件申请单号
	MerchantNo  string          `protobuf:"bytes,2,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`     // 商户编号
	ApplyStatus uint32          `protobuf:"varint,3,opt,name=apply_status,json=applyStatus,proto3" json:"apply_status,omitempty"` // 商户进件状态, 0待进件;1进件中;2进件成功;3进件失败
	PayResp     *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`             // 支付通道响应数据
}

func (x *MerchantApplyQueryOut_Data) Reset() {
	*x = MerchantApplyQueryOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyQueryOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyQueryOut_Data) ProtoMessage() {}

func (x *MerchantApplyQueryOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyQueryOut_Data.ProtoReflect.Descriptor instead.
func (*MerchantApplyQueryOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{8, 0}
}

func (x *MerchantApplyQueryOut_Data) GetRegApplyNo() string {
	if x != nil {
		return x.RegApplyNo
	}
	return ""
}

func (x *MerchantApplyQueryOut_Data) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *MerchantApplyQueryOut_Data) GetApplyStatus() uint32 {
	if x != nil {
		return x.ApplyStatus
	}
	return 0
}

func (x *MerchantApplyQueryOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type NotifyIn_AlipayMerchantApplyNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Charset      string `protobuf:"bytes,2,opt,name=charset,proto3" json:"charset,omitempty"`
	SignType     string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	Sign         string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	Version      string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	BizContent   string `protobuf:"bytes,6,opt,name=biz_content,json=bizContent,proto3" json:"biz_content,omitempty"`
	NotifyId     string `protobuf:"bytes,7,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`
	UtcTimestamp string `protobuf:"bytes,8,opt,name=utc_timestamp,json=utcTimestamp,proto3" json:"utc_timestamp,omitempty"`
	MsgMethod    string `protobuf:"bytes,9,opt,name=msg_method,json=msgMethod,proto3" json:"msg_method,omitempty"`
	MsgType      string `protobuf:"bytes,10,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	MsgUid       string `protobuf:"bytes,11,opt,name=msg_uid,json=msgUid,proto3" json:"msg_uid,omitempty"`
	MsgAppId     string `protobuf:"bytes,12,opt,name=msg_app_id,json=msgAppId,proto3" json:"msg_app_id,omitempty"`
	EncryptType  string `protobuf:"bytes,13,opt,name=encrypt_type,json=encryptType,proto3" json:"encrypt_type,omitempty"`
	NotifyType   string `protobuf:"bytes,14,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`
	NotifyTime   string `protobuf:"bytes,15,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`
	AuthAppId    string `protobuf:"bytes,16,opt,name=auth_app_id,json=authAppId,proto3" json:"auth_app_id,omitempty"`
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) Reset() {
	*x = NotifyIn_AlipayMerchantApplyNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyIn_AlipayMerchantApplyNotifyMsg) ProtoMessage() {}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyIn_AlipayMerchantApplyNotifyMsg.ProtoReflect.Descriptor instead.
func (*NotifyIn_AlipayMerchantApplyNotifyMsg) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{9, 0}
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetBizContent() string {
	if x != nil {
		return x.BizContent
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetNotifyId() string {
	if x != nil {
		return x.NotifyId
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetUtcTimestamp() string {
	if x != nil {
		return x.UtcTimestamp
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetMsgMethod() string {
	if x != nil {
		return x.MsgMethod
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetMsgType() string {
	if x != nil {
		return x.MsgType
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetMsgAppId() string {
	if x != nil {
		return x.MsgAppId
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetEncryptType() string {
	if x != nil {
		return x.EncryptType
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetNotifyTime() string {
	if x != nil {
		return x.NotifyTime
	}
	return ""
}

func (x *NotifyIn_AlipayMerchantApplyNotifyMsg) GetAuthAppId() string {
	if x != nil {
		return x.AuthAppId
	}
	return ""
}

type NotifyIn_AlipayPayNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                                        // 支付宝分配给开发者的应用ID。
	Charset           string `protobuf:"bytes,2,opt,name=charset,proto3" json:"charset,omitempty"`                                                 // 编码格式,如 utf-8、gbk、gb2312 等。
	SignType          string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`                               // 商家生成签名字符串所使用的签名算法类型,目前支持 RSA2 和 RSA,推荐使用 RSA2。
	Sign              string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`                                                       // 签名
	Version           string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                                                 // 调用的接口版本,固定为:1.0。
	NotifyTime        string `protobuf:"bytes,6,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`                         // 通知的发送时间。格式为 yyyy-MM-dd HH:mm:ss。
	NotifyType        string `protobuf:"bytes,7,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`                         // 通知的类型
	NotifyId          string `protobuf:"bytes,8,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`                               // 通知校验ID。
	TradeNo           string `protobuf:"bytes,9,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`                                  // 支付宝交易凭证号。
	OutTradeNo        string `protobuf:"bytes,10,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`                      // 原支付请求的商户订单号。
	OutBizNo          string `protobuf:"bytes,11,opt,name=out_biz_no,json=outBizNo,proto3" json:"out_biz_no,omitempty"`                            // 商户业务ID,主要是退款通知中返回退款申请的流水号。
	BuyerId           string `protobuf:"bytes,12,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`                                 // 买家支付宝账号对应的支付宝唯一用户号。以 2088 开头的纯 16 位数字。
	BuyerLogonId      string `protobuf:"bytes,13,opt,name=buyer_logon_id,json=buyerLogonId,proto3" json:"buyer_logon_id,omitempty"`                // 买家支付宝账号。
	SellerId          string `protobuf:"bytes,14,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`                              // 卖家支付宝用户号。
	SellerEmail       string `protobuf:"bytes,15,opt,name=seller_email,json=sellerEmail,proto3" json:"seller_email,omitempty"`                     // 卖家支付宝账号。
	TradeStatus       string `protobuf:"bytes,16,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`                     // 交易目前所处的状态。
	TotalAmount       string `protobuf:"bytes,17,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`                     // 本次交易支付的订单金额,单位为人民币(元)。
	ReceiptAmount     string `protobuf:"bytes,18,opt,name=receipt_amount,json=receiptAmount,proto3" json:"receipt_amount,omitempty"`               // 商家在收益中实际收到的款项,单位人民币(元)。
	InvoiceAmount     string `protobuf:"bytes,19,opt,name=invoice_amount,json=invoiceAmount,proto3" json:"invoice_amount,omitempty"`               // 用户在交易中支付的可开发票的金额。
	BuyerPayAmount    string `protobuf:"bytes,20,opt,name=buyer_pay_amount,json=buyerPayAmount,proto3" json:"buyer_pay_amount,omitempty"`          // 用户在交易中支付的金额。
	PointAmount       string `protobuf:"bytes,21,opt,name=point_amount,json=pointAmount,proto3" json:"point_amount,omitempty"`                     // 使用集分宝支付的金额。
	RefundFee         string `protobuf:"bytes,22,opt,name=refund_fee,json=refundFee,proto3" json:"refund_fee,omitempty"`                           // 退款通知中,返回总退款金额,单位为人民币(元),支持两位小数。
	Subject           string `protobuf:"bytes,23,opt,name=subject,proto3" json:"subject,omitempty"`                                                // 商品的标题/交易标题/订单标题/订单关键字等,是请求时对应的参数,原样通知回来。
	Body              string `protobuf:"bytes,24,opt,name=body,proto3" json:"body,omitempty"`                                                      // 订单的备注、描述、明细等。对应请求时的 body 参数,原样通知回来。
	GmtCreate         string `protobuf:"bytes,25,opt,name=gmt_create,json=gmtCreate,proto3" json:"gmt_create,omitempty"`                           // 该笔交易创建的时间。格式为 yyyy-MM-dd HH:mm:ss。
	GmtPayment        string `protobuf:"bytes,26,opt,name=gmt_payment,json=gmtPayment,proto3" json:"gmt_payment,omitempty"`                        // 该笔交易的买家付款时间。格式为 yyyy-MM-dd HH:mm:ss。
	GmtRefund         string `protobuf:"bytes,27,opt,name=gmt_refund,json=gmtRefund,proto3" json:"gmt_refund,omitempty"`                           // 该笔交易的退款时间。格式 yyyy-MM-dd HH:mm:ss.S。
	GmtClose          string `protobuf:"bytes,28,opt,name=gmt_close,json=gmtClose,proto3" json:"gmt_close,omitempty"`                              // 该笔交易结束时间。格式为 yyyy-MM-dd HH:mm:ss。
	FundBillList      string `protobuf:"bytes,29,opt,name=fund_bill_list,json=fundBillList,proto3" json:"fund_bill_list,omitempty"`                // 支付成功的各个渠道金额信息
	PassbackParams    string `protobuf:"bytes,30,opt,name=passback_params,json=passbackParams,proto3" json:"passback_params,omitempty"`            // 公共回传参数,如果请求时传递了该参数,则返回给商家时会在异步通知时将该参数原样返回。本参数必须进行 UrlEncode 之后才可以发送给支付宝。
	VoucherDetailList string `protobuf:"bytes,31,opt,name=voucher_detail_list,json=voucherDetailList,proto3" json:"voucher_detail_list,omitempty"` // 本交易支付时所有优惠券信息
	AuthAppId         string `protobuf:"bytes,32,opt,name=auth_app_id,json=authAppId,proto3" json:"auth_app_id,omitempty"`                         // 开发者的 app_id，在服务商调用的场景下为授权方的 app_id。
}

func (x *NotifyIn_AlipayPayNotifyMsg) Reset() {
	*x = NotifyIn_AlipayPayNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyIn_AlipayPayNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyIn_AlipayPayNotifyMsg) ProtoMessage() {}

func (x *NotifyIn_AlipayPayNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyIn_AlipayPayNotifyMsg.ProtoReflect.Descriptor instead.
func (*NotifyIn_AlipayPayNotifyMsg) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{9, 1}
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetNotifyTime() string {
	if x != nil {
		return x.NotifyTime
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetNotifyId() string {
	if x != nil {
		return x.NotifyId
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetOutBizNo() string {
	if x != nil {
		return x.OutBizNo
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetBuyerLogonId() string {
	if x != nil {
		return x.BuyerLogonId
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetSellerEmail() string {
	if x != nil {
		return x.SellerEmail
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetReceiptAmount() string {
	if x != nil {
		return x.ReceiptAmount
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetInvoiceAmount() string {
	if x != nil {
		return x.InvoiceAmount
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetBuyerPayAmount() string {
	if x != nil {
		return x.BuyerPayAmount
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetPointAmount() string {
	if x != nil {
		return x.PointAmount
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetRefundFee() string {
	if x != nil {
		return x.RefundFee
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetGmtCreate() string {
	if x != nil {
		return x.GmtCreate
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetGmtPayment() string {
	if x != nil {
		return x.GmtPayment
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetGmtRefund() string {
	if x != nil {
		return x.GmtRefund
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetGmtClose() string {
	if x != nil {
		return x.GmtClose
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetFundBillList() string {
	if x != nil {
		return x.FundBillList
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetPassbackParams() string {
	if x != nil {
		return x.PassbackParams
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetVoucherDetailList() string {
	if x != nil {
		return x.VoucherDetailList
	}
	return ""
}

func (x *NotifyIn_AlipayPayNotifyMsg) GetAuthAppId() string {
	if x != nil {
		return x.AuthAppId
	}
	return ""
}

type NotifyIn_WxpayMerchantApplyNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotifyIn_WxpayMerchantApplyNotifyMsg) Reset() {
	*x = NotifyIn_WxpayMerchantApplyNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyIn_WxpayMerchantApplyNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyIn_WxpayMerchantApplyNotifyMsg) ProtoMessage() {}

func (x *NotifyIn_WxpayMerchantApplyNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyIn_WxpayMerchantApplyNotifyMsg.ProtoReflect.Descriptor instead.
func (*NotifyIn_WxpayMerchantApplyNotifyMsg) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{9, 2}
}

func (x *NotifyIn_WxpayMerchantApplyNotifyMsg) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NotifyIn_WxpayPayNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotifyIn_WxpayPayNotifyMsg) Reset() {
	*x = NotifyIn_WxpayPayNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyIn_WxpayPayNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyIn_WxpayPayNotifyMsg) ProtoMessage() {}

func (x *NotifyIn_WxpayPayNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyIn_WxpayPayNotifyMsg.ProtoReflect.Descriptor instead.
func (*NotifyIn_WxpayPayNotifyMsg) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{9, 3}
}

func (x *NotifyIn_WxpayPayNotifyMsg) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PayOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo string `protobuf:"bytes,1,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`   // 商户编号
	PayChannel string `protobuf:"bytes,2,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`   // 支付通道
	PayScene   string `protobuf:"bytes,3,opt,name=pay_scene,json=payScene,proto3" json:"pay_scene,omitempty"`         // 支付场景
	OutTradeNo string `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"` // 商户订单号
	TradeNo    string `protobuf:"bytes,5,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`            // 订单号
	// Types that are assignable to Payload:
	//
	//	*PayOut_Data_H5Url
	//	*PayOut_Data_Sdk
	//	*PayOut_Data_PcUrl
	//	*PayOut_Data_WxpayParamsJsapi
	//	*PayOut_Data_WxpayParamsApp
	//	*PayOut_Data_WxpayCodeUrl
	Payload isPayOut_Data_Payload `protobuf_oneof:"payload"`
	PayResp *structpb.Value       `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"` // 支付通道响应数据
}

func (x *PayOut_Data) Reset() {
	*x = PayOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOut_Data) ProtoMessage() {}

func (x *PayOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOut_Data.ProtoReflect.Descriptor instead.
func (*PayOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PayOut_Data) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayOut_Data) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *PayOut_Data) GetPayScene() string {
	if x != nil {
		return x.PayScene
	}
	return ""
}

func (x *PayOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (m *PayOut_Data) GetPayload() isPayOut_Data_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *PayOut_Data) GetH5Url() string {
	if x, ok := x.GetPayload().(*PayOut_Data_H5Url); ok {
		return x.H5Url
	}
	return ""
}

func (x *PayOut_Data) GetSdk() string {
	if x, ok := x.GetPayload().(*PayOut_Data_Sdk); ok {
		return x.Sdk
	}
	return ""
}

func (x *PayOut_Data) GetPcUrl() string {
	if x, ok := x.GetPayload().(*PayOut_Data_PcUrl); ok {
		return x.PcUrl
	}
	return ""
}

func (x *PayOut_Data) GetWxpayParamsJsapi() *WxpayParamsJSAPI {
	if x, ok := x.GetPayload().(*PayOut_Data_WxpayParamsJsapi); ok {
		return x.WxpayParamsJsapi
	}
	return nil
}

func (x *PayOut_Data) GetWxpayParamsApp() *WxpayParamsAPP {
	if x, ok := x.GetPayload().(*PayOut_Data_WxpayParamsApp); ok {
		return x.WxpayParamsApp
	}
	return nil
}

func (x *PayOut_Data) GetWxpayCodeUrl() string {
	if x, ok := x.GetPayload().(*PayOut_Data_WxpayCodeUrl); ok {
		return x.WxpayCodeUrl
	}
	return ""
}

func (x *PayOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type isPayOut_Data_Payload interface {
	isPayOut_Data_Payload()
}

type PayOut_Data_H5Url struct {
	H5Url string `protobuf:"bytes,10,opt,name=h5_url,json=h5Url,proto3,oneof"` // 支付通道/支付场景=(alipay_zft|alipay_merchant|wxpay_merchant|wxpay_sft)/H5:H5支付地址
}

type PayOut_Data_Sdk struct {
	Sdk string `protobuf:"bytes,11,opt,name=sdk,proto3,oneof"` // 支付通道/支付场景=alipay_zft/APP:调起SDK字符串
}

type PayOut_Data_PcUrl struct {
	PcUrl string `protobuf:"bytes,12,opt,name=pc_url,json=pcUrl,proto3,oneof"` // 支付通道/支付场景=alipay_zft/PC:电脑支付地址
}

type PayOut_Data_WxpayParamsJsapi struct {
	WxpayParamsJsapi *WxpayParamsJSAPI `protobuf:"bytes,13,opt,name=wxpay_params_jsapi,json=wxpayParamsJsapi,proto3,oneof"` // 微信支付:JSAPI支付:微信支付调起参数
}

type PayOut_Data_WxpayParamsApp struct {
	WxpayParamsApp *WxpayParamsAPP `protobuf:"bytes,15,opt,name=wxpay_params_app,json=wxpayParamsApp,proto3,oneof"` // 微信支付:APP支付:微信支付调起参数
}

type PayOut_Data_WxpayCodeUrl struct {
	WxpayCodeUrl string `protobuf:"bytes,16,opt,name=wxpay_code_url,json=wxpayCodeUrl,proto3,oneof"` // 微信支付:PC支付:此URL用于生成支付二维码，然后提供给用户扫码支付。
}

func (*PayOut_Data_H5Url) isPayOut_Data_Payload() {}

func (*PayOut_Data_Sdk) isPayOut_Data_Payload() {}

func (*PayOut_Data_PcUrl) isPayOut_Data_Payload() {}

func (*PayOut_Data_WxpayParamsJsapi) isPayOut_Data_Payload() {}

func (*PayOut_Data_WxpayParamsApp) isPayOut_Data_Payload() {}

func (*PayOut_Data_WxpayCodeUrl) isPayOut_Data_Payload() {}

type PayQueryOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo     string          `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`              // 订单号
	OutTradeNo  string          `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`   // 商户订单号
	PayChannel  string          `protobuf:"bytes,3,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`     // 支付通道
	PayScene    string          `protobuf:"bytes,4,opt,name=pay_scene,json=payScene,proto3" json:"pay_scene,omitempty"`           // 支付场景
	TotalAmount uint32          `protobuf:"varint,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"` // 订单总金额, 单位:分
	Subject     string          `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`                             // 订单标题
	Body        string          `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`                                   // 订单附加信息
	Extra       string          `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`                                 // 自定义参数
	PayStatus   uint32          `protobuf:"varint,9,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`       // 支付状态
	PayResp     *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`             // 支付通道响应数据
}

func (x *PayQueryOut_Data) Reset() {
	*x = PayQueryOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayQueryOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayQueryOut_Data) ProtoMessage() {}

func (x *PayQueryOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayQueryOut_Data.ProtoReflect.Descriptor instead.
func (*PayQueryOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{15, 0}
}

func (x *PayQueryOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayQueryOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayQueryOut_Data) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *PayQueryOut_Data) GetPayScene() string {
	if x != nil {
		return x.PayScene
	}
	return ""
}

func (x *PayQueryOut_Data) GetTotalAmount() uint32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PayQueryOut_Data) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayQueryOut_Data) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PayQueryOut_Data) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *PayQueryOut_Data) GetPayStatus() uint32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *PayQueryOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type RefundOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    bool            `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                       // 业务操作结果,true业务操作成功,false业务员操作失败
	RequestNo string          `protobuf:"bytes,2,opt,name=request_no,json=requestNo,proto3" json:"request_no,omitempty"` // 退款请求号(业务操作成功时)
	PayResp   *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`      // 支付通道响应数据
}

func (x *RefundOut_Data) Reset() {
	*x = RefundOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundOut_Data) ProtoMessage() {}

func (x *RefundOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundOut_Data.ProtoReflect.Descriptor instead.
func (*RefundOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{17, 0}
}

func (x *RefundOut_Data) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *RefundOut_Data) GetRequestNo() string {
	if x != nil {
		return x.RequestNo
	}
	return ""
}

func (x *RefundOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type RefundQueryOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo      string          `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`                 // 订单号
	OutTradeNo   string          `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`      // 商户订单号
	RefundAmount uint32          `protobuf:"varint,3,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"` // 退款金额,单位分, eg: 1; 123
	RefundReason string          `protobuf:"bytes,4,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason,omitempty"`  // 退款原因
	RefundStatus uint32          `protobuf:"varint,5,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"` // 退款状态, 0未退款;1部分退款中;2部分退款成功;3部分退款失败;4全额退款中;5全额退款成功;6全额退款失败
	PayResp      *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`                // 支付通道响应数据
}

func (x *RefundQueryOut_Data) Reset() {
	*x = RefundQueryOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundQueryOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundQueryOut_Data) ProtoMessage() {}

func (x *RefundQueryOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundQueryOut_Data.ProtoReflect.Descriptor instead.
func (*RefundQueryOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{19, 0}
}

func (x *RefundQueryOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *RefundQueryOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *RefundQueryOut_Data) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *RefundQueryOut_Data) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *RefundQueryOut_Data) GetRefundStatus() uint32 {
	if x != nil {
		return x.RefundStatus
	}
	return 0
}

func (x *RefundQueryOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type AmtSettleIn_ExtraParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmtFreeze bool `protobuf:"varint,1,opt,name=amt_freeze,json=amtFreeze,proto3" json:"amt_freeze,omitempty"` // 是否进行资金冻结
}

func (x *AmtSettleIn_ExtraParams) Reset() {
	*x = AmtSettleIn_ExtraParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmtSettleIn_ExtraParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmtSettleIn_ExtraParams) ProtoMessage() {}

func (x *AmtSettleIn_ExtraParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmtSettleIn_ExtraParams.ProtoReflect.Descriptor instead.
func (*AmtSettleIn_ExtraParams) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{20, 0}
}

func (x *AmtSettleIn_ExtraParams) GetAmtFreeze() bool {
	if x != nil {
		return x.AmtFreeze
	}
	return false
}

type AmtSettleOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannel   string          `protobuf:"bytes,1,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`        // 支付通道
	TradeNo      string          `protobuf:"bytes,2,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`                 // 订单号
	OutTradeNo   string          `protobuf:"bytes,3,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`      // 商户订单号
	RequestNo    string          `protobuf:"bytes,4,opt,name=request_no,json=requestNo,proto3" json:"request_no,omitempty"`           // 确认结算请求流水号
	SettleAmount uint32          `protobuf:"varint,5,opt,name=settle_amount,json=settleAmount,proto3" json:"settle_amount,omitempty"` // 本次实际结算金额
	Result       bool            `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`                                 // 资金结算操作结果, true操作成功;false操作失败
	Signal       int32           `protobuf:"varint,7,opt,name=signal,proto3" json:"signal,omitempty"`                                 // 资金结算标记, -1资金结算失败;0资金结算之前已操作成功;1本次资金结算操作执行成功
	PayResp      *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`                // 支付通道响应数据
}

func (x *AmtSettleOut_Data) Reset() {
	*x = AmtSettleOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmtSettleOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmtSettleOut_Data) ProtoMessage() {}

func (x *AmtSettleOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmtSettleOut_Data.ProtoReflect.Descriptor instead.
func (*AmtSettleOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{21, 0}
}

func (x *AmtSettleOut_Data) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *AmtSettleOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *AmtSettleOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *AmtSettleOut_Data) GetRequestNo() string {
	if x != nil {
		return x.RequestNo
	}
	return ""
}

func (x *AmtSettleOut_Data) GetSettleAmount() uint32 {
	if x != nil {
		return x.SettleAmount
	}
	return 0
}

func (x *AmtSettleOut_Data) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *AmtSettleOut_Data) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *AmtSettleOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type OrderSettleIn_SettlementParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // 分账类型, rate按比例分账;amt按金额分账
	List []*TransferInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` // 分账接收方
}

func (x *OrderSettleIn_SettlementParams) Reset() {
	*x = OrderSettleIn_SettlementParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleIn_SettlementParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleIn_SettlementParams) ProtoMessage() {}

func (x *OrderSettleIn_SettlementParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleIn_SettlementParams.ProtoReflect.Descriptor instead.
func (*OrderSettleIn_SettlementParams) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{23, 0}
}

func (x *OrderSettleIn_SettlementParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderSettleIn_SettlementParams) GetList() []*TransferInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type OrderSettleOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannel       string          `protobuf:"bytes,1,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`                        // 支付通道, alipay_zft:支付宝-直付通, alipay_merchant:支付宝-商户直连
	MerchantNo       string          `protobuf:"bytes,2,opt,name=merchant_no,json=merchantNo,proto3" json:"merchant_no,omitempty"`                        // 商户号
	TradeNo          string          `protobuf:"bytes,3,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`                                 // 订单号
	OutTradeNo       string          `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`                      // 商户订单号
	Result           bool            `protobuf:"varint,5,opt,name=result,proto3" json:"result,omitempty"`                                                 // 订单结算业务操作结果
	PayRespForAmt    *structpb.Value `protobuf:"bytes,90,opt,name=pay_resp_for_amt,json=payRespForAmt,proto3" json:"pay_resp_for_amt,omitempty"`          // 支付通道响应数据
	PayRespForBind   *structpb.Value `protobuf:"bytes,91,opt,name=pay_resp_for_bind,json=payRespForBind,proto3" json:"pay_resp_for_bind,omitempty"`       // 支付通道响应数据
	PayRespForSettle *structpb.Value `protobuf:"bytes,92,opt,name=pay_resp_for_settle,json=payRespForSettle,proto3" json:"pay_resp_for_settle,omitempty"` // 支付通道响应数据
	PayRespForUnbind *structpb.Value `protobuf:"bytes,93,opt,name=pay_resp_for_unbind,json=payRespForUnbind,proto3" json:"pay_resp_for_unbind,omitempty"` // 支付通道响应数据
}

func (x *OrderSettleOut_Data) Reset() {
	*x = OrderSettleOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleOut_Data) ProtoMessage() {}

func (x *OrderSettleOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleOut_Data.ProtoReflect.Descriptor instead.
func (*OrderSettleOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{24, 0}
}

func (x *OrderSettleOut_Data) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *OrderSettleOut_Data) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *OrderSettleOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *OrderSettleOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *OrderSettleOut_Data) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *OrderSettleOut_Data) GetPayRespForAmt() *structpb.Value {
	if x != nil {
		return x.PayRespForAmt
	}
	return nil
}

func (x *OrderSettleOut_Data) GetPayRespForBind() *structpb.Value {
	if x != nil {
		return x.PayRespForBind
	}
	return nil
}

func (x *OrderSettleOut_Data) GetPayRespForSettle() *structpb.Value {
	if x != nil {
		return x.PayRespForSettle
	}
	return nil
}

func (x *OrderSettleOut_Data) GetPayRespForUnbind() *structpb.Value {
	if x != nil {
		return x.PayRespForUnbind
	}
	return nil
}

type OrderSettleQueryOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo      string          `protobuf:"bytes,1,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`            // 订单号
	OutTradeNo   string          `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"` // 商户订单号
	PayChannel   string          `protobuf:"bytes,3,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`   // 支付通道
	SettleStatus int32           `protobuf:"varint,4,opt,name=SettleStatus,proto3" json:"SettleStatus,omitempty"`                // 订单结算状态
	PayResp      *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"`           // 支付通道响应数据
}

func (x *OrderSettleQueryOut_Data) Reset() {
	*x = OrderSettleQueryOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettleQueryOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettleQueryOut_Data) ProtoMessage() {}

func (x *OrderSettleQueryOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettleQueryOut_Data.ProtoReflect.Descriptor instead.
func (*OrderSettleQueryOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{26, 0}
}

func (x *OrderSettleQueryOut_Data) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *OrderSettleQueryOut_Data) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *OrderSettleQueryOut_Data) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *OrderSettleQueryOut_Data) GetSettleStatus() int32 {
	if x != nil {
		return x.SettleStatus
	}
	return 0
}

func (x *OrderSettleQueryOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

type BillQueryOut_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string          `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                         // 账单下载地址
	PayResp *structpb.Value `protobuf:"bytes,99,opt,name=pay_resp,json=payResp,proto3" json:"pay_resp,omitempty"` // 支付通道响应数据
}

func (x *BillQueryOut_Data) Reset() {
	*x = BillQueryOut_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_paymentpb_payment_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillQueryOut_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillQueryOut_Data) ProtoMessage() {}

func (x *BillQueryOut_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_paymentpb_payment_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillQueryOut_Data.ProtoReflect.Descriptor instead.
func (*BillQueryOut_Data) Descriptor() ([]byte, []int) {
	return file_pb_paymentpb_payment_proto_rawDescGZIP(), []int{28, 0}
}

func (x *BillQueryOut_Data) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BillQueryOut_Data) GetPayResp() *structpb.Value {
	if x != nil {
		return x.PayResp
	}
	return nil
}

var File_pb_paymentpb_payment_proto protoreflect.FileDescriptor

var file_pb_paymentpb_payment_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x64, 0x61,
	0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62,
	0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x0a, 0x0a, 0x0e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31,
	0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7,
	0x49, 0x44, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49,
	0x44, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0xcb, 0x01, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0xa9, 0x01, 0x92, 0x41, 0xa2, 0x01, 0x32, 0x9f, 0x01, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe6, 0xa0, 0x87, 0xe8, 0xaf, 0x86, 0x2c, 0x20,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x3b, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4,
	0xe8, 0xbf, 0x9e, 0x3b, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x66, 0x74, 0xe5, 0xbe, 0xae,
	0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2d, 0xe6, 0x94, 0xb6, 0xe4, 0xbb, 0x98,
	0xe9, 0x80, 0x9a, 0x3b, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2d, 0xe5,
	0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0xe0, 0x41, 0x02, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5,
	0x8f, 0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e,
	0x6f, 0x12, 0x5d, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0x92, 0x41, 0x32, 0x32,
	0x30, 0x28, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x29, 0xe5,
	0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0x2c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f,
	0xb7, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f,
	0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x95,
	0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x2d, 0x92, 0x41, 0x2a, 0x32, 0x28, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0x2c, 0x31, 0xe6, 0x94, 0xb6, 0xe5, 0x8d, 0x95, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7,
	0x3b, 0x32, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0x52, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5b, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x39, 0x92, 0x41, 0x36, 0x32, 0x34, 0x28, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x29, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b,
	0xe4, 0xbb, 0xb6, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x28,
	0xe6, 0x9c, 0x80, 0xe8, 0xbf, 0x91, 0xe4, 0xb8, 0x80, 0xe6, 0xac, 0xa1, 0x29, 0x52, 0x0a, 0x70,
	0x61, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe4, 0xbf, 0xa1, 0xe6, 0x81,
	0xaf, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a,
	0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x25, 0x92, 0x41, 0x22, 0x32, 0x20, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xb4, 0xb9, 0xe7,
	0x8e, 0x87, 0x2c, 0x20, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe4, 0xb8, 0x87, 0xe5, 0x88, 0x86,
	0xe4, 0xb9, 0x8b, 0xe4, 0xb8, 0x80, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae,
	0xa4, 0xe8, 0xaf, 0x81, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x2b, 0x92,
	0x41, 0x28, 0x32, 0x26, 0x28, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81,
	0x93, 0x29, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa4, 0xe8, 0xaf, 0x81, 0xe9, 0x80,
	0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x79, 0x41, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x32,
	0x26, 0x28, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x29, 0xe5,
	0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa4, 0xe8, 0xaf, 0x81, 0xe9, 0x80, 0x9a, 0xe7, 0x9f,
	0xa5, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79,
	0x4d, 0x73, 0x67, 0x12, 0x6c, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x49, 0x92, 0x41, 0x46, 0x32, 0x44,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe7, 0x8a, 0xb6, 0xe6,
	0x80, 0x81, 0x2c, 0x30, 0xe5, 0xbe, 0x85, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0x3b, 0x31, 0xe8,
	0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe4, 0xb8, 0xad, 0x3b, 0x32, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6,
	0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x33, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe5, 0xa4,
	0xb1, 0xe8, 0xb4, 0xa5, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x39, 0x92, 0x41, 0x36, 0x32, 0x34, 0xe5, 0xae,
	0xa1, 0xe6, 0xa0, 0xb8, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x2c, 0x20, 0x30, 0xe5, 0xbe, 0x85,
	0xe5, 0xae, 0xa1, 0xe6, 0xa0, 0xb8, 0x3b, 0x31, 0xe5, 0xae, 0xa1, 0xe6, 0xa0, 0xb8, 0xe9, 0x80,
	0x9a, 0xe8, 0xbf, 0x87, 0x3b, 0x32, 0xe5, 0xae, 0xa1, 0xe6, 0xa0, 0xb8, 0xe6, 0x8b, 0x92, 0xe7,
	0xbb, 0x9d, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe6, 0x9c, 0x80, 0xe5, 0x90,
	0x8e, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x10,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe5, 0x95, 0x86, 0xe6,
	0x88, 0xb7, 0x49, 0x44, 0x2c, 0xe4, 0xb8, 0x8e, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc,
	0x96, 0xe5, 0x8f, 0xb7, 0xe4, 0xba, 0x92, 0xe6, 0x96, 0xa5, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20,
	0x32, 0x1e, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x2c, 0xe4,
	0xb8, 0x8e, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe4, 0xba, 0x92, 0xe6, 0x96, 0xa5,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x22, 0xeb, 0x01, 0x0a,
	0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f,
	0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3,
	0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a,
	0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1,
	0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0,
	0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61,
	0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x14,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xaf, 0xa6, 0xe6, 0x83,
	0x85, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x12, 0x2f, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16,
	0x92, 0x41, 0x13, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xa2, 0x02, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1f, 0x92, 0x41,
	0x1c, 0x32, 0x11, 0xe9, 0xa1, 0xb5, 0xe7, 0xa0, 0x81, 0x2c, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4,
	0xe5, 0x80, 0xbc, 0x31, 0xa2, 0x02, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x0f, 0xe6, 0xaf, 0x8f,
	0xe9, 0xa1, 0xb5, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x95, 0xb0, 0xa2, 0x02, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xa3, 0x03, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb,
	0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8,
	0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97,
	0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x51,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64,
	0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5,
	0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xb1, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe6, 0x80, 0xbb, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0x92, 0x41, 0x0b, 0x32,
	0x09, 0xe6, 0x80, 0xbb, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe0, 0x41, 0x02, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb4, 0x33, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6,
	0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5,
	0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80,
	0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c,
	0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4,
	0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80,
	0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02,
	0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x76, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x55, 0x92, 0x41,
	0x4f, 0x32, 0x2e, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c,
	0x20, 0xe6, 0x9e, 0x9a, 0xe4, 0xb8, 0xbe, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x2c, 0x20, 0xe6,
	0x9e, 0x9a, 0xe4, 0xb8, 0xbe, 0x3a, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66,
	0x74, 0xf2, 0x02, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02,
	0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x32, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x19, 0x92, 0x41, 0x13, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xa2,
	0x02, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5,
	0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x4f, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30,
	0x92, 0x41, 0x1a, 0x32, 0x18, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb,
	0xb6, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02,
	0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0xbd, 0x01, 0x0a, 0x11,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70,
	0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5a, 0x46, 0x54, 0x42, 0x4f, 0x92, 0x41, 0x4c, 0x32, 0x4a,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x95, 0x86, 0xe6,
	0x88, 0xb7, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x2c, 0x20,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0xb8, 0xa0, 0xe9, 0x81, 0x93, 0xe4, 0xb8, 0xba, 0x60,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98,
	0xe9, 0x80, 0x9a, 0x60, 0xe5, 0xbf, 0x85, 0xe9, 0x80, 0x89, 0x52, 0x0f, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0xa1, 0x01, 0x0a, 0x0e,
	0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x57, 0x78, 0x70,
	0x61, 0x79, 0x53, 0x46, 0x54, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x32, 0x35, 0x28, 0xe5, 0xbe, 0xae,
	0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x94, 0xb6, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0x29, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5,
	0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe6, 0x95, 0xb0, 0xe6, 0x8d,
	0xae, 0x52, 0x0c, 0x77, 0x78, 0x70, 0x61, 0x79, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x6f, 0x0a, 0x12, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x42, 0x41, 0x92, 0x41, 0x2e,
	0x32, 0x2c, 0x28, 0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x29,
	0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe7, 0x95, 0xa5, 0xe8, 0xbf, 0x87, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xa3, 0x80, 0xe6, 0xb5, 0x8b, 0xfa, 0xd2,
	0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x10,
	0x73, 0x6b, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x1a, 0xa3, 0x2b, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5a,
	0x46, 0x54, 0x12, 0x95, 0x01, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x80, 0x01, 0x92, 0x41, 0x7d, 0x32, 0x7b, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe7,
	0x9a, 0x84, 0xe4, 0xba, 0x8c, 0xe7, 0xba, 0xa7, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0xe3, 0x80, 0x82, 0xe4, 0xb8, 0x80, 0xe8, 0x88, 0xac, 0xe6, 0x83, 0x85,
	0xe5, 0x86, 0xb5, 0xe4, 0xb8, 0x8b, 0xe8, 0xa6, 0x81, 0xe4, 0xb8, 0x8e, 0xe8, 0xaf, 0x81, 0xe4,
	0xbb, 0xb6, 0xe7, 0x9a, 0x84, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe7, 0x9b, 0xb8, 0xe5, 0x90,
	0x8c, 0xe3, 0x80, 0x82, 0xe4, 0xb8, 0xaa, 0xe4, 0xbd, 0x93, 0xe5, 0xb7, 0xa5, 0xe5, 0x95, 0x86,
	0xe6, 0x88, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0x8f, 0xaf, 0xe4, 0xbb, 0xa5, 0xe6,
	0x94, 0xbe, 0xe5, 0xae, 0xbd, 0xe5, 0x88, 0xb0, 0xe6, 0xb3, 0x95, 0xe4, 0xba, 0xba, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xf7, 0x01, 0x0a, 0x0a, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0xd7, 0x01, 0x92, 0x41, 0xd3, 0x01, 0x32, 0xd0, 0x01, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5,
	0x88, 0xab, 0xe5, 0x90, 0x8d, 0xe3, 0x80, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae,
	0x9d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xad, 0xe7, 0x9a, 0x84, 0xe5, 0x95, 0x86,
	0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe4, 0xbc, 0x9a, 0xe5, 0xb1, 0x95, 0xe7,
	0xa4, 0xba, 0xe6, 0xad, 0xa4, 0xe5, 0xa4, 0x84, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe7, 0x9a,
	0x84, 0xe5, 0x88, 0xab, 0xe5, 0x90, 0x8d, 0x2c, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe6, 0xb6,
	0x89, 0xe5, 0x8f, 0x8a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x41, 0x50, 0x50,
	0xe5, 0x86, 0x85, 0xe7, 0x9a, 0x84, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2c, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe9, 0xa1, 0xb5, 0xe4, 0xb9, 0x9f, 0xe4,
	0xbc, 0x9a, 0xe5, 0xb1, 0x95, 0xe7, 0xa4, 0xba, 0xe8, 0xaf, 0xa5, 0xe5, 0x88, 0xab, 0xe5, 0x90,
	0x8d, 0x2e, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe6, 0xb6, 0x89, 0xe5, 0x8f, 0x8a, 0xe5, 0xbd,
	0x93, 0xe9, 0x9d, 0xa2, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x2c, 0xe8, 0xaf,
	0xb7, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe7, 0xba, 0xbf, 0xe4, 0xb8, 0x8b, 0xe5, 0xba, 0x97,
	0xe9, 0x93, 0xba, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0xc2, 0x06, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x9c, 0x06, 0x92,
	0x41, 0x98, 0x06, 0x32, 0x95, 0x06, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0x3a, 0x20, 0x30, 0x31, 0x3a, 0x20, 0xe4, 0xbc, 0x81, 0xe4, 0xb8, 0x9a, 0x3b, 0x20,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x32,
	0x30, 0x31, 0x28, 0xe8, 0x90, 0xa5, 0xe4, 0xb8, 0x9a, 0xe6, 0x89, 0xa7, 0xe7, 0x85, 0xa7, 0x29,
	0x3b, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe8, 0x90,
	0xa5, 0xe4, 0xb8, 0x9a, 0xe6, 0x89, 0xa7, 0xe7, 0x85, 0xa7, 0xe5, 0x8f, 0xb7, 0x3b, 0x20, 0x30,
	0x32, 0x3a, 0xe4, 0xba, 0x8b, 0xe4, 0xb8, 0x9a, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0x3a, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x32, 0x31,
	0x38, 0x28, 0xe4, 0xba, 0x8b, 0xe4, 0xb8, 0x9a, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe6, 0xb3,
	0x95, 0xe4, 0xba, 0xba, 0xe8, 0xaf, 0x81, 0xe4, 0xb9, 0xa6, 0x29, 0x3b, 0x63, 0x65, 0x72, 0x74,
	0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe4, 0xba, 0x8b, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe6, 0xb3, 0x95, 0xe4, 0xba, 0xba, 0xe8, 0xaf, 0x81, 0xe4, 0xb9,
	0xa6, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x3b, 0x20, 0x30, 0x33, 0x3a, 0xe6, 0xb0, 0x91, 0xe5,
	0x8a, 0x9e, 0xe9, 0x9d, 0x9e, 0xe4, 0xbc, 0x81, 0xe4, 0xb8, 0x9a, 0xe7, 0xbb, 0x84, 0xe7, 0xbb,
	0x87, 0x3a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86,
	0x99, 0x32, 0x30, 0x34, 0x28, 0xe6, 0xb0, 0x91, 0xe5, 0x8a, 0x9e, 0xe9, 0x9d, 0x9e, 0xe4, 0xbc,
	0x81, 0xe4, 0xb8, 0x9a, 0xe7, 0x99, 0xbb, 0xe8, 0xae, 0xb0, 0xe8, 0xaf, 0x81, 0xe4, 0xb9, 0xa6,
	0x29, 0x3b, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe6,
	0xb0, 0x91, 0xe5, 0x8a, 0x9e, 0xe9, 0x9d, 0x9e, 0xe4, 0xbc, 0x81, 0xe4, 0xb8, 0x9a, 0xe7, 0x99,
	0xbb, 0xe8, 0xae, 0xb0, 0xe8, 0xaf, 0x81, 0xe4, 0xb9, 0xa6, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7,
	0x3b, 0x20, 0x30, 0x34, 0x3a, 0xe7, 0xa4, 0xbe, 0xe4, 0xbc, 0x9a, 0xe5, 0x9b, 0xa2, 0xe4, 0xbd,
	0x93, 0x3a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86,
	0x99, 0x32, 0x30, 0x36, 0x28, 0xe7, 0xa4, 0xbe, 0xe4, 0xbc, 0x9a, 0xe5, 0x9b, 0xa2, 0xe4, 0xbd,
	0x93, 0xe6, 0xb3, 0x95, 0xe4, 0xba, 0xba, 0xe7, 0x99, 0xbb, 0xe8, 0xae, 0xb0, 0xe8, 0xaf, 0x81,
	0xe4, 0xb9, 0xa6, 0x29, 0x3b, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5,
	0x86, 0x99, 0xe7, 0xa4, 0xbe, 0xe4, 0xbc, 0x9a, 0xe5, 0x9b, 0xa2, 0xe4, 0xbd, 0x93, 0xe6, 0xb3,
	0x95, 0xe4, 0xba, 0xba, 0xe7, 0x99, 0xbb, 0xe8, 0xae, 0xb0, 0xe8, 0xaf, 0x81, 0xe4, 0xb9, 0xa6,
	0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x3b, 0x20, 0x30, 0x35, 0x3a, 0xe5, 0x85, 0x9a, 0xe6, 0x94,
	0xbf, 0xe5, 0x8f, 0x8a, 0xe5, 0x9b, 0xbd, 0xe5, 0xae, 0xb6, 0xe6, 0x9c, 0xba, 0xe5, 0x85, 0xb3,
	0x3a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99,
	0x32, 0x31, 0x39, 0x28, 0xe5, 0x85, 0x9a, 0xe6, 0x94, 0xbf, 0xe6, 0x9c, 0xba, 0xe5, 0x85, 0xb3,
	0xe6, 0x89, 0xb9, 0xe5, 0x87, 0x86, 0xe8, 0xae, 0xbe, 0xe7, 0xab, 0x8b, 0xe6, 0x96, 0x87, 0xe4,
	0xbb, 0xb6, 0x2f, 0xe8, 0xa1, 0x8c, 0xe6, 0x94, 0xbf, 0xe6, 0x89, 0xa7, 0xe6, 0xb3, 0x95, 0xe4,
	0xb8, 0xbb, 0xe4, 0xbd, 0x93, 0xe8, 0xb5, 0x84, 0xe6, 0xa0, 0xbc, 0xe8, 0xaf, 0x81, 0x29, 0x3b,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe5, 0x85, 0x9a,
	0xe6, 0x94, 0xbf, 0xe6, 0x9c, 0xba, 0xe5, 0x85, 0xb3, 0xe6, 0x89, 0xb9, 0xe5, 0x87, 0x86, 0xe8,
	0xae, 0xbe, 0xe7, 0xab, 0x8b, 0xe6, 0x96, 0x87, 0xe4, 0xbb, 0xb6, 0x2f, 0xe8, 0xa1, 0x8c, 0xe6,
	0x94, 0xbf, 0xe6, 0x89, 0xa7, 0xe6, 0xb3, 0x95, 0xe4, 0xb8, 0xbb, 0xe4, 0xbd, 0x93, 0xe8, 0xb5,
	0x84, 0xe6, 0xa0, 0xbc, 0xe8, 0xaf, 0x81, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x3b, 0x20, 0x30,
	0x36, 0x3a, 0xe4, 0xb8, 0xaa, 0xe4, 0xba, 0xba, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0x3a, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x31, 0x30,
	0x30, 0x28, 0xe4, 0xb8, 0xaa, 0xe4, 0xba, 0xba, 0xe8, 0xba, 0xab, 0xe4, 0xbb, 0xbd, 0xe8, 0xaf,
	0x81, 0x29, 0x3b, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99,
	0xe4, 0xb8, 0xaa, 0xe4, 0xba, 0xba, 0xe8, 0xba, 0xab, 0xe4, 0xbb, 0xbd, 0xe8, 0xaf, 0x81, 0xe5,
	0x8f, 0xb7, 0xe7, 0xa0, 0x81, 0x3b, 0x20, 0x30, 0x37, 0x3a, 0xe4, 0xb8, 0xaa, 0xe4, 0xbd, 0x93,
	0xe5, 0xb7, 0xa5, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0x3a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x32, 0x30, 0x31, 0x28, 0xe8, 0x90, 0xa5,
	0xe4, 0xb8, 0x9a, 0xe6, 0x89, 0xa7, 0xe7, 0x85, 0xa7, 0x29, 0x3b, 0x63, 0x65, 0x72, 0x74, 0x5f,
	0x6e, 0x6f, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe8, 0x90, 0xa5, 0xe4, 0xb8, 0x9a, 0xe6, 0x89,
	0xa7, 0xe7, 0x85, 0xa7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x3b, 0x52, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x88, 0x02, 0x0a, 0x03, 0x6d, 0x63,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x01, 0x92, 0x41, 0xf1, 0x01, 0x32, 0xee,
	0x01, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5, 0x88, 0xab, 0xe7, 0xa0, 0x81,
	0x6d, 0x63, 0x63, 0x2c, 0xe5, 0x8f, 0x82, 0xe8, 0xa7, 0x81, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x67, 0x77, 0x2e, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x2f, 0x62, 0x6d, 0x77, 0x2d, 0x70, 0x72,
	0x6f, 0x64, 0x2f, 0x62, 0x32, 0x38, 0x34, 0x32, 0x31, 0x63, 0x65, 0x2d, 0x30, 0x64, 0x64, 0x66,
	0x2d, 0x34, 0x32, 0x32, 0x66, 0x2d, 0x39, 0x65, 0x39, 0x63, 0x2d, 0x63, 0x32, 0x63, 0x33, 0x63,
	0x37, 0x66, 0x33, 0x30, 0x63, 0x37, 0x33, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0x20, 0xe7, 0x89, 0xb9,
	0xe6, 0xae, 0x8a, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0x9a, 0xe8, 0xa6, 0x81, 0xe6, 0x8c, 0x89, 0xe7,
	0x85, 0xa7, 0x4d, 0x43, 0x43, 0xe8, 0xaf, 0xb4, 0xe6, 0x98, 0x8e, 0xe4, 0xb8, 0xad, 0xe7, 0x9a,
	0x84, 0xe8, 0xb5, 0x84, 0xe8, 0xb4, 0xa8, 0xe4, 0xb8, 0x80, 0xe6, 0xa0, 0x8f, 0xe4, 0xb8, 0x8a,
	0xe4, 0xbc, 0xa0, 0xe8, 0xbe, 0x85, 0xe5, 0x8a, 0xa9, 0xe8, 0xb5, 0x84, 0xe8, 0xb4, 0xa8, 0x2c,
	0xe8, 0xbe, 0x85, 0xe5, 0x8a, 0xa9, 0xe8, 0xb5, 0x84, 0xe8, 0xb4, 0xa8, 0xe8, 0xa6, 0x81, 0xe5,
	0x9c, 0xa8, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0xe4, 0xb8, 0xad, 0xe4, 0xb8, 0x8a, 0xe4, 0xbc, 0xa0, 0x2c, 0xe4, 0xbc, 0x9a, 0xe6, 0x9c, 0x89,
	0xe4, 0xba, 0xba, 0xe5, 0xb7, 0xa5, 0xe5, 0xae, 0xa1, 0xe6, 0xa0, 0xb8, 0xe3, 0x80, 0x82, 0x52,
	0x03, 0x6d, 0x63, 0x63, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x69, 0x92, 0x41, 0x56, 0x32,
	0x54, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x2c, 0xe7, 0x94,
	0xb1, 0xe6, 0x9c, 0xba, 0xe6, 0x9e, 0x84, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89, 0x2c, 0xe9, 0x9c,
	0x80, 0xe8, 0xa6, 0x81, 0xe4, 0xbf, 0x9d, 0xe8, 0xaf, 0x81, 0xe5, 0x9c, 0xa8, 0xe6, 0x9c, 0xba,
	0xe6, 0x9e, 0x84, 0xe4, 0xb8, 0x8b, 0xe5, 0x94, 0xaf, 0xe4, 0xb8, 0x80, 0xe3, 0x80, 0x82, 0xe4,
	0xb8, 0x8e, 0x73, 0x6d, 0x69, 0x64, 0xe4, 0xba, 0x8c, 0xe9, 0x80, 0x89, 0xe4, 0xb8, 0x80, 0xe5,
	0xbf, 0x85, 0xe5, 0xa1, 0xab, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0xe6, 0x02, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5a, 0x46,
	0x54, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x42, 0xe1, 0x01, 0x92, 0x41, 0xdd, 0x01, 0x32, 0xda, 0x01, 0xe9, 0xbb, 0x98,
	0xe8, 0xae, 0xa4, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe3,
	0x80, 0x82, 0xe5, 0xbd, 0x93, 0xe8, 0xb0, 0x83, 0xe7, 0x94, 0xa8, 0xe6, 0x94, 0xb6, 0xe5, 0x8d,
	0x95, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x2c, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe6, 0x9d,
	0xa1, 0xe6, 0xac, 0xbe, 0xe4, 0xb8, 0xad, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe9, 0xbb, 0x98,
	0xe8, 0xae, 0xa4, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe8, 0xa7, 0x84, 0xe5, 0x88, 0x99, 0xe6,
	0x97, 0xb6, 0x2c, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe5,
	0xb0, 0x86, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe8, 0x87, 0xb3, 0xe6, 0xad, 0xa4, 0xe5, 0xa4,
	0x84, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe7, 0x9a, 0x84, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4,
	0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87, 0xe8, 0xb4, 0xa6, 0xe6,
	0x88, 0xb7, 0xe4, 0xb8, 0xad, 0xe3, 0x80, 0x82, 0xe5, 0x85, 0xb6, 0xe8, 0xaf, 0xa6, 0xe7, 0xbb,
	0x86, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe5, 0x8f, 0x8a, 0xe6, 0x94, 0xb6, 0xe5, 0x8d, 0x95,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xbc, 0xa0, 0xe5, 0x8f, 0x82, 0xe7, 0xa4, 0xba, 0xe4,
	0xbe, 0x8b, 0xe5, 0x8f, 0x82, 0xe8, 0x80, 0x83, 0xe5, 0x8a, 0x9f, 0xe8, 0x83, 0xbd, 0xe5, 0x8c,
	0x85, 0xe6, 0x96, 0x87, 0xe6, 0xa1, 0xa3, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0xeb, 0x01, 0x0a, 0x0f, 0x61,
	0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0xc2, 0x01, 0x92, 0x41, 0xbe, 0x01, 0x32, 0xbb, 0x01, 0xe7, 0xbb,
	0x93, 0xe7, 0xae, 0x97, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6,
	0xe5, 0x8f, 0xb7, 0x2c, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7,
	0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8,
	0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe6, 0x97, 0xb6, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0x2e, 0xe6,
	0x9c, 0xac, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe8, 0xa6, 0x81, 0xe6, 0xb1, 0x82, 0xe4, 0xb8,
	0x8e, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x6e, 0x61, 0x6d,
	0x65, 0xe5, 0x90, 0x8c, 0xe5, 0x90, 0x8d, 0x2c, 0xe4, 0xb8, 0x94, 0xe6, 0x98, 0xaf, 0xe5, 0xae,
	0x9e, 0xe5, 0x90, 0x8d, 0xe8, 0xae, 0xa4, 0xe8, 0xaf, 0x81, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x28, 0xe4, 0xb8, 0xaa, 0xe4, 0xbd, 0x93,
	0xe5, 0xb7, 0xa5, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xaf, 0xe4, 0xbb, 0xa5, 0xe4,
	0xb8, 0x8e, 0x6e, 0x61, 0x6d, 0x65, 0xe6, 0x88, 0x96, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0xe7, 0x9b, 0xb8, 0xe5, 0x90, 0x8c, 0x29, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x9b, 0x02, 0x0a, 0x17, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xe3, 0x01, 0x92, 0x41, 0xdf,
	0x01, 0x32, 0xdc, 0x01, 0xe7, 0xad, 0xbe, 0xe7, 0xba, 0xa6, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x2c, 0xe7, 0x94, 0xa8, 0xe4, 0xba, 0x8e,
	0xe5, 0x8d, 0x8f, 0xe8, 0xae, 0xae, 0xe7, 0xa1, 0xae, 0xe8, 0xae, 0xa4, 0x2c, 0xe5, 0x8f, 0x8a,
	0xe5, 0x90, 0x8e, 0xe7, 0xbb, 0xad, 0xe4, 0xba, 0x8c, 0xe7, 0xba, 0xa7, 0xe5, 0x95, 0x86, 0xe6,
	0x88, 0xb7, 0xe5, 0xa2, 0x9e, 0xe5, 0x80, 0xbc, 0xe4, 0xba, 0xa7, 0xe5, 0x93, 0x81, 0xe6, 0x9c,
	0x8d, 0xe5, 0x8a, 0xa1, 0xe7, 0xad, 0xbe, 0xe7, 0xba, 0xa6, 0xe6, 0x97, 0xb6, 0xe4, 0xbd, 0xbf,
	0xe7, 0x94, 0xa8, 0xe3, 0x80, 0x82, 0xe6, 0x9c, 0xac, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe8,
	0xa6, 0x81, 0xe6, 0xb1, 0x82, 0xe4, 0xb8, 0x8e, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0x6e, 0x61, 0x6d, 0x65, 0xe5, 0x90, 0x8c, 0xe5, 0x90, 0x8d, 0x28, 0xe4,
	0xb8, 0xaa, 0xe4, 0xbd, 0x93, 0xe5, 0xb7, 0xa5, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f,
	0xaf, 0xe4, 0xbb, 0xa5, 0xe4, 0xb8, 0x8e, 0x6e, 0x61, 0x6d, 0x65, 0xe6, 0x88, 0x96, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe7, 0x9b, 0xb8, 0xe5, 0x90, 0x8c, 0x29, 0x2c, 0xe4,
	0xb8, 0x94, 0xe6, 0x98, 0xaf, 0xe5, 0xae, 0x9e, 0xe5, 0x90, 0x8d, 0xe8, 0xae, 0xa4, 0xe8, 0xaf,
	0x81, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7,
	0x52, 0x14, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4c,
	0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0xe2, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5a, 0x46, 0x54,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x6f, 0x92, 0x41,
	0x6c, 0x32, 0x6a, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe4,
	0xba, 0xba, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3, 0x80, 0x82, 0xe5, 0x9c, 0xa8, 0xe6, 0x9c,
	0xac, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe4, 0xb8, 0xad, 0x2c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0xe4, 0xb8, 0xad, 0xe8,
	0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe4, 0xba, 0xba, 0xe5, 0xa7, 0x93, 0xe5, 0x90, 0x8d, 0xe3, 0x80,
	0x81, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab,
	0x2c, 0xe5, 0x85, 0xb6, 0xe4, 0xbb, 0x96, 0xe9, 0x80, 0x89, 0xe5, 0xa1, 0xab, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0xb6, 0x03, 0x0a, 0x05,
	0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x64, 0x61,
	0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5a, 0x46, 0x54, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0xd4, 0x02, 0x92, 0x41, 0xd0, 0x02, 0x32, 0xcd, 0x02,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xab, 0x99, 0xe7, 0x82, 0xb9, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0x2c, 0xe5, 0x8c, 0x85, 0xe6, 0x8b, 0xac, 0xe7, 0xbd, 0x91, 0xe7, 0xab, 0x99, 0xe3,
	0x80, 0x81, 0x61, 0x70, 0x70, 0xe3, 0x80, 0x81, 0xe5, 0xb0, 0x8f, 0xe7, 0xa8, 0x8b, 0xe5, 0xba,
	0x8f, 0xe3, 0x80, 0x82, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8,
	0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x8c, 0x85, 0xe5, 0x90, 0xab, 0xe7, 0x94, 0xb5, 0xe8,
	0x84, 0x91, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x88, 0x96, 0x77, 0x61, 0x70, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x97, 0xb6, 0x2c, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe5, 0xa1,
	0xab, 0xe5, 0x85, 0x85, 0xe4, 0xb8, 0x80, 0xe4, 0xb8, 0xaa, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b,
	0xe4, 0xb8, 0xba, 0x30, 0x31, 0x28, 0xe7, 0xbd, 0x91, 0xe7, 0xab, 0x99, 0x29, 0xe7, 0x9a, 0x84,
	0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0x2c, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe5, 0xbf, 0x85, 0xe5, 0xa1,
	0xab, 0x3b, 0xe5, 0xbd, 0x93, 0xe5, 0x8c, 0x85, 0xe5, 0x90, 0xab, 0x61, 0x70, 0x70, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x97, 0xb6, 0x2c, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe8, 0x87,
	0xb3, 0xe5, 0xb0, 0x91, 0xe5, 0xa1, 0xab, 0xe5, 0x85, 0x85, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b,
	0xe4, 0xb8, 0xba, 0x30, 0x32, 0x28, 0x41, 0x50, 0x50, 0x29, 0xe6, 0x88, 0x96, 0x30, 0x36, 0x28,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe5, 0xb0, 0x8f, 0xe7, 0xa8, 0x8b, 0xe5,
	0xba, 0x8f, 0x29, 0xe4, 0xb8, 0xad, 0xe4, 0xb8, 0x80, 0xe7, 0xa7, 0x8d, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0xe7, 0x9a, 0x84, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0xe5, 0xaf, 0xb9,
	0xe8, 0xb1, 0xa1, 0x2c, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0x52, 0x05, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x83, 0x02, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x42, 0xe8, 0x01, 0x92, 0x41, 0xe4, 0x01, 0x32, 0xe1, 0x01,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0x2c, 0xe5, 0x8f, 0xaf, 0xe9, 0x80, 0x89, 0xe5, 0x80, 0xbc, 0xe6, 0x9c, 0x89, 0x3a,
	0xe5, 0xbd, 0x93, 0xe9, 0x9d, 0xa2, 0xe4, 0xbb, 0x98, 0xe3, 0x80, 0x81, 0x61, 0x70, 0x70, 0xe6,
	0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe3, 0x80, 0x81, 0x77, 0x61, 0x70, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe3, 0x80, 0x81, 0xe7, 0x94, 0xb5, 0xe8, 0x84, 0x91, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe3, 0x80, 0x81, 0xe7, 0xba, 0xbf, 0xe4, 0xb8, 0x8a, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe9,
	0xa2, 0x84, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe3, 0x80, 0x81, 0xe6, 0x96, 0xb0, 0xe5, 0xbd,
	0x93, 0xe9, 0x9d, 0xa2, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83,
	0xe3, 0x80, 0x81, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe4, 0xbb, 0xa3, 0xe6, 0x89, 0xa3, 0xe3,
	0x80, 0x81, 0xe5, 0xb0, 0x8f, 0xe7, 0xa8, 0x8b, 0xe5, 0xba, 0x8f, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe3, 0x80, 0x82, 0xe5, 0x85, 0xb6, 0xe5, 0x80, 0xbc, 0xe4, 0xbc, 0x9a, 0xe5, 0xbd, 0xb1,
	0xe5, 0x93, 0x8d, 0xe5, 0x85, 0xb6, 0xe4, 0xbb, 0x96, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe5,
	0xbf, 0x85, 0xe5, 0xa1, 0xab, 0xe6, 0x80, 0xa7, 0x2c, 0xe8, 0xaf, 0xa6, 0xe8, 0xa7, 0x81, 0xe5,
	0x85, 0xb6, 0xe4, 0xbb, 0x96, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf,
	0xb0, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xfc, 0x01, 0x0a, 0x10, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x5a, 0x46, 0x54, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x82, 0x01, 0x92, 0x41, 0x7f, 0x32, 0x7d, 0xe7, 0xbb, 0x8f, 0xe8, 0x90,
	0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe3, 0x80, 0x82, 0xe5, 0xbd, 0x93, 0xe4, 0xbd, 0xbf,
	0xe7, 0x94, 0xa8, 0xe5, 0xbd, 0x93, 0xe9, 0x9d, 0xa2, 0xe4, 0xbb, 0x98, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0xe6, 0x97, 0xb6, 0x2c, 0xe6, 0x9c, 0xac, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe8,
	0xa6, 0x81, 0xe6, 0xb1, 0x82, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0xe3, 0x80, 0x82, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1, 0xe4, 0xb8, 0xad, 0xe7, 0x9c, 0x81,
	0xe3, 0x80, 0x81, 0xe5, 0xb8, 0x82, 0xe3, 0x80, 0x81, 0xe5, 0x8c, 0xba, 0xe3, 0x80, 0x81, 0xe5,
	0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0x2c, 0xe5, 0x85, 0xb6, 0xe4,
	0xbd, 0x99, 0xe9, 0x80, 0x89, 0xe5, 0xa1, 0xab, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x96, 0x04, 0x0a, 0x11, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0xbc, 0x01, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8b, 0x01,
	0x92, 0x41, 0x87, 0x01, 0x32, 0x84, 0x01, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe7, 0xbb, 0x93,
	0xe7, 0xae, 0x97, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x2c, 0xe5, 0x8f, 0xaf, 0xe9, 0x80, 0x89,
	0xe5, 0x80, 0xbc, 0xe6, 0x9c, 0x89, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x2f, 0x61,
	0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xe3, 0x80, 0x82, 0x62,
	0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe7, 0xbb, 0x93,
	0xe7, 0xae, 0x97, 0xe5, 0x88, 0xb0, 0xe9, 0x93, 0xb6, 0xe8, 0xa1, 0x8c, 0xe5, 0x8d, 0xa1, 0x3b,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xe8, 0xa1, 0xa8,
	0xe7, 0xa4, 0xba, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe5, 0x88, 0xb0, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0xc1,
	0x02, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8c,
	0x02, 0x92, 0x41, 0x88, 0x02, 0x32, 0x85, 0x02, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe7, 0xbb,
	0x93, 0xe7, 0xae, 0x97, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87, 0xe3, 0x80, 0x82, 0xe5, 0xbd, 0x93,
	0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0xe4, 0xb8, 0xba, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0xe6, 0x97, 0xb6,
	0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe9, 0x93, 0xb6, 0xe8, 0xa1, 0x8c, 0xe5, 0x8d, 0xa1, 0xe5,
	0x8d, 0xa1, 0xe5, 0x8f, 0xb7, 0x2c, 0xe5, 0x85, 0xb6, 0xe5, 0x80, 0xbc, 0xe9, 0x9c, 0x80, 0xe5,
	0x9c, 0xa8, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe7, 0x9a,
	0x84, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe9, 0x93, 0xb6, 0xe8, 0xa1, 0x8c, 0xe5, 0x8d, 0xa1,
	0xe8, 0x8c, 0x83, 0xe5, 0x9b, 0xb4, 0xe5, 0x86, 0x85, 0x3b, 0xe5, 0xbd, 0x93, 0xe9, 0xbb, 0x98,
	0xe8, 0xae, 0xa4, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe4,
	0xb8, 0xba, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0xe6,
	0x97, 0xb6, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae,
	0x9d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe5, 0x8f, 0xb7,
	0x2c, 0xe5, 0x85, 0xb6, 0xe5, 0x80, 0xbc, 0xe9, 0x9c, 0x80, 0xe5, 0x9c, 0xa8, 0xe8, 0xbf, 0x9b,
	0xe4, 0xbb, 0xb6, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe7, 0x9a, 0x84, 0xe7, 0xbb, 0x93, 0xe7,
	0xae, 0x97, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f,
	0xb7, 0xe8, 0x8c, 0x83, 0xe5, 0x9b, 0xb4, 0xe5, 0x86, 0x85, 0xe3, 0x80, 0x82, 0x52, 0x13, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x1a, 0xa5, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe8, 0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe4, 0xba, 0xba,
	0xe5, 0x90, 0x8d, 0xe5, 0xad, 0x97, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08,
	0x32, 0x06, 0xe7, 0x94, 0xb5, 0xe8, 0xaf, 0x9d, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x6f, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x57, 0x92, 0x41, 0x54, 0x32, 0x52, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0xe3,
	0x80, 0x82, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0xe4, 0xb8, 0x8e, 0xe5, 0x90, 0xa6, 0xe5, 0x8f,
	0x82, 0xe8, 0xa7, 0x81, 0xe5, 0xa4, 0x96, 0xe5, 0xb1, 0x82, 0xe5, 0xaf, 0xb9, 0xe8, 0xb1, 0xa1,
	0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x2c, 0xe6, 0x97, 0xa0, 0xe7, 0x89, 0xb9, 0xe5, 0x88, 0xab,
	0xe8, 0xaf, 0xb4, 0xe6, 0x98, 0x8e, 0xe8, 0xae, 0xa4, 0xe4, 0xb8, 0xba, 0xe6, 0x98, 0xaf, 0xe9,
	0x9d, 0x9e, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x27, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0x94, 0xb5, 0xe5, 0xad, 0x90, 0xe9, 0x82, 0xae, 0xe7,
	0xae, 0xb1, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x69, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xba, 0xab, 0xe4, 0xbb, 0xbd, 0xe8, 0xaf, 0x81, 0xe5, 0x8f, 0xb7,
	0x52, 0x08, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x1a, 0xb2, 0x02, 0x0a, 0x08, 0x53,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6c, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4f, 0x92, 0x41, 0x4c, 0x32,
	0x4a, 0xe7, 0xbd, 0x91, 0xe7, 0xab, 0x99, 0x3a, 0x30, 0x31, 0x20, 0x41, 0x50, 0x50, 0x3a, 0x30,
	0x32, 0x20, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe7, 0xaa, 0x97, 0x3a, 0x30, 0x33, 0x20, 0xe5,
	0x85, 0xac, 0xe4, 0xbc, 0x97, 0xe5, 0x8f, 0xb7, 0x3a, 0x30, 0x34, 0x20, 0xe5, 0x85, 0xb6, 0xe4,
	0xbb, 0x96, 0x3a, 0x30, 0x35, 0x20, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe5,
	0xb0, 0x8f, 0xe7, 0xa8, 0x8b, 0xe5, 0xba, 0x8f, 0x3a, 0x30, 0x36, 0x52, 0x08, 0x73, 0x69, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xab,
	0x99, 0xe7, 0x82, 0xb9, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xab, 0x99,
	0xe7, 0x82, 0xb9, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf,
	0x95, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe5,
	0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a,
	0x84, 0x05, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0xb5, 0x01, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8f, 0x01, 0x92, 0x41, 0x8b, 0x01, 0x32, 0x88,
	0x01, 0xe7, 0x9c, 0x81, 0xe4, 0xbb, 0xbd, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0xe3, 0x80, 0x82,
	0xe8, 0xaf, 0xb7, 0xe6, 0x8c, 0x89, 0xe7, 0x85, 0xa7, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x77, 0x2e, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x2f, 0x32, 0x35, 0x33, 0x63, 0x34, 0x64, 0x63, 0x62, 0x2d,
	0x62, 0x38, 0x61, 0x34, 0x2d, 0x34, 0x61, 0x31, 0x65, 0x2d, 0x38, 0x62, 0x65, 0x32, 0x2d, 0x37,
	0x39, 0x65, 0x31, 0x39, 0x31, 0x61, 0x39, 0x62, 0x36, 0x64, 0x62, 0x2e, 0x78, 0x6c, 0x73, 0x78,
	0x20, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe4, 0xb8, 0xad, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9,
	0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe3, 0x80, 0x82, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8f, 0x01, 0x92, 0x41,
	0x8b, 0x01, 0x32, 0x88, 0x01, 0xe5, 0x9f, 0x8e, 0xe5, 0xb8, 0x82, 0xe7, 0xbc, 0x96, 0xe7, 0xa0,
	0x81, 0xe3, 0x80, 0x82, 0xe8, 0xaf, 0xb7, 0xe6, 0x8c, 0x89, 0xe7, 0x85, 0xa7, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x77, 0x2e, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x2f, 0x32, 0x35, 0x33, 0x63, 0x34,
	0x64, 0x63, 0x62, 0x2d, 0x62, 0x38, 0x61, 0x34, 0x2d, 0x34, 0x61, 0x31, 0x65, 0x2d, 0x38, 0x62,
	0x65, 0x32, 0x2d, 0x37, 0x39, 0x65, 0x31, 0x39, 0x31, 0x61, 0x39, 0x62, 0x36, 0x64, 0x62, 0x2e,
	0x78, 0x6c, 0x73, 0x78, 0x20, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe4, 0xb8, 0xad, 0xe5, 0x86,
	0x85, 0xe5, 0xae, 0xb9, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe3, 0x80, 0x82, 0x52, 0x08, 0x63,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x8f, 0x01, 0x92, 0x41, 0x8b, 0x01, 0x32, 0x88, 0x01, 0xe5, 0x8c, 0xba, 0xe5, 0x8e, 0xbf, 0xe7,
	0xbc, 0x96, 0xe7, 0xa0, 0x81, 0xe3, 0x80, 0x82, 0xe8, 0xaf, 0xb7, 0xe6, 0x8c, 0x89, 0xe7, 0x85,
	0xa7, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x77, 0x2e, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x2f, 0x32,
	0x35, 0x33, 0x63, 0x34, 0x64, 0x63, 0x62, 0x2d, 0x62, 0x38, 0x61, 0x34, 0x2d, 0x34, 0x61, 0x31,
	0x65, 0x2d, 0x38, 0x62, 0x65, 0x32, 0x2d, 0x37, 0x39, 0x65, 0x31, 0x39, 0x31, 0x61, 0x39, 0x62,
	0x36, 0x64, 0x62, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0x20, 0xe8, 0xa1, 0xa8, 0xe6, 0xa0, 0xbc, 0xe4,
	0xb8, 0xad, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0xe3, 0x80,
	0x82, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x55, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x3b, 0x92, 0x41, 0x38, 0x32, 0x36, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe3, 0x80, 0x82,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xaf, 0xa6, 0xe7, 0xbb, 0x86, 0xe7, 0xbb, 0x8f, 0xe8,
	0x90, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe6, 0x88, 0x96, 0xe4, 0xba, 0xba, 0xe5, 0x91,
	0x98, 0xe6, 0x89, 0x80, 0xe5, 0x9c, 0xa8, 0xe5, 0x9c, 0xb0, 0xe7, 0x82, 0xb9, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x34, 0x0a, 0x1c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x57, 0x78,
	0x70, 0x61, 0x79, 0x53, 0x46, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbd, 0x04, 0x0a,
	0x10, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4f, 0x75,
	0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3, 0xe7,
	0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1,
	0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0xa8,
	0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0, 0xe7,
	0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbf,
	0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x52, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba,
	0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0xc9, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4,
	0xbb, 0xb6, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5,
	0x8f, 0xb7, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x32,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1a,
	0x92, 0x41, 0x14, 0x32, 0x12, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x93, 0x8d, 0xe4, 0xbd,
	0x9c, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1a, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x93,
	0x8d, 0xe4, 0xbd, 0x9c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33,
	0x92, 0x41, 0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81,
	0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e,
	0x75, 0x6c, 0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa2, 0x04, 0x0a,
	0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41,
	0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c,
	0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98,
	0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93,
	0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72,
	0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80,
	0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf,
	0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93,
	0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x98, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x77, 0x92, 0x41, 0x4f, 0x32, 0x2e,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe6, 0x9e,
	0x9a, 0xe4, 0xb8, 0xbe, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x2c, 0x20, 0xe6, 0x9e, 0x9a, 0xe4,
	0xb8, 0xbe, 0x3a, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02,
	0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02, 0x0f, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x1f, 0x72, 0x1d, 0x52, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66,
	0x74, 0x52, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x58,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x33, 0x32, 0x31, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe5, 0x8d, 0x95,
	0xe5, 0x8f, 0xb7, 0x2c, 0x20, 0xe4, 0xb8, 0x8e, 0x60, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7,
	0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x60, 0xe4, 0xba, 0x92, 0xe6, 0x96, 0xa5, 0x52, 0x0a, 0x72, 0x65,
	0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x12, 0x57, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92,
	0x41, 0x33, 0x32, 0x31, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7,
	0x2c, 0x20, 0xe4, 0xb8, 0x8e, 0x60, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4,
	0xbb, 0xb6, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x60, 0xe4,
	0xba, 0x92, 0xe6, 0x96, 0xa5, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e,
	0x6f, 0x22, 0xd6, 0x04, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1,
	0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f,
	0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6,
	0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41,
	0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x54, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94,
	0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xdb, 0x02, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a,
	0x32, 0x18, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe7, 0x94,
	0xb3, 0xe8, 0xaf, 0xb7, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x85, 0x01, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x62, 0x92, 0x41, 0x5f, 0x32, 0x44, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf,
	0x9b, 0xe4, 0xbb, 0xb6, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x2c, 0x30, 0xe5, 0xbe, 0x85, 0xe8,
	0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0x3b, 0x31, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe4, 0xb8, 0xad,
	0x3b, 0x32, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x33,
	0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xa2, 0x02, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0xf2, 0x02, 0x01, 0x30, 0xf2, 0x02, 0x01, 0x31, 0xf2, 0x02, 0x01,
	0x32, 0xf2, 0x02, 0x01, 0x33, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x23, 0x92, 0x41,
	0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5,
	0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c,
	0x6c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xac, 0x22, 0x0a, 0x08, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41,
	0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe7, 0xb1, 0xbb,
	0xe5, 0x9e, 0x8b, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0xb4, 0x01, 0x0a, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x2e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4d, 0x73, 0x67, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x32, 0x2d, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x3a, 0x20,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6, 0xe9, 0x80, 0x9a, 0xe7,
	0x9f, 0xa5, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0x52, 0x1c, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x9c, 0x01, 0x0a, 0x15, 0x61, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x49, 0x6e, 0x2e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x42, 0x39, 0x92, 0x41, 0x36, 0x32, 0x34, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a,
	0x2f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0x3a, 0x20, 0xe6,
	0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xb6, 0x88, 0xe6, 0x81,
	0xaf, 0x52, 0x12, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0xb4, 0x01, 0x0a, 0x1f, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x2e, 0x57, 0x78, 0x70,
	0x61, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x42, 0x35, 0x92, 0x41, 0x32, 0x32, 0x30, 0xe5,
	0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2d, 0xe6, 0x94, 0xb6, 0xe4,
	0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x3a, 0x20, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b,
	0xe4, 0xbb, 0xb6, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0x52,
	0x1b, 0x77, 0x78, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x8f, 0x01, 0x0a,
	0x14, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x61,
	0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x2e, 0x57, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x42, 0x2f, 0x92, 0x41, 0x2c, 0x32,
	0x2a, 0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2d, 0xe6, 0x94,
	0xb6, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x3a, 0x20, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0x52, 0x11, 0x77, 0x78, 0x70,
	0x61, 0x79, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0xf3,
	0x03, 0x0a, 0x1c, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x74, 0x63,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x74, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x1a, 0xb0, 0x17, 0x0a, 0x12, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x50,
	0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x45, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0x92, 0x41, 0x2b,
	0x32, 0x29, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe5, 0x88, 0x86, 0xe9, 0x85,
	0x8d, 0xe7, 0xbb, 0x99, 0xe5, 0xbc, 0x80, 0xe5, 0x8f, 0x91, 0xe8, 0x80, 0x85, 0xe7, 0x9a, 0x84,
	0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0x49, 0x44, 0xe3, 0x80, 0x82, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x54, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x32, 0x35, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7,
	0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0x2c, 0xe5, 0xa6, 0x82,
	0x20, 0x75, 0x74, 0x66, 0x2d, 0x38, 0xe3, 0x80, 0x81, 0x67, 0x62, 0x6b, 0xe3, 0x80, 0x81, 0x67,
	0x62, 0x32, 0x33, 0x31, 0x32, 0x20, 0xe7, 0xad, 0x89, 0xe3, 0x80, 0x82, 0xe5, 0x8f, 0xb7, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x6d, 0x92, 0x41,
	0x6a, 0x32, 0x68, 0xe5, 0x95, 0x86, 0xe5, 0xae, 0xb6, 0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90, 0xe7,
	0xad, 0xbe, 0xe5, 0x90, 0x8d, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0xe6, 0x89,
	0x80, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe7, 0x9a, 0x84, 0xe7, 0xad, 0xbe, 0xe5, 0x90, 0x8d,
	0xe7, 0xae, 0x97, 0xe6, 0xb3, 0x95, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x2c, 0xe7, 0x9b, 0xae,
	0xe5, 0x89, 0x8d, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0x20, 0x52, 0x53, 0x41, 0x32, 0x20, 0xe5,
	0x92, 0x8c, 0x20, 0x52, 0x53, 0x41, 0x2c, 0xe6, 0x8e, 0xa8, 0xe8, 0x8d, 0x90, 0xe4, 0xbd, 0xbf,
	0xe7, 0x94, 0xa8, 0x20, 0x52, 0x53, 0x41, 0x32, 0xe3, 0x80, 0x82, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06, 0xe7, 0xad, 0xbe, 0xe5, 0x90, 0x8d,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x32, 0x26, 0xe8, 0xb0,
	0x83, 0xe7, 0x94, 0xa8, 0xe7, 0x9a, 0x84, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe7, 0x89, 0x88,
	0xe6, 0x9c, 0xac, 0x2c, 0xe5, 0x9b, 0xba, 0xe5, 0xae, 0x9a, 0xe4, 0xb8, 0xba, 0x3a, 0x31, 0x2e,
	0x30, 0xe3, 0x80, 0x82, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x3d, 0x92, 0x41, 0x3a, 0x32, 0x38, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe7,
	0x9a, 0x84, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xe3, 0x80,
	0x82, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe4, 0xb8, 0xba, 0x20, 0x79, 0x79, 0x79, 0x79, 0x2d,
	0x4d, 0x4d, 0x2d, 0x64, 0x64, 0x20, 0x48, 0x48, 0x3a, 0x6d, 0x6d, 0x3a, 0x73, 0x73, 0xe3, 0x80,
	0x82, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe7,
	0x9a, 0x84, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x13, 0x32, 0x11, 0xe9, 0x80,
	0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xa0, 0xa1, 0xe9, 0xaa, 0x8c, 0x49, 0x44, 0xe3, 0x80, 0x82, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x1d,
	0x32, 0x1b, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe4, 0xba, 0xa4, 0xe6, 0x98,
	0x93, 0xe5, 0x87, 0xad, 0xe8, 0xaf, 0x81, 0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x4b, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0x92, 0x41,
	0x26, 0x32, 0x24, 0xe5, 0x8e, 0x9f, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe8, 0xaf, 0xb7, 0xe6,
	0xb1, 0x82, 0xe7, 0x9a, 0x84, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d,
	0x95, 0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x6b, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x69, 0x7a, 0x5f, 0x6e,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4d, 0x92, 0x41, 0x4a, 0x32, 0x48, 0xe5, 0x95,
	0x86, 0xe6, 0x88, 0xb7, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0x49, 0x44, 0x2c, 0xe4, 0xb8, 0xbb,
	0xe8, 0xa6, 0x81, 0xe6, 0x98, 0xaf, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe9, 0x80, 0x9a, 0xe7,
	0x9f, 0xa5, 0xe4, 0xb8, 0xad, 0xe8, 0xbf, 0x94, 0xe5, 0x9b, 0x9e, 0xe9, 0x80, 0x80, 0xe6, 0xac,
	0xbe, 0xe7, 0x94, 0xb3, 0xe8, 0xaf, 0xb7, 0xe7, 0x9a, 0x84, 0xe6, 0xb5, 0x81, 0xe6, 0xb0, 0xb4,
	0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x42, 0x69, 0x7a, 0x4e, 0x6f,
	0x12, 0x7e, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x63, 0x92, 0x41, 0x60, 0x32, 0x5e, 0xe4, 0xb9, 0xb0, 0xe5, 0xae, 0xb6, 0xe6,
	0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe5, 0xaf,
	0xb9, 0xe5, 0xba, 0x94, 0xe7, 0x9a, 0x84, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d,
	0xe5, 0x94, 0xaf, 0xe4, 0xb8, 0x80, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0xe3,
	0x80, 0x82, 0xe4, 0xbb, 0xa5, 0x20, 0x32, 0x30, 0x38, 0x38, 0x20, 0xe5, 0xbc, 0x80, 0xe5, 0xa4,
	0xb4, 0xe7, 0x9a, 0x84, 0xe7, 0xba, 0xaf, 0x20, 0x31, 0x36, 0x20, 0xe4, 0xbd, 0x8d, 0xe6, 0x95,
	0xb0, 0xe5, 0xad, 0x97, 0xe3, 0x80, 0x82, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe4,
	0xb9, 0xb0, 0xe5, 0xae, 0xb6, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe8, 0xb4,
	0xa6, 0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x1d, 0x32, 0x1b, 0xe5,
	0x8d, 0x96, 0xe5, 0xae, 0xb6, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32,
	0x18, 0xe5, 0x8d, 0x96, 0xe5, 0xae, 0xb6, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d,
	0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe3, 0x80, 0x82, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x46, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41,
	0x20, 0x32, 0x1e, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe7, 0x9b, 0xae, 0xe5, 0x89, 0x8d, 0xe6,
	0x89, 0x80, 0xe5, 0xa4, 0x84, 0xe7, 0x9a, 0x84, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe3, 0x80,
	0x82, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x64,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0xe6, 0x9c, 0xac, 0xe6, 0xac,
	0xa1, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe7, 0x9a, 0x84,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c, 0xe5, 0x8d, 0x95,
	0xe4, 0xbd, 0x8d, 0xe4, 0xb8, 0xba, 0xe4, 0xba, 0xba, 0xe6, 0xb0, 0x91, 0xe5, 0xb8, 0x81, 0x28,
	0xe5, 0x85, 0x83, 0x29, 0xe3, 0x80, 0x82, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0x92, 0x41,
	0x41, 0x32, 0x3f, 0xe5, 0x95, 0x86, 0xe5, 0xae, 0xb6, 0xe5, 0x9c, 0xa8, 0xe6, 0x94, 0xb6, 0xe7,
	0x9b, 0x8a, 0xe4, 0xb8, 0xad, 0xe5, 0xae, 0x9e, 0xe9, 0x99, 0x85, 0xe6, 0x94, 0xb6, 0xe5, 0x88,
	0xb0, 0xe7, 0x9a, 0x84, 0xe6, 0xac, 0xbe, 0xe9, 0xa1, 0xb9, 0x2c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd,
	0x8d, 0xe4, 0xba, 0xba, 0xe6, 0xb0, 0x91, 0xe5, 0xb8, 0x81, 0x28, 0xe5, 0x85, 0x83, 0x29, 0xe3,
	0x80, 0x82, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x5f, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x33,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x9c, 0xa8, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe4,
	0xb8, 0xad, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe7, 0x9a, 0x84, 0xe5, 0x8f, 0xaf, 0xe5, 0xbc,
	0x80, 0xe5, 0x8f, 0x91, 0xe7, 0xa5, 0xa8, 0xe7, 0x9a, 0x84, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d,
	0xe3, 0x80, 0x82, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0x92, 0x41,
	0x26, 0x32, 0x24, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x9c, 0xa8, 0xe4, 0xba, 0xa4, 0xe6,
	0x98, 0x93, 0xe4, 0xb8, 0xad, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe7, 0x9a, 0x84, 0xe9, 0x87,
	0x91, 0xe9, 0xa2, 0x9d, 0xe3, 0x80, 0x82, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92,
	0x41, 0x23, 0x32, 0x21, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe9, 0x9b, 0x86, 0xe5, 0x88, 0x86,
	0xe5, 0xae, 0x9d, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe7, 0x9a, 0x84, 0xe9, 0x87, 0x91, 0xe9,
	0xa2, 0x9d, 0xe3, 0x80, 0x82, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x77, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x42, 0x58, 0x92, 0x41, 0x55, 0x32, 0x53, 0xe9, 0x80, 0x80,
	0xe6, 0xac, 0xbe, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe4, 0xb8, 0xad, 0x2c, 0xe8, 0xbf, 0x94,
	0xe5, 0x9b, 0x9e, 0xe6, 0x80, 0xbb, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe9, 0x87, 0x91, 0xe9,
	0xa2, 0x9d, 0x2c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe4, 0xb8, 0xba, 0xe4, 0xba, 0xba, 0xe6,
	0xb0, 0x91, 0xe5, 0xb8, 0x81, 0x28, 0xe5, 0x85, 0x83, 0x29, 0x2c, 0xe6, 0x94, 0xaf, 0xe6, 0x8c,
	0x81, 0xe4, 0xb8, 0xa4, 0xe4, 0xbd, 0x8d, 0xe5, 0xb0, 0x8f, 0xe6, 0x95, 0xb0, 0xe3, 0x80, 0x82,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x42, 0x73, 0x92,
	0x41, 0x70, 0x32, 0x6e, 0xe5, 0x95, 0x86, 0xe5, 0x93, 0x81, 0xe7, 0x9a, 0x84, 0xe6, 0xa0, 0x87,
	0xe9, 0xa2, 0x98, 0x2f, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98,
	0x2f, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0x2f, 0xe8, 0xae,
	0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x85, 0xb3, 0xe9, 0x94, 0xae, 0xe5, 0xad, 0x97, 0xe7, 0xad, 0x89,
	0x2c, 0xe6, 0x98, 0xaf, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x97, 0xb6, 0xe5, 0xaf, 0xb9,
	0xe5, 0xba, 0x94, 0xe7, 0x9a, 0x84, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x2c, 0xe5, 0x8e, 0x9f,
	0xe6, 0xa0, 0xb7, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9b, 0x9e, 0xe6, 0x9d, 0xa5, 0xe3,
	0x80, 0x82, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x74, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x42, 0x60, 0x92, 0x41, 0x5d, 0x32, 0x5b,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe7, 0x9a, 0x84, 0xe5, 0xa4, 0x87, 0xe6, 0xb3, 0xa8, 0xe3,
	0x80, 0x81, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0xe3, 0x80, 0x81, 0xe6, 0x98, 0x8e, 0xe7, 0xbb,
	0x86, 0xe7, 0xad, 0x89, 0xe3, 0x80, 0x82, 0xe5, 0xaf, 0xb9, 0xe5, 0xba, 0x94, 0xe8, 0xaf, 0xb7,
	0xe6, 0xb1, 0x82, 0xe6, 0x97, 0xb6, 0xe7, 0x9a, 0x84, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x20, 0xe5,
	0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x2c, 0xe5, 0x8e, 0x9f, 0xe6, 0xa0, 0xb7, 0xe9, 0x80, 0x9a, 0xe7,
	0x9f, 0xa5, 0xe5, 0x9b, 0x9e, 0xe6, 0x9d, 0xa5, 0xe3, 0x80, 0x82, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x62, 0x0a, 0x0a, 0x67, 0x6d, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0x92, 0x41, 0x40, 0x32, 0x3e, 0xe8, 0xaf, 0xa5, 0xe7,
	0xac, 0x94, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe7, 0x9a,
	0x84, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xe3, 0x80, 0x82, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f,
	0xe4, 0xb8, 0xba, 0x20, 0x79, 0x79, 0x79, 0x79, 0x2d, 0x4d, 0x4d, 0x2d, 0x64, 0x64, 0x20, 0x48,
	0x48, 0x3a, 0x6d, 0x6d, 0x3a, 0x73, 0x73, 0xe3, 0x80, 0x82, 0x52, 0x09, 0x67, 0x6d, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x67, 0x6d, 0x74, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0x92, 0x41, 0x46, 0x32,
	0x44, 0xe8, 0xaf, 0xa5, 0xe7, 0xac, 0x94, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe7, 0x9a, 0x84,
	0xe4, 0xb9, 0xb0, 0xe5, 0xae, 0xb6, 0xe4, 0xbb, 0x98, 0xe6, 0xac, 0xbe, 0xe6, 0x97, 0xb6, 0xe9,
	0x97, 0xb4, 0xe3, 0x80, 0x82, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe4, 0xb8, 0xba, 0x20, 0x79,
	0x79, 0x79, 0x79, 0x2d, 0x4d, 0x4d, 0x2d, 0x64, 0x64, 0x20, 0x48, 0x48, 0x3a, 0x6d, 0x6d, 0x3a,
	0x73, 0x73, 0xe3, 0x80, 0x82, 0x52, 0x0a, 0x67, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x61, 0x0a, 0x0a, 0x67, 0x6d, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0x92, 0x41, 0x3f, 0x32, 0x3d, 0xe8, 0xaf, 0xa5, 0xe7,
	0xac, 0x94, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe7, 0x9a, 0x84, 0xe9, 0x80, 0x80, 0xe6, 0xac,
	0xbe, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xe3, 0x80, 0x82, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f,
	0x20, 0x79, 0x79, 0x79, 0x79, 0x2d, 0x4d, 0x4d, 0x2d, 0x64, 0x64, 0x20, 0x48, 0x48, 0x3a, 0x6d,
	0x6d, 0x3a, 0x73, 0x73, 0x2e, 0x53, 0xe3, 0x80, 0x82, 0x52, 0x09, 0x67, 0x6d, 0x74, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x12, 0x5d, 0x0a, 0x09, 0x67, 0x6d, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0x92, 0x41, 0x3d, 0x32, 0x3b, 0xe8, 0xaf,
	0xa5, 0xe7, 0xac, 0x94, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe7, 0xbb, 0x93, 0xe6, 0x9d, 0x9f,
	0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xe3, 0x80, 0x82, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe4,
	0xb8, 0xba, 0x20, 0x79, 0x79, 0x79, 0x79, 0x2d, 0x4d, 0x4d, 0x2d, 0x64, 0x64, 0x20, 0x48, 0x48,
	0x3a, 0x6d, 0x6d, 0x3a, 0x73, 0x73, 0xe3, 0x80, 0x82, 0x52, 0x08, 0x67, 0x6d, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x69, 0x6c, 0x6c,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0x92, 0x41, 0x29,
	0x32, 0x27, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xe7, 0x9a,
	0x84, 0xe5, 0x90, 0x84, 0xe4, 0xb8, 0xaa, 0xe6, 0xb8, 0xa0, 0xe9, 0x81, 0x93, 0xe9, 0x87, 0x91,
	0xe9, 0xa2, 0x9d, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x42,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0xef, 0x01, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x42, 0xc5, 0x01, 0x92, 0x41, 0xc1, 0x01, 0x32, 0xbe, 0x01, 0xe5, 0x85, 0xac, 0xe5, 0x85,
	0xb1, 0xe5, 0x9b, 0x9e, 0xe4, 0xbc, 0xa0, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x2c, 0xe5, 0xa6,
	0x82, 0xe6, 0x9e, 0x9c, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x97, 0xb6, 0xe4, 0xbc, 0xa0,
	0xe9, 0x80, 0x92, 0xe4, 0xba, 0x86, 0xe8, 0xaf, 0xa5, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x2c,
	0xe5, 0x88, 0x99, 0xe8, 0xbf, 0x94, 0xe5, 0x9b, 0x9e, 0xe7, 0xbb, 0x99, 0xe5, 0x95, 0x86, 0xe5,
	0xae, 0xb6, 0xe6, 0x97, 0xb6, 0xe4, 0xbc, 0x9a, 0xe5, 0x9c, 0xa8, 0xe5, 0xbc, 0x82, 0xe6, 0xad,
	0xa5, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0x97, 0xb6, 0xe5, 0xb0, 0x86, 0xe8, 0xaf, 0xa5,
	0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe5, 0x8e, 0x9f, 0xe6, 0xa0, 0xb7, 0xe8, 0xbf, 0x94, 0xe5,
	0x9b, 0x9e, 0xe3, 0x80, 0x82, 0xe6, 0x9c, 0xac, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe5, 0xbf,
	0x85, 0xe9, 0xa1, 0xbb, 0xe8, 0xbf, 0x9b, 0xe8, 0xa1, 0x8c, 0x20, 0x55, 0x72, 0x6c, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x20, 0xe4, 0xb9, 0x8b, 0xe5, 0x90, 0x8e, 0xe6, 0x89, 0x8d, 0xe5, 0x8f,
	0xaf, 0xe4, 0xbb, 0xa5, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe7, 0xbb, 0x99, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0xe3, 0x80, 0x82, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x13, 0x76, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0x92, 0x41, 0x29, 0x32, 0x27, 0xe6, 0x9c, 0xac,
	0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe6, 0x97, 0xb6, 0xe6,
	0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe4, 0xbc, 0x98, 0xe6, 0x83, 0xa0, 0xe5, 0x88, 0xb8, 0xe4, 0xbf,
	0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x11, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41,
	0x0b, 0x32, 0x09, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x41, 0x70, 0x70, 0x49, 0x64, 0x1a, 0x33, 0x0a, 0x1b, 0x57, 0x78, 0x70, 0x61, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x29, 0x0a, 0x11,
	0x57, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x10, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12,
	0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x22, 0xcb, 0x0a, 0x0a, 0x05, 0x50, 0x61,
	0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01,
	0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4,
	0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7,
	0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93,
	0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65,
	0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9,
	0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6,
	0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20,
	0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x9c, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7b, 0x92, 0x41, 0x75, 0x32, 0x54, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d,
	0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8,
	0xbf, 0x9e, 0xf2, 0x02, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2,
	0x02, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x72, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x55, 0x92, 0x41, 0x4f, 0x32, 0x3d, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x2c, 0x20, 0x48, 0x35, 0x3a, 0xe6, 0x89, 0x8b, 0xe6, 0x9c,
	0xba, 0x48, 0x35, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3b, 0x41, 0x50, 0x50, 0x3a, 0x41, 0x50,
	0x50, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3b, 0x50, 0x43, 0x3a, 0xe7, 0x94, 0xb5, 0xe8, 0x84,
	0x91, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xf2, 0x02, 0x02, 0x48, 0x35, 0xf2, 0x02, 0x03, 0x41,
	0x50, 0x50, 0xf2, 0x02, 0x02, 0x50, 0x43, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0b, 0x32, 0x09,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17,
	0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d,
	0x95, 0xe5, 0x8f, 0xb7, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x5e, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x3b, 0x92, 0x41, 0x35, 0x32, 0x29,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe6, 0x80, 0xbb, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c,
	0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe5, 0x85, 0x83, 0x2c, 0x20, 0x65, 0x67, 0x3a, 0x20, 0x30,
	0x2e, 0x30, 0x31, 0x3b, 0x20, 0x31, 0x2e, 0x32, 0x33, 0xa2, 0x02, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe5, 0x8d,
	0x95, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1a, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe9, 0x99,
	0x84, 0xe5, 0x8a, 0xa0, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x45, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x20, 0x32, 0x18, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5,
	0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xa2, 0x02, 0x03, 0x75, 0x72, 0x6c, 0xe0, 0x41, 0x02, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x75, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x4e, 0x92, 0x41, 0x48, 0x32, 0x32, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe5,
	0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0x2c, 0x20, 0x30, 0xe9, 0x9d,
	0x9e, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0x3b, 0x31, 0xe5,
	0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0x3a, 0x01, 0x30, 0xa2, 0x02,
	0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0xf2, 0x02, 0x01, 0x30, 0xf2, 0x02, 0x01, 0x31, 0xe0,
	0x41, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x7a, 0x0a, 0x08, 0x71, 0x75, 0x69, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x5f, 0x92, 0x41, 0x59, 0x32, 0x57, 0xe9, 0x80, 0x80, 0xe5, 0x87, 0xba,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe8, 0xbf, 0x94, 0xe5, 0x9b, 0x9e, 0xe5, 0x9c, 0xb0, 0xe5,
	0x9d, 0x80, 0x2c, 0x20, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2f, 0x5b, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x48, 0x35, 0xef, 0xbd, 0x9c, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x50, 0x43, 0x5d, 0xe5, 0xbf, 0x85, 0xe9, 0x80,
	0x89, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x71, 0x75, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x7e, 0x0a,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x5f, 0x92, 0x41, 0x59, 0x32, 0x57, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae,
	0x8c, 0xe6, 0x88, 0x90, 0xe8, 0xbf, 0x94, 0xe5, 0x9b, 0x9e, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80,
	0x2c, 0x20, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2f, 0x5b, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5,
	0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x48, 0x35, 0xef, 0xbd, 0x9c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x50, 0x43, 0x5d, 0xe5, 0xbf, 0x85, 0xe9, 0x80, 0x89, 0xe0,
	0x41, 0x01, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41,
	0x0e, 0x32, 0x0c, 0xe5, 0x9b, 0x9e, 0xe4, 0xbc, 0xa0, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0xe0,
	0x41, 0x01, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x5c, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3b,
	0x92, 0x41, 0x35, 0x32, 0x33, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe7, 0xbb, 0x9d, 0xe5, 0xaf,
	0xb9, 0xe8, 0xb6, 0x85, 0xe6, 0x97, 0xb6, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x2c, 0xe6, 0xa0,
	0xbc, 0xe5, 0xbc, 0x8f, 0x3a, 0x35, 0x30, 0x38, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x31, 0x33, 0x20,
	0x31, 0x35, 0x3a, 0x33, 0x36, 0x3a, 0x31, 0x39, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x57, 0x78, 0x70, 0x61,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x22, 0xb5, 0x01, 0x0a, 0x0e, 0x57, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x41, 0x50, 0x50, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xa0, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x79,
	0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb,
	0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8,
	0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97,
	0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x45,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41,
	0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xc3, 0x08, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7,
	0xe7, 0xbc, 0x96, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41,
	0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5,
	0x8f, 0xb7, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x29,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x7f, 0x0a, 0x06, 0x68, 0x35, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x66, 0x92, 0x41, 0x63, 0x32, 0x61,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2f, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x3d, 0x28, 0x61, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x5f, 0x7a, 0x66, 0x74, 0x7c, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x7c, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x7c, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x66, 0x74, 0x29, 0x2f,
	0x48, 0x35, 0x3a, 0x48, 0x35, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d,
	0x80, 0x48, 0x00, 0x52, 0x05, 0x68, 0x35, 0x55, 0x72, 0x6c, 0x12, 0x54, 0x0a, 0x03, 0x73, 0x64,
	0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0x92, 0x41, 0x3d, 0x32, 0x3b, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2f, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf, 0x3d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a,
	0x66, 0x74, 0x2f, 0x41, 0x50, 0x50, 0x3a, 0xe8, 0xb0, 0x83, 0xe8, 0xb5, 0xb7, 0x53, 0x44, 0x4b,
	0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0x48, 0x00, 0x52, 0x03, 0x73, 0x64, 0x6b,
	0x12, 0x58, 0x0a, 0x06, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x3f, 0x92, 0x41, 0x3c, 0x32, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a,
	0xe9, 0x81, 0x93, 0x2f, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xba, 0xe6, 0x99, 0xaf,
	0x3d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x2f, 0x50, 0x43, 0x3a, 0xe7,
	0x94, 0xb5, 0xe8, 0x84, 0x91, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d,
	0x80, 0x48, 0x00, 0x52, 0x05, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x77,
	0x78, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6a, 0x73, 0x61, 0x70,
	0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70,
	0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x78, 0x70, 0x61,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x42, 0x36, 0x92, 0x41,
	0x33, 0x32, 0x31, 0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3a,
	0x4a, 0x53, 0x41, 0x50, 0x49, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3a, 0xe5, 0xbe, 0xae, 0xe4,
	0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe8, 0xb0, 0x83, 0xe8, 0xb5, 0xb7, 0xe5, 0x8f,
	0x82, 0xe6, 0x95, 0xb0, 0x48, 0x00, 0x52, 0x10, 0x77, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x4a, 0x73, 0x61, 0x70, 0x69, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x77, 0x78, 0x70,
	0x61, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x41, 0x50, 0x50, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0xe5, 0xbe, 0xae,
	0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3a, 0x41, 0x50, 0x50, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0x3a, 0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe8, 0xb0, 0x83, 0xe8, 0xb5, 0xb7, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x48, 0x00, 0x52, 0x0e,
	0x77, 0x78, 0x70, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x41, 0x70, 0x70, 0x12, 0x87,
	0x01, 0x0a, 0x0e, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5f, 0x92, 0x41, 0x5c, 0x32, 0x5a, 0xe5, 0xbe,
	0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x3a, 0x50, 0x43, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0x3a, 0xe6, 0xad, 0xa4, 0x55, 0x52, 0x4c, 0xe7, 0x94, 0xa8, 0xe4, 0xba, 0x8e,
	0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe4, 0xba, 0x8c, 0xe7,
	0xbb, 0xb4, 0xe7, 0xa0, 0x81, 0x2c, 0xe7, 0x84, 0xb6, 0xe5, 0x90, 0x8e, 0xe6, 0x8f, 0x90, 0xe4,
	0xbe, 0x9b, 0xe7, 0xbb, 0x99, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0x89, 0xab, 0xe7, 0xa0,
	0x81, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0x2e, 0x48, 0x00, 0x52, 0x0c, 0x77, 0x78, 0x70, 0x61,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d,
	0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x98, 0x03, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f,
	0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf,
	0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf,
	0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e,
	0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93,
	0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93,
	0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x32, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe5, 0x8f, 0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f,
	0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92,
	0x41, 0x0b, 0x32, 0x09, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x99, 0x06, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4,
	0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5,
	0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02,
	0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba,
	0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xb2, 0x04,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe8,
	0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95,
	0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81,
	0x93, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x9c, 0xba,
	0xe6, 0x99, 0xaf, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x43, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x20, 0x92, 0x41, 0x1d, 0x32, 0x1b, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95,
	0xe6, 0x80, 0xbb, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c, 0x20, 0xe5, 0x8d, 0x95, 0xe4, 0xbd,
	0x8d, 0x3a, 0xe5, 0x88, 0x86, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95,
	0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92,
	0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe9, 0x99, 0x84, 0xe5, 0x8a, 0xa0,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11,
	0x32, 0x0f, 0xe8, 0x87, 0xaa, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89, 0xe5, 0x8f, 0x82, 0xe6, 0x95,
	0xb0, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0x92, 0x41,
	0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12,
	0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xaa, 0x05, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x12,
	0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6,
	0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94,
	0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94,
	0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6,
	0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8,
	0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x9c, 0x01,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x7b, 0x92, 0x41, 0x75, 0x32, 0x54, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a,
	0x66, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4,
	0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae,
	0x9d, 0x2d, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0xf2, 0x02,
	0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02, 0x0f, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f,
	0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f,
	0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86,
	0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x59, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x34, 0x92, 0x41, 0x2e, 0x32, 0x22, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe9, 0x87, 0x91, 0xe9,
	0xa2, 0x9d, 0x2c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe5, 0x88, 0x86, 0x2c, 0x20, 0x65, 0x67,
	0x3a, 0x20, 0x31, 0x3b, 0x20, 0x31, 0x32, 0x33, 0xa2, 0x02, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe5, 0x8e, 0x9f, 0xe5, 0x9b, 0xa0, 0xe0, 0x41, 0x02,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe7,
	0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d,
	0x80, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x22,
	0x86, 0x04, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47,
	0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30,
	0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5,
	0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9,
	0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e,
	0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x75, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0xa3, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x64, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x4c, 0x92, 0x41, 0x46,
	0x32, 0x44, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xbb,
	0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x74, 0x72, 0x75, 0x65, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6,
	0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe5, 0x91, 0x98, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c,
	0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0x92, 0x41, 0x28, 0x32, 0x26, 0xe9, 0x80, 0x80, 0xe6,
	0xac, 0xbe, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe5, 0x8f, 0xb7, 0x28, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xe6, 0x97,
	0xb6, 0x29, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32,
	0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d,
	0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa,
	0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb8, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f,
	0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf,
	0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf,
	0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e,
	0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf,
	0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9,
	0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93,
	0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x9c, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7b,
	0x92, 0x41, 0x75, 0x32, 0x54, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81,
	0x93, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x3a, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80,
	0x9a, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe5, 0x95, 0x86,
	0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0xf2, 0x02, 0x0a, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0x92, 0x41, 0x28,
	0x32, 0x26, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe5, 0x8f,
	0xb7, 0x28, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6, 0x88,
	0x90, 0xe5, 0x8a, 0x9f, 0xe6, 0x97, 0xb6, 0x29, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x22, 0x8b, 0x06, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4,
	0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5,
	0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02,
	0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x75, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93,
	0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x9e, 0x04, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b,
	0x32, 0x09, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x11, 0x32,
	0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7,
	0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x56, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x31, 0x92, 0x41, 0x2e, 0x32, 0x22, 0xe9, 0x80, 0x80,
	0xe6, 0xac, 0xbe, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d,
	0xe5, 0x88, 0x86, 0x2c, 0x20, 0x65, 0x67, 0x3a, 0x20, 0x31, 0x3b, 0x20, 0x31, 0x32, 0x33, 0xa2,
	0x02, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe5, 0x8e, 0x9f, 0xe5, 0x9b,
	0xa0, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0xb7, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x91, 0x01, 0x92, 0x41, 0x8d, 0x01, 0x32, 0x8a,
	0x01, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x2c, 0x20, 0x30,
	0xe6, 0x9c, 0xaa, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0x3b, 0x31, 0xe9, 0x83, 0xa8, 0xe5, 0x88,
	0x86, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe4, 0xb8, 0xad, 0x3b, 0x32, 0xe9, 0x83, 0xa8, 0xe5,
	0x88, 0x86, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x33,
	0xe9, 0x83, 0xa8, 0xe5, 0x88, 0x86, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe5, 0xa4, 0xb1, 0xe8,
	0xb4, 0xa5, 0x3b, 0x34, 0xe5, 0x85, 0xa8, 0xe9, 0xa2, 0x9d, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe,
	0xe4, 0xb8, 0xad, 0x3b, 0x35, 0xe5, 0x85, 0xa8, 0xe9, 0xa2, 0x9d, 0xe9, 0x80, 0x80, 0xe6, 0xac,
	0xbe, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x36, 0xe5, 0x85, 0xa8, 0xe9, 0xa2, 0x9d, 0xe9,
	0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xe4, 0x04, 0x0a, 0x0b, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c,
	0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93,
	0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5,
	0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf,
	0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93,
	0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb,
	0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x9c, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7b, 0x92, 0x41, 0x75, 0x32, 0x54, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x5f, 0x7a, 0x66, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7,
	0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x2c, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98,
	0xe5, 0xae, 0x9d, 0x2d, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e,
	0xf2, 0x02, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02, 0x0f,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x39,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x28, 0x92, 0x41, 0x25, 0x32, 0x23,
	0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c, 0x20, 0xe6, 0x8c,
	0x87, 0xe5, 0xae, 0x9a, 0xe7, 0x9a, 0x84, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe9, 0x87, 0x91,
	0xe9, 0xa2, 0x9d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0b, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2c, 0x0a, 0x0b, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x74,
	0x5f, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61,
	0x6d, 0x74, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x22, 0xdf, 0x06, 0x0a, 0x0c, 0x41, 0x6d, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94,
	0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7,
	0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5,
	0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4,
	0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5,
	0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xf6, 0x04, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9,
	0x81, 0x93, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x29,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5,
	0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x1d, 0x32, 0x1b, 0xe7, 0xa1, 0xae, 0xe8,
	0xae, 0xa4, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0xb5,
	0x81, 0xe6, 0xb0, 0xb4, 0xe5, 0x8f, 0xb7, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4e, 0x6f, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18,
	0xe6, 0x9c, 0xac, 0xe6, 0xac, 0xa1, 0xe5, 0xae, 0x9e, 0xe9, 0x99, 0x85, 0xe7, 0xbb, 0x93, 0xe7,
	0xae, 0x97, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0xe8, 0xb5, 0x84,
	0xe9, 0x87, 0x91, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7,
	0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe6, 0x93, 0x8d, 0xe4, 0xbd,
	0x9c, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe6, 0x93, 0x8d,
	0xe4, 0xbd, 0x9c, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x8e, 0x01, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x76, 0x92, 0x41, 0x73, 0x32, 0x71, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe7,
	0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe6, 0xa0, 0x87, 0xe8, 0xae, 0xb0, 0x2c, 0x20, 0x2d, 0x31, 0xe8,
	0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4,
	0xa5, 0x3b, 0x30, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe4,
	0xb9, 0x8b, 0xe5, 0x89, 0x8d, 0xe5, 0xb7, 0xb2, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6, 0x88,
	0x90, 0xe5, 0x8a, 0x9f, 0x3b, 0x31, 0xe6, 0x9c, 0xac, 0xe6, 0xac, 0xa1, 0xe8, 0xb5, 0x84, 0xe9,
	0x87, 0x91, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe6, 0x89,
	0xa7, 0xe8, 0xa1, 0x8c, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41,
	0x20, 0x32, 0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5,
	0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c,
	0x6c, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x93, 0x03, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0b, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92,
	0x41, 0x11, 0x32, 0x0f, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe6, 0x96, 0xb9, 0xe8, 0xb4, 0xa6,
	0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32,
	0x0f, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe6, 0x96, 0xb9, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x73, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x42, 0x5d, 0x92, 0x41, 0x5a, 0x32, 0x58, 0xe5, 0x88, 0x86, 0xe8, 0xb4,
	0xa6, 0xe6, 0xaf, 0x94, 0xe4, 0xbe, 0x8b, 0x2c, 0xe5, 0x80, 0xbc, 0xe7, 0x9a, 0x84, 0xe8, 0x8c,
	0x83, 0xe5, 0x9b, 0xb4, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x5d, 0x2c,
	0xe7, 0xb2, 0xbe, 0xe5, 0xba, 0xa6, 0x30, 0x2e, 0x30, 0x31, 0x2c, 0xe4, 0xbb, 0x85, 0xe5, 0xaf,
	0xb9, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x3a, 0xe6, 0x8c,
	0x89, 0xe6, 0xaf, 0x94, 0xe4, 0xbe, 0x8b, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0x28, 0x72, 0x61,
	0x74, 0x65, 0x29, 0x48, 0x00, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42, 0x39, 0x92, 0x41, 0x36,
	0x32, 0x34, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0x2c, 0xe4,
	0xbb, 0x85, 0xe5, 0xaf, 0xb9, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e,
	0x8b, 0x3a, 0xe6, 0x8c, 0x89, 0xe9, 0x87, 0x91, 0xe9, 0xa2, 0x9d, 0xe5, 0x88, 0x86, 0xe8, 0xb4,
	0xa6, 0x28, 0x61, 0x6d, 0x74, 0x29, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x88, 0x86, 0xe8, 0xb4, 0xa6, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf,
	0xb0, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xcd, 0x03, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32,
	0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8,
	0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4,
	0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d,
	0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8,
	0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81,
	0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1,
	0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9,
	0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x5e, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x5b, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x6f, 0x70,
	0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xf5, 0x06, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb,
	0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8,
	0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97,
	0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64,
	0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba,
	0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x88, 0x05,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x9c, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x7b, 0x92, 0x41,
	0x75, 0x32, 0x54, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c,
	0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x3a, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe7, 0x9b, 0xb4, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0x2c,
	0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x3a, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0xae, 0x9d, 0x2d, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe7, 0x9b, 0xb4, 0xe8, 0xbf, 0x9e, 0xf2, 0x02, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x5f, 0x7a, 0x66, 0x74, 0xf2, 0x02, 0x0f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32,
	0x09, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe8,
	0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95,
	0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x93, 0x8d, 0xe4, 0xbd, 0x9c, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x46, 0x6f, 0x72, 0x41, 0x6d, 0x74, 0x12, 0x41, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x5b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x46, 0x6f, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x13, 0x70, 0x61,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x10, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x12, 0x45, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x46,
	0x6f, 0x72, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x12, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x12,
	0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99, 0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6,
	0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94,
	0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94,
	0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c, 0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6,
	0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8, 0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94,
	0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8,
	0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2d, 0x0a,
	0x0e, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x22, 0xb9, 0x04, 0x0a,
	0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4,
	0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a,
	0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99,
	0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6,
	0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x52, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x75, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0xc2, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e,
	0x92, 0x41, 0x0b, 0x32, 0x09, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe5, 0x8f, 0xb7, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92,
	0x41, 0x11, 0x32, 0x0f, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95,
	0xe5, 0x8f, 0xb7, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x32, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe7, 0x8a, 0xb6, 0xe6,
	0x80, 0x81, 0x52, 0x0c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32,
	0x18, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d,
	0xe5, 0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa,
	0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb7, 0x02, 0x0a, 0x0b, 0x42, 0x69, 0x6c,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x0b, 0x6f, 0x70, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x99,
	0x01, 0x92, 0x41, 0x85, 0x01, 0x32, 0x7c, 0x28, 0xe6, 0x8a, 0x80, 0xe6, 0x9c, 0xaf, 0xe6, 0x94,
	0xaf, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x93, 0xe7, 0x94, 0xa8, 0x29, 0xe6, 0x98, 0xaf, 0xe5, 0x90,
	0xa6, 0xe6, 0x98, 0xbe, 0xe7, 0xa4, 0xba, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a,
	0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0x2c,
	0x20, 0x74, 0x72, 0x75, 0x65, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0x3b, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xe4, 0xb8,
	0x8d, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a,
	0xe9, 0x81, 0x93, 0x2c, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe5, 0x80, 0xbc, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a,
	0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe0, 0x41,
	0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0x92, 0x41, 0x19,
	0x32, 0x17, 0xe8, 0xb4, 0xa6, 0xe5, 0x8d, 0x95, 0xe6, 0x97, 0xa5, 0xe6, 0x9c, 0x9f, 0x20, 0x30,
	0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x2d, 0x30, 0x30, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb,
	0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5,
	0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8,
	0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97,
	0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64,
	0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6,
	0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x99, 0x01, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xb4, 0xa6, 0xe5, 0x8d, 0x95, 0xe4, 0xb8,
	0x8b, 0xe8, 0xbd, 0xbd, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x66, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x63, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x92, 0x41, 0x20, 0x32, 0x18,
	0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe5, 0x93, 0x8d, 0xe5,
	0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x3a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0xfa, 0xd2,
	0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x32, 0x91, 0x11, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x0e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e,
	0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x1a, 0x24, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4f, 0x75, 0x74, 0x22, 0x3c, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe8,
	0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe8, 0xaf, 0xa6, 0xe6, 0x83, 0x85, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x8b, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70,
	0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x34,
	0x92, 0x41, 0x14, 0x12, 0x12, 0xe6, 0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe5, 0x95, 0x86, 0xe6, 0x88,
	0xb7, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x1a, 0x23, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4f, 0x75, 0x74, 0x22,
	0x32, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4,
	0xbb, 0xb6, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x1a, 0x28, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x3a, 0x92,
	0x41, 0x14, 0x12, 0x12, 0xe5, 0x95, 0x86, 0xe6, 0x88, 0xb7, 0xe8, 0xbf, 0x9b, 0xe4, 0xbb, 0xb6,
	0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0xad, 0x04, 0x0a, 0x06, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49,
	0x6e, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xef, 0x03, 0x92, 0x41, 0x14, 0x12, 0x12, 0xe6,
	0x94, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x80, 0x9a, 0xe9, 0x81, 0x93, 0xe9, 0x80, 0x9a, 0xe7, 0x9f,
	0xa5, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xc1, 0x03, 0x3a, 0x20, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x5a, 0x53, 0x3a, 0x15, 0x61, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x6d, 0x73, 0x67, 0x22, 0x3a, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x3d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x7d, 0x2f, 0x7b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x70, 0x61, 0x79, 0x7d, 0x5a,
	0x58, 0x3a, 0x15, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x3f, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x3d, 0x70, 0x61, 0x79, 0x7d, 0x5a, 0x51, 0x3a, 0x14, 0x77, 0x78, 0x70,
	0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x73,
	0x67, 0x22, 0x39, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2f, 0x7b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3d,
	0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x66, 0x74, 0x7d, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x70, 0x61, 0x79, 0x7d, 0x5a, 0x56, 0x3a, 0x14,
	0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x6d, 0x73, 0x67, 0x22, 0x3e, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x3d, 0x77, 0x78, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x7d, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d,
	0x70, 0x61, 0x79, 0x7d, 0x22, 0x43, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x3d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x7a, 0x66, 0x74, 0x7d, 0x2f, 0x7b,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x7d, 0x12, 0x5e, 0x0a, 0x03, 0x50, 0x61, 0x79,
	0x12, 0x18, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x1a, 0x19, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x22, 0x92, 0x41, 0x08, 0x12, 0x06, 0xe6, 0x94, 0xaf, 0xe4,
	0xbb, 0x98, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x12, 0x75, 0x0a, 0x08, 0x50, 0x61, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x1a, 0x1e, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x22, 0x2a, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe6, 0x94, 0xaf, 0xe4, 0xbb,
	0x98, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x6a, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x1a, 0x1c, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70,
	0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x75, 0x74, 0x22, 0x25, 0x92, 0x41, 0x08, 0x12, 0x06, 0xe9, 0x80, 0x80, 0xe6,
	0xac, 0xbe, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x81, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x64,
	0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x1a, 0x21,
	0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75,
	0x74, 0x22, 0x2d, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe9, 0x80, 0x80, 0xe6, 0xac, 0xbe, 0xe6, 0x9f,
	0xa5, 0xe8, 0xaf, 0xa2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x7c, 0x0a, 0x09, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x2e,
	0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x1a, 0x1f, 0x2e,
	0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x41, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x2e,
	0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe8, 0xb5, 0x84, 0xe9, 0x87, 0x91, 0xe7, 0xbb, 0x93, 0xe7, 0xae,
	0x97, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x6d, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x84,
	0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e,
	0x1a, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x22, 0x30, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95,
	0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22,
	0x14, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x64, 0x61, 0x6f,
	0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x1a, 0x26, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x38, 0x92, 0x41, 0x14, 0x12, 0x12,
	0xe8, 0xae, 0xa2, 0xe5, 0x8d, 0x95, 0xe7, 0xbb, 0x93, 0xe7, 0xae, 0x97, 0xe6, 0x9f, 0xa5, 0xe8,
	0xaf, 0xa2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x85, 0x01, 0x0a, 0x09, 0x42, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1e, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x1a, 0x1f, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x75, 0x74, 0x22, 0x37, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe8,
	0xb4, 0xa6, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0x8b, 0xe8, 0xbd, 0xbd, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d,
	0x80, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x18, 0x5a, 0x16, 0x70,
	0x62, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x3b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_paymentpb_payment_proto_rawDescOnce sync.Once
	file_pb_paymentpb_payment_proto_rawDescData = file_pb_paymentpb_payment_proto_rawDesc
)

func file_pb_paymentpb_payment_proto_rawDescGZIP() []byte {
	file_pb_paymentpb_payment_proto_rawDescOnce.Do(func() {
		file_pb_paymentpb_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_paymentpb_payment_proto_rawDescData)
	})
	return file_pb_paymentpb_payment_proto_rawDescData
}

var file_pb_paymentpb_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_pb_paymentpb_payment_proto_goTypes = []interface{}{
	(*MerchantDetail)(nil),        // 0: daop.pb.paymentpb.MerchantDetail
	(*MerchantDetailIn)(nil),      // 1: daop.pb.paymentpb.MerchantDetailIn
	(*MerchantDetailOut)(nil),     // 2: daop.pb.paymentpb.MerchantDetailOut
	(*MerchantListIn)(nil),        // 3: daop.pb.paymentpb.MerchantListIn
	(*MerchantListOut)(nil),       // 4: daop.pb.paymentpb.MerchantListOut
	(*MerchantApplyIn)(nil),       // 5: daop.pb.paymentpb.MerchantApplyIn
	(*MerchantApplyOut)(nil),      // 6: daop.pb.paymentpb.MerchantApplyOut
	(*MerchantApplyQueryIn)(nil),  // 7: daop.pb.paymentpb.MerchantApplyQueryIn
	(*MerchantApplyQueryOut)(nil), // 8: daop.pb.paymentpb.MerchantApplyQueryOut
	(*NotifyIn)(nil),              // 9: daop.pb.paymentpb.NotifyIn
	(*PayIn)(nil),                 // 10: daop.pb.paymentpb.PayIn
	(*WxpayParamsJSAPI)(nil),      // 11: daop.pb.paymentpb.WxpayParamsJSAPI
	(*WxpayParamsAPP)(nil),        // 12: daop.pb.paymentpb.WxpayParamsAPP
	(*PayOut)(nil),                // 13: daop.pb.paymentpb.PayOut
	(*PayQueryIn)(nil),            // 14: daop.pb.paymentpb.PayQueryIn
	(*PayQueryOut)(nil),           // 15: daop.pb.paymentpb.PayQueryOut
	(*RefundIn)(nil),              // 16: daop.pb.paymentpb.RefundIn
	(*RefundOut)(nil),             // 17: daop.pb.paymentpb.RefundOut
	(*RefundQueryIn)(nil),         // 18: daop.pb.paymentpb.RefundQueryIn
	(*RefundQueryOut)(nil),        // 19: daop.pb.paymentpb.RefundQueryOut
	(*AmtSettleIn)(nil),           // 20: daop.pb.paymentpb.AmtSettleIn
	(*AmtSettleOut)(nil),          // 21: daop.pb.paymentpb.AmtSettleOut
	(*TransferInfo)(nil),          // 22: daop.pb.paymentpb.TransferInfo
	(*OrderSettleIn)(nil),         // 23: daop.pb.paymentpb.OrderSettleIn
	(*OrderSettleOut)(nil),        // 24: daop.pb.paymentpb.OrderSettleOut
	(*OrderSettleQueryIn)(nil),    // 25: daop.pb.paymentpb.OrderSettleQueryIn
	(*OrderSettleQueryOut)(nil),   // 26: daop.pb.paymentpb.OrderSettleQueryOut
	(*BillQueryIn)(nil),           // 27: daop.pb.paymentpb.BillQueryIn
	(*BillQueryOut)(nil),          // 28: daop.pb.paymentpb.BillQueryOut
	(*MerchantListOut_Data)(nil),  // 29: daop.pb.paymentpb.MerchantListOut.Data
	(*MerchantApplyIn_MerchantApplyDataForAlipayZFT)(nil),                   // 30: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT
	(*MerchantApplyIn_MerchantApplyDataForWxpaySFT)(nil),                    // 31: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForWxpaySFT
	(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule)(nil), // 32: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.DefaultSettleRule
	(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo)(nil),       // 33: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.ContactInfo
	(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo)(nil),          // 34: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.SiteInfo
	(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo)(nil),       // 35: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.AddressInfo
	(*MerchantApplyOut_Data)(nil),                                           // 36: daop.pb.paymentpb.MerchantApplyOut.Data
	(*MerchantApplyQueryOut_Data)(nil),                                      // 37: daop.pb.paymentpb.MerchantApplyQueryOut.Data
	(*NotifyIn_AlipayMerchantApplyNotifyMsg)(nil),                           // 38: daop.pb.paymentpb.NotifyIn.AlipayMerchantApplyNotifyMsg
	(*NotifyIn_AlipayPayNotifyMsg)(nil),                                     // 39: daop.pb.paymentpb.NotifyIn.AlipayPayNotifyMsg
	(*NotifyIn_WxpayMerchantApplyNotifyMsg)(nil),                            // 40: daop.pb.paymentpb.NotifyIn.WxpayMerchantApplyNotifyMsg
	(*NotifyIn_WxpayPayNotifyMsg)(nil),                                      // 41: daop.pb.paymentpb.NotifyIn.WxpayPayNotifyMsg
	(*PayOut_Data)(nil),                                                     // 42: daop.pb.paymentpb.PayOut.Data
	(*PayQueryOut_Data)(nil),                                                // 43: daop.pb.paymentpb.PayQueryOut.Data
	(*RefundOut_Data)(nil),                                                  // 44: daop.pb.paymentpb.RefundOut.Data
	(*RefundQueryOut_Data)(nil),                                             // 45: daop.pb.paymentpb.RefundQueryOut.Data
	(*AmtSettleIn_ExtraParams)(nil),                                         // 46: daop.pb.paymentpb.AmtSettleIn.ExtraParams
	(*AmtSettleOut_Data)(nil),                                               // 47: daop.pb.paymentpb.AmtSettleOut.Data
	(*OrderSettleIn_SettlementParams)(nil),                                  // 48: daop.pb.paymentpb.OrderSettleIn.SettlementParams
	(*OrderSettleOut_Data)(nil),                                             // 49: daop.pb.paymentpb.OrderSettleOut.Data
	(*OrderSettleQueryOut_Data)(nil),                                        // 50: daop.pb.paymentpb.OrderSettleQueryOut.Data
	(*BillQueryOut_Data)(nil),                                               // 51: daop.pb.paymentpb.BillQueryOut.Data
	(*structpb.Value)(nil),                                                  // 52: google.protobuf.Value
	(*httpbody.HttpBody)(nil),                                               // 53: google.api.HttpBody
}
var file_pb_paymentpb_payment_proto_depIdxs = []int32{
	0,  // 0: daop.pb.paymentpb.MerchantDetailOut.data:type_name -> daop.pb.paymentpb.MerchantDetail
	29, // 1: daop.pb.paymentpb.MerchantListOut.data:type_name -> daop.pb.paymentpb.MerchantListOut.Data
	30, // 2: daop.pb.paymentpb.MerchantApplyIn.alipay_apply_data:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT
	31, // 3: daop.pb.paymentpb.MerchantApplyIn.wxpay_reg_data:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForWxpaySFT
	36, // 4: daop.pb.paymentpb.MerchantApplyOut.data:type_name -> daop.pb.paymentpb.MerchantApplyOut.Data
	37, // 5: daop.pb.paymentpb.MerchantApplyQueryOut.data:type_name -> daop.pb.paymentpb.MerchantApplyQueryOut.Data
	38, // 6: daop.pb.paymentpb.NotifyIn.alipay_merchant_apply_notify_msg:type_name -> daop.pb.paymentpb.NotifyIn.AlipayMerchantApplyNotifyMsg
	39, // 7: daop.pb.paymentpb.NotifyIn.alipay_pay_notify_msg:type_name -> daop.pb.paymentpb.NotifyIn.AlipayPayNotifyMsg
	40, // 8: daop.pb.paymentpb.NotifyIn.wxpay_merchant_apply_notify_msg:type_name -> daop.pb.paymentpb.NotifyIn.WxpayMerchantApplyNotifyMsg
	41, // 9: daop.pb.paymentpb.NotifyIn.wxpay_pay_notify_msg:type_name -> daop.pb.paymentpb.NotifyIn.WxpayPayNotifyMsg
	42, // 10: daop.pb.paymentpb.PayOut.data:type_name -> daop.pb.paymentpb.PayOut.Data
	43, // 11: daop.pb.paymentpb.PayQueryOut.data:type_name -> daop.pb.paymentpb.PayQueryOut.Data
	44, // 12: daop.pb.paymentpb.RefundOut.data:type_name -> daop.pb.paymentpb.RefundOut.Data
	45, // 13: daop.pb.paymentpb.RefundQueryOut.data:type_name -> daop.pb.paymentpb.RefundQueryOut.Data
	46, // 14: daop.pb.paymentpb.AmtSettleIn.extra_params:type_name -> daop.pb.paymentpb.AmtSettleIn.ExtraParams
	47, // 15: daop.pb.paymentpb.AmtSettleOut.data:type_name -> daop.pb.paymentpb.AmtSettleOut.Data
	48, // 16: daop.pb.paymentpb.OrderSettleIn.settlement_params:type_name -> daop.pb.paymentpb.OrderSettleIn.SettlementParams
	49, // 17: daop.pb.paymentpb.OrderSettleOut.data:type_name -> daop.pb.paymentpb.OrderSettleOut.Data
	50, // 18: daop.pb.paymentpb.OrderSettleQueryOut.data:type_name -> daop.pb.paymentpb.OrderSettleQueryOut.Data
	51, // 19: daop.pb.paymentpb.BillQueryOut.data:type_name -> daop.pb.paymentpb.BillQueryOut.Data
	0,  // 20: daop.pb.paymentpb.MerchantListOut.Data.list:type_name -> daop.pb.paymentpb.MerchantDetail
	32, // 21: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.default_settle_rule:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.DefaultSettleRule
	33, // 22: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.contact_infos:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.ContactInfo
	34, // 23: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.sites:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.SiteInfo
	35, // 24: daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.business_address:type_name -> daop.pb.paymentpb.MerchantApplyIn.MerchantApplyDataForAlipayZFT.AddressInfo
	52, // 25: daop.pb.paymentpb.MerchantApplyOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 26: daop.pb.paymentpb.MerchantApplyQueryOut.Data.pay_resp:type_name -> google.protobuf.Value
	11, // 27: daop.pb.paymentpb.PayOut.Data.wxpay_params_jsapi:type_name -> daop.pb.paymentpb.WxpayParamsJSAPI
	12, // 28: daop.pb.paymentpb.PayOut.Data.wxpay_params_app:type_name -> daop.pb.paymentpb.WxpayParamsAPP
	52, // 29: daop.pb.paymentpb.PayOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 30: daop.pb.paymentpb.PayQueryOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 31: daop.pb.paymentpb.RefundOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 32: daop.pb.paymentpb.RefundQueryOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 33: daop.pb.paymentpb.AmtSettleOut.Data.pay_resp:type_name -> google.protobuf.Value
	22, // 34: daop.pb.paymentpb.OrderSettleIn.SettlementParams.list:type_name -> daop.pb.paymentpb.TransferInfo
	52, // 35: daop.pb.paymentpb.OrderSettleOut.Data.pay_resp_for_amt:type_name -> google.protobuf.Value
	52, // 36: daop.pb.paymentpb.OrderSettleOut.Data.pay_resp_for_bind:type_name -> google.protobuf.Value
	52, // 37: daop.pb.paymentpb.OrderSettleOut.Data.pay_resp_for_settle:type_name -> google.protobuf.Value
	52, // 38: daop.pb.paymentpb.OrderSettleOut.Data.pay_resp_for_unbind:type_name -> google.protobuf.Value
	52, // 39: daop.pb.paymentpb.OrderSettleQueryOut.Data.pay_resp:type_name -> google.protobuf.Value
	52, // 40: daop.pb.paymentpb.BillQueryOut.Data.pay_resp:type_name -> google.protobuf.Value
	1,  // 41: daop.pb.paymentpb.PaymentService.MerchantDetail:input_type -> daop.pb.paymentpb.MerchantDetailIn
	3,  // 42: daop.pb.paymentpb.PaymentService.MerchantList:input_type -> daop.pb.paymentpb.MerchantListIn
	5,  // 43: daop.pb.paymentpb.PaymentService.MerchantApply:input_type -> daop.pb.paymentpb.MerchantApplyIn
	7,  // 44: daop.pb.paymentpb.PaymentService.MerchantApplyQuery:input_type -> daop.pb.paymentpb.MerchantApplyQueryIn
	9,  // 45: daop.pb.paymentpb.PaymentService.Notify:input_type -> daop.pb.paymentpb.NotifyIn
	10, // 46: daop.pb.paymentpb.PaymentService.Pay:input_type -> daop.pb.paymentpb.PayIn
	14, // 47: daop.pb.paymentpb.PaymentService.PayQuery:input_type -> daop.pb.paymentpb.PayQueryIn
	16, // 48: daop.pb.paymentpb.PaymentService.Refund:input_type -> daop.pb.paymentpb.RefundIn
	18, // 49: daop.pb.paymentpb.PaymentService.RefundQuery:input_type -> daop.pb.paymentpb.RefundQueryIn
	20, // 50: daop.pb.paymentpb.PaymentService.AmtSettle:input_type -> daop.pb.paymentpb.AmtSettleIn
	23, // 51: daop.pb.paymentpb.PaymentService.OrderSettle:input_type -> daop.pb.paymentpb.OrderSettleIn
	25, // 52: daop.pb.paymentpb.PaymentService.OrderSettleQuery:input_type -> daop.pb.paymentpb.OrderSettleQueryIn
	27, // 53: daop.pb.paymentpb.PaymentService.BillQuery:input_type -> daop.pb.paymentpb.BillQueryIn
	2,  // 54: daop.pb.paymentpb.PaymentService.MerchantDetail:output_type -> daop.pb.paymentpb.MerchantDetailOut
	4,  // 55: daop.pb.paymentpb.PaymentService.MerchantList:output_type -> daop.pb.paymentpb.MerchantListOut
	6,  // 56: daop.pb.paymentpb.PaymentService.MerchantApply:output_type -> daop.pb.paymentpb.MerchantApplyOut
	8,  // 57: daop.pb.paymentpb.PaymentService.MerchantApplyQuery:output_type -> daop.pb.paymentpb.MerchantApplyQueryOut
	53, // 58: daop.pb.paymentpb.PaymentService.Notify:output_type -> google.api.HttpBody
	13, // 59: daop.pb.paymentpb.PaymentService.Pay:output_type -> daop.pb.paymentpb.PayOut
	15, // 60: daop.pb.paymentpb.PaymentService.PayQuery:output_type -> daop.pb.paymentpb.PayQueryOut
	17, // 61: daop.pb.paymentpb.PaymentService.Refund:output_type -> daop.pb.paymentpb.RefundOut
	19, // 62: daop.pb.paymentpb.PaymentService.RefundQuery:output_type -> daop.pb.paymentpb.RefundQueryOut
	21, // 63: daop.pb.paymentpb.PaymentService.AmtSettle:output_type -> daop.pb.paymentpb.AmtSettleOut
	24, // 64: daop.pb.paymentpb.PaymentService.OrderSettle:output_type -> daop.pb.paymentpb.OrderSettleOut
	26, // 65: daop.pb.paymentpb.PaymentService.OrderSettleQuery:output_type -> daop.pb.paymentpb.OrderSettleQueryOut
	28, // 66: daop.pb.paymentpb.PaymentService.BillQuery:output_type -> daop.pb.paymentpb.BillQueryOut
	54, // [54:67] is the sub-list for method output_type
	41, // [41:54] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_pb_paymentpb_payment_proto_init() }
func file_pb_paymentpb_payment_proto_init() {
	if File_pb_paymentpb_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_paymentpb_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantDetailIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantDetailOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantListIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantListOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyQueryIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyQueryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxpayParamsJSAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxpayParamsAPP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayQueryIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayQueryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundQueryIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundQueryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmtSettleIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmtSettleOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleQueryIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleQueryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillQueryIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillQueryOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantListOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForAlipayZFT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForWxpaySFT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_DefaultSettleRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_ContactInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_SiteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyIn_MerchantApplyDataForAlipayZFT_AddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyQueryOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyIn_AlipayMerchantApplyNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyIn_AlipayPayNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyIn_WxpayMerchantApplyNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyIn_WxpayPayNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayQueryOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundQueryOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmtSettleIn_ExtraParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmtSettleOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleIn_SettlementParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettleQueryOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_paymentpb_payment_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillQueryOut_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_paymentpb_payment_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*TransferInfo_Rate)(nil),
		(*TransferInfo_Amount)(nil),
	}
	file_pb_paymentpb_payment_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*PayOut_Data_H5Url)(nil),
		(*PayOut_Data_Sdk)(nil),
		(*PayOut_Data_PcUrl)(nil),
		(*PayOut_Data_WxpayParamsJsapi)(nil),
		(*PayOut_Data_WxpayParamsApp)(nil),
		(*PayOut_Data_WxpayCodeUrl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_paymentpb_payment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_paymentpb_payment_proto_goTypes,
		DependencyIndexes: file_pb_paymentpb_payment_proto_depIdxs,
		MessageInfos:      file_pb_paymentpb_payment_proto_msgTypes,
	}.Build()
	File_pb_paymentpb_payment_proto = out.File
	file_pb_paymentpb_payment_proto_rawDesc = nil
	file_pb_paymentpb_payment_proto_goTypes = nil
	file_pb_paymentpb_payment_proto_depIdxs = nil
}

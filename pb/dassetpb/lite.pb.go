// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: pb/dassetpb/lite.proto

package dassetpb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CombinationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                               // 藏品名称
	Price           uint32 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`                                            // 藏品价格
	TokenUrl        string `protobuf:"bytes,4,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`                       // 访问藏品内容对应的url
	AuthorizationId uint32 `protobuf:"varint,5,opt,name=authorization_id,json=authorizationId,proto3" json:"authorization_id,omitempty"` // 授权ID,可选
	ToUid           uint32 `protobuf:"varint,6,opt,name=to_uid,json=toUid,proto3" json:"to_uid,omitempty"`                               // 受让人用户ID,可选. 指定受让人用户ID,则需要将此藏品转让给受让人用户
	CheckIn         bool   `protobuf:"varint,7,opt,name=check_in,json=checkIn,proto3" json:"check_in,omitempty"`                         // 是否CheckIn,可选. CheckIn为true时,则需要将此藏品CheckIn
}

func (x *CombinationInfo) Reset() {
	*x = CombinationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationInfo) ProtoMessage() {}

func (x *CombinationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationInfo.ProtoReflect.Descriptor instead.
func (*CombinationInfo) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{0}
}

func (x *CombinationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CombinationInfo) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CombinationInfo) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *CombinationInfo) GetAuthorizationId() uint32 {
	if x != nil {
		return x.AuthorizationId
	}
	return 0
}

func (x *CombinationInfo) GetToUid() uint32 {
	if x != nil {
		return x.ToUid
	}
	return 0
}

func (x *CombinationInfo) GetCheckIn() bool {
	if x != nil {
		return x.CheckIn
	}
	return false
}

type CombinationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *CombinationInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                // 上链数据
	NotifyUrl  string           `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`    // 回调通知地址
	NotifyOpts string           `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"` // 上链回调(json)扩展信息
}

func (x *CombinationReq) Reset() {
	*x = CombinationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationReq) ProtoMessage() {}

func (x *CombinationReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationReq.ProtoReflect.Descriptor instead.
func (*CombinationReq) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{1}
}

func (x *CombinationReq) GetData() *CombinationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CombinationReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CombinationReq) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type CombinationReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32           `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 所有权用户ID
	Data       *CombinationInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                // 上链数据
	NotifyUrl  string           `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`    // 回调通知地址
	NotifyOpts string           `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"` // 上链回调(json)扩展信息
}

func (x *CombinationReqNew) Reset() {
	*x = CombinationReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationReqNew) ProtoMessage() {}

func (x *CombinationReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationReqNew.ProtoReflect.Descriptor instead.
func (*CombinationReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{2}
}

func (x *CombinationReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CombinationReqNew) GetData() *CombinationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CombinationReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CombinationReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type CombinationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *CombinationResp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *CombinationResp) Reset() {
	*x = CombinationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationResp) ProtoMessage() {}

func (x *CombinationResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationResp.ProtoReflect.Descriptor instead.
func (*CombinationResp) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{3}
}

func (x *CombinationResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CombinationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CombinationResp) GetData() *CombinationResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type LockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
	NotifyUrl    string `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`          // 回调通知地址
	NotifyOpts   string `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`       // 上链回调(json)扩展信息
}

func (x *LockReq) Reset() {
	*x = LockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReq) ProtoMessage() {}

func (x *LockReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReq.ProtoReflect.Descriptor instead.
func (*LockReq) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{4}
}

func (x *LockReq) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *LockReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *LockReq) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type LockReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // 所有权用户ID
	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
	NotifyUrl    string `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`          // 回调通知地址
	NotifyOpts   string `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`       // 上链回调(json)扩展信息
}

func (x *LockReqNew) Reset() {
	*x = LockReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReqNew) ProtoMessage() {}

func (x *LockReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReqNew.ProtoReflect.Descriptor instead.
func (*LockReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{5}
}

func (x *LockReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LockReqNew) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *LockReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *LockReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type LockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *LockResp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *LockResp) Reset() {
	*x = LockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResp) ProtoMessage() {}

func (x *LockResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResp.ProtoReflect.Descriptor instead.
func (*LockResp) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{6}
}

func (x *LockResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LockResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LockResp) GetData() *LockResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
	NotifyUrl    string `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`          // 回调通知地址
	NotifyOpts   string `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`       // 上链回调(json)扩展信息
}

func (x *UnlockReq) Reset() {
	*x = UnlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockReq) ProtoMessage() {}

func (x *UnlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockReq.ProtoReflect.Descriptor instead.
func (*UnlockReq) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{7}
}

func (x *UnlockReq) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *UnlockReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *UnlockReq) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type UnlockReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // 所有权用户ID
	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
	NotifyUrl    string `protobuf:"bytes,20,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`          // 回调通知地址
	NotifyOpts   string `protobuf:"bytes,21,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`       // 上链回调(json)扩展信息
}

func (x *UnlockReqNew) Reset() {
	*x = UnlockReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockReqNew) ProtoMessage() {}

func (x *UnlockReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockReqNew.ProtoReflect.Descriptor instead.
func (*UnlockReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{8}
}

func (x *UnlockReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnlockReqNew) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *UnlockReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *UnlockReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type UnlockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误代码,0表示业务成功,否则表示错误
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Data *UnlockResp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 响应数据
}

func (x *UnlockResp) Reset() {
	*x = UnlockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResp) ProtoMessage() {}

func (x *UnlockResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResp.ProtoReflect.Descriptor instead.
func (*UnlockResp) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{9}
}

func (x *UnlockResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UnlockResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UnlockResp) GetData() *UnlockResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CombinationResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId  uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`    // 藏品ID
	TransactionId uint32 `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 交易ID
	TokenId       string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`                    // 藏品tokenID,链上存储的藏品NFT唯一标识
}

func (x *CombinationResp_Data) Reset() {
	*x = CombinationResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationResp_Data) ProtoMessage() {}

func (x *CombinationResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationResp_Data.ProtoReflect.Descriptor instead.
func (*CombinationResp_Data) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CombinationResp_Data) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *CombinationResp_Data) GetTransactionId() uint32 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *CombinationResp_Data) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type LockResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
}

func (x *LockResp_Data) Reset() {
	*x = LockResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResp_Data) ProtoMessage() {}

func (x *LockResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResp_Data.ProtoReflect.Descriptor instead.
func (*LockResp_Data) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{6, 0}
}

func (x *LockResp_Data) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

type UnlockResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId uint32 `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // 藏品ID
}

func (x *UnlockResp_Data) Reset() {
	*x = UnlockResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_lite_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResp_Data) ProtoMessage() {}

func (x *UnlockResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_lite_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResp_Data.ProtoReflect.Descriptor instead.
func (*UnlockResp_Data) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_lite_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UnlockResp_Data) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

var File_pb_dassetpb_lite_proto protoreflect.FileDescriptor

var file_pb_dassetpb_lite_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2f, 0x6c, 0x69,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70,
	0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf,
	0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0x90, 0x8d,
	0xe7, 0xa7, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe4, 0xbb, 0xb7, 0xe6, 0xa0, 0xbc, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe8,
	0xae, 0xbf, 0xe9, 0x97, 0xae, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0x86, 0x85, 0xe5, 0xae,
	0xb9, 0xe5, 0xaf, 0xb9, 0xe5, 0xba, 0x94, 0xe7, 0x9a, 0x84, 0x75, 0x72, 0x6c, 0xe0, 0x41, 0x02,
	0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x10, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe6, 0x8e, 0x88, 0xe6, 0x9d,
	0x83, 0x49, 0x44, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe5, 0x8f, 0x97, 0xe8, 0xae,
	0xa9, 0xe4, 0xba, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0x2c, 0xe5, 0x8f, 0xaf,
	0xe9, 0x80, 0x89, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x19, 0x92, 0x41,
	0x16, 0x32, 0x14, 0xe6, 0x98, 0xaf, 0xe5, 0x90, 0xa6, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x2c, 0xe5, 0x8f, 0xaf, 0xe9, 0x80, 0x89, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe4, 0xb8, 0x8a, 0xe9, 0x93,
	0xbe, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x41, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0,
	0x83, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70,
	0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4,
	0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e,
	0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x11, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4e, 0x65, 0x77, 0x12,
	0x39, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x20, 0x92, 0x41, 0x13, 0x32, 0x11, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe6, 0x9d, 0x83,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e,
	0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x14, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0x92, 0x41, 0x14,
	0x32, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8,
	0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf,
	0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73,
	0x22, 0xb5, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4,
	0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a,
	0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99,
	0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6,
	0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5,
	0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xc7,
	0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10,
	0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe4, 0xba, 0xa4,
	0xe6, 0x98, 0x93, 0x69, 0x64, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0x92, 0x41, 0x34, 0x32, 0x32, 0xe8, 0x97, 0x8f,
	0xe5, 0x93, 0x81, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x2c, 0xe9, 0x93, 0xbe, 0xe4, 0xb8,
	0x8a, 0xe5, 0xad, 0x98, 0xe5, 0x82, 0xa8, 0xe7, 0x9a, 0x84, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81,
	0x4e, 0x46, 0x54, 0xe5, 0x94, 0xaf, 0xe4, 0xb8, 0x80, 0xe6, 0xa0, 0x87, 0xe8, 0xaf, 0x86, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a,
	0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1a, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe9, 0x80, 0x9a, 0xe7,
	0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20,
	0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a,
	0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0xff, 0x01, 0x0a,
	0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x4e, 0x65, 0x77, 0x12, 0x39, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x20, 0x92, 0x41,
	0x13, 0x32, 0x11, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe6, 0x9d, 0x83, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0x92,
	0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1a, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe9, 0x80,
	0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92,
	0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83,
	0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0x9c,
	0x02, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33,
	0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1,
	0xa8, 0xe7, 0xa4, 0xba, 0xe4, 0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f,
	0x2c, 0xe5, 0x90, 0xa6, 0xe5, 0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0xa2, 0x02, 0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6,
	0x95, 0xb4, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e,
	0x32, 0x0c, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41,
	0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5,
	0xba, 0x94, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3d,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0x92,
	0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc3, 0x01,
	0x0a, 0x09, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69,
	0x64, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe5, 0x9b, 0x9e,
	0xe8, 0xb0, 0x83, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5,
	0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1,
	0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f,
	0x70, 0x74, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x4e, 0x65, 0x77, 0x12, 0x39, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x20, 0x92, 0x41, 0x13, 0x32, 0x11, 0xe6, 0x89, 0x80, 0xe6,
	0x9c, 0x89, 0xe6, 0x9d, 0x83, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f,
	0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0x92, 0x41, 0x14, 0x32,
	0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0x9c, 0xb0,
	0xe5, 0x9d, 0x80, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a,
	0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6,
	0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x0a, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x33, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0xe4, 0xbb, 0xa3, 0xe7, 0xa0, 0x81, 0x2c, 0x30, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe4,
	0xb8, 0x9a, 0xe5, 0x8a, 0xa1, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0x2c, 0xe5, 0x90, 0xa6, 0xe5,
	0x88, 0x99, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xa2, 0x02,
	0x0f, 0xe6, 0x97, 0xa0, 0xe7, 0xac, 0xa6, 0xe5, 0x9e, 0x8b, 0xe6, 0x95, 0xb4, 0xe6, 0x95, 0xb0,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe5, 0x93, 0x8d, 0xe5, 0xba, 0x94, 0xe6,
	0x95, 0xb0, 0xe6, 0x8d, 0xae, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3d, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x62,
	0x2f, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x3b, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_dassetpb_lite_proto_rawDescOnce sync.Once
	file_pb_dassetpb_lite_proto_rawDescData = file_pb_dassetpb_lite_proto_rawDesc
)

func file_pb_dassetpb_lite_proto_rawDescGZIP() []byte {
	file_pb_dassetpb_lite_proto_rawDescOnce.Do(func() {
		file_pb_dassetpb_lite_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_dassetpb_lite_proto_rawDescData)
	})
	return file_pb_dassetpb_lite_proto_rawDescData
}

var file_pb_dassetpb_lite_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pb_dassetpb_lite_proto_goTypes = []interface{}{
	(*CombinationInfo)(nil),      // 0: daop.pb.dassetpb.CombinationInfo
	(*CombinationReq)(nil),       // 1: daop.pb.dassetpb.CombinationReq
	(*CombinationReqNew)(nil),    // 2: daop.pb.dassetpb.CombinationReqNew
	(*CombinationResp)(nil),      // 3: daop.pb.dassetpb.CombinationResp
	(*LockReq)(nil),              // 4: daop.pb.dassetpb.LockReq
	(*LockReqNew)(nil),           // 5: daop.pb.dassetpb.LockReqNew
	(*LockResp)(nil),             // 6: daop.pb.dassetpb.LockResp
	(*UnlockReq)(nil),            // 7: daop.pb.dassetpb.UnlockReq
	(*UnlockReqNew)(nil),         // 8: daop.pb.dassetpb.UnlockReqNew
	(*UnlockResp)(nil),           // 9: daop.pb.dassetpb.UnlockResp
	(*CombinationResp_Data)(nil), // 10: daop.pb.dassetpb.CombinationResp.Data
	(*LockResp_Data)(nil),        // 11: daop.pb.dassetpb.LockResp.Data
	(*UnlockResp_Data)(nil),      // 12: daop.pb.dassetpb.UnlockResp.Data
}
var file_pb_dassetpb_lite_proto_depIdxs = []int32{
	0,  // 0: daop.pb.dassetpb.CombinationReq.data:type_name -> daop.pb.dassetpb.CombinationInfo
	0,  // 1: daop.pb.dassetpb.CombinationReqNew.data:type_name -> daop.pb.dassetpb.CombinationInfo
	10, // 2: daop.pb.dassetpb.CombinationResp.data:type_name -> daop.pb.dassetpb.CombinationResp.Data
	11, // 3: daop.pb.dassetpb.LockResp.data:type_name -> daop.pb.dassetpb.LockResp.Data
	12, // 4: daop.pb.dassetpb.UnlockResp.data:type_name -> daop.pb.dassetpb.UnlockResp.Data
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pb_dassetpb_lite_proto_init() }
func file_pb_dassetpb_lite_proto_init() {
	if File_pb_dassetpb_lite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_dassetpb_lite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_lite_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_dassetpb_lite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_dassetpb_lite_proto_goTypes,
		DependencyIndexes: file_pb_dassetpb_lite_proto_depIdxs,
		MessageInfos:      file_pb_dassetpb_lite_proto_msgTypes,
	}.Build()
	File_pb_dassetpb_lite_proto = out.File
	file_pb_dassetpb_lite_proto_rawDesc = nil
	file_pb_dassetpb_lite_proto_goTypes = nil
	file_pb_dassetpb_lite_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: pb/dassetpb/collectionnew.proto

package dassetpb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CollectionLightCreateReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32             `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Data       []*CollectionLight `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	NotifyUrl  string             `protobuf:"bytes,9,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	NotifyOpts string             `protobuf:"bytes,10,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`
}

func (x *CollectionLightCreateReqNew) Reset() {
	*x = CollectionLightCreateReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionLightCreateReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionLightCreateReqNew) ProtoMessage() {}

func (x *CollectionLightCreateReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionLightCreateReqNew.ProtoReflect.Descriptor instead.
func (*CollectionLightCreateReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_collectionnew_proto_rawDescGZIP(), []int{0}
}

func (x *CollectionLightCreateReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectionLightCreateReqNew) GetData() []*CollectionLight {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CollectionLightCreateReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CollectionLightCreateReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type CollectionLightTransactionReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32                        `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Data       []*CollectionLightTransaction `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	NotifyUrl  string                        `protobuf:"bytes,9,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	NotifyOpts string                        `protobuf:"bytes,10,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`
}

func (x *CollectionLightTransactionReqNew) Reset() {
	*x = CollectionLightTransactionReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionLightTransactionReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionLightTransactionReqNew) ProtoMessage() {}

func (x *CollectionLightTransactionReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionLightTransactionReqNew.ProtoReflect.Descriptor instead.
func (*CollectionLightTransactionReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_collectionnew_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionLightTransactionReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectionLightTransactionReqNew) GetData() []*CollectionLightTransaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CollectionLightTransactionReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CollectionLightTransactionReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type CollectionCreateReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationId   uint32           `protobuf:"varint,1,opt,name=authorization_id,json=authorizationId,proto3" json:"authorization_id,omitempty"`
	AuthorizationCode string           `protobuf:"bytes,2,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
	Price             uint32           `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	TokenUrl          string           `protobuf:"bytes,5,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	AvailableTimes    uint32           `protobuf:"varint,6,opt,name=available_times,json=availableTimes,proto3" json:"available_times,omitempty"`
	Claim             *CollectionClaim `protobuf:"bytes,7,opt,name=claim,proto3" json:"claim,omitempty"`
	UserId            uint32           `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotifyUrl         string           `protobuf:"bytes,9,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	NotifyOpts        string           `protobuf:"bytes,10,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`
}

func (x *CollectionCreateReqNew) Reset() {
	*x = CollectionCreateReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionCreateReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionCreateReqNew) ProtoMessage() {}

func (x *CollectionCreateReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionCreateReqNew.ProtoReflect.Descriptor instead.
func (*CollectionCreateReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_collectionnew_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionCreateReqNew) GetAuthorizationId() uint32 {
	if x != nil {
		return x.AuthorizationId
	}
	return 0
}

func (x *CollectionCreateReqNew) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *CollectionCreateReqNew) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CollectionCreateReqNew) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *CollectionCreateReqNew) GetAvailableTimes() uint32 {
	if x != nil {
		return x.AvailableTimes
	}
	return 0
}

func (x *CollectionCreateReqNew) GetClaim() *CollectionClaim {
	if x != nil {
		return x.Claim
	}
	return nil
}

func (x *CollectionCreateReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectionCreateReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CollectionCreateReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

type CollectionListReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            uint32 `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionHash    string `protobuf:"bytes,1,opt,name=collection_hash,json=collectionHash,proto3" json:"collection_hash,omitempty"`
	AuthorizationCode string `protobuf:"bytes,2,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
	CastingAddress    string `protobuf:"bytes,3,opt,name=casting_address,json=castingAddress,proto3" json:"casting_address,omitempty"`
	OwnerAddress      string `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	Credential        string `protobuf:"bytes,5,opt,name=credential,proto3" json:"credential,omitempty"`
	CollectionType    uint32 `protobuf:"varint,6,opt,name=collection_type,json=collectionType,proto3" json:"collection_type,omitempty"`
	CreateTimeStart   uint32 `protobuf:"varint,10,opt,name=create_time_start,json=createTimeStart,proto3" json:"create_time_start,omitempty"`
	CreateTimeEnd     uint32 `protobuf:"varint,11,opt,name=create_time_end,json=createTimeEnd,proto3" json:"create_time_end,omitempty"`
	Page              uint32 `protobuf:"varint,12,opt,name=page,proto3" json:"page,omitempty"`
	Limit             uint32 `protobuf:"varint,13,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CollectionListReqNew) Reset() {
	*x = CollectionListReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionListReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionListReqNew) ProtoMessage() {}

func (x *CollectionListReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionListReqNew.ProtoReflect.Descriptor instead.
func (*CollectionListReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_collectionnew_proto_rawDescGZIP(), []int{3}
}

func (x *CollectionListReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectionListReqNew) GetCollectionHash() string {
	if x != nil {
		return x.CollectionHash
	}
	return ""
}

func (x *CollectionListReqNew) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *CollectionListReqNew) GetCastingAddress() string {
	if x != nil {
		return x.CastingAddress
	}
	return ""
}

func (x *CollectionListReqNew) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *CollectionListReqNew) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *CollectionListReqNew) GetCollectionType() uint32 {
	if x != nil {
		return x.CollectionType
	}
	return 0
}

func (x *CollectionListReqNew) GetCreateTimeStart() uint32 {
	if x != nil {
		return x.CreateTimeStart
	}
	return 0
}

func (x *CollectionListReqNew) GetCreateTimeEnd() uint32 {
	if x != nil {
		return x.CreateTimeEnd
	}
	return 0
}

func (x *CollectionListReqNew) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CollectionListReqNew) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CollectionTransactionReqNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint32                      `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId uint32                      `protobuf:"varint,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Claim        *CollectionTransactionClaim `protobuf:"bytes,7,opt,name=claim,proto3" json:"claim,omitempty"`
	NotifyUrl    string                      `protobuf:"bytes,9,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	NotifyOpts   string                      `protobuf:"bytes,10,opt,name=notify_opts,json=notifyOpts,proto3" json:"notify_opts,omitempty"`
}

func (x *CollectionTransactionReqNew) Reset() {
	*x = CollectionTransactionReqNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionTransactionReqNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionTransactionReqNew) ProtoMessage() {}

func (x *CollectionTransactionReqNew) ProtoReflect() protoreflect.Message {
	mi := &file_pb_dassetpb_collectionnew_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionTransactionReqNew.ProtoReflect.Descriptor instead.
func (*CollectionTransactionReqNew) Descriptor() ([]byte, []int) {
	return file_pb_dassetpb_collectionnew_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionTransactionReqNew) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectionTransactionReqNew) GetCollectionId() uint32 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *CollectionTransactionReqNew) GetClaim() *CollectionTransactionClaim {
	if x != nil {
		return x.Claim
	}
	return nil
}

func (x *CollectionTransactionReqNew) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CollectionTransactionReqNew) GetNotifyOpts() string {
	if x != nil {
		return x.NotifyOpts
	}
	return ""
}

var File_pb_dassetpb_collectionnew_proto protoreflect.FileDescriptor

var file_pb_dassetpb_collectionnew_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0x97,
	0x8f, 0xe5, 0x93, 0x81, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x32, 0x2d, 0xe5, 0xbc,
	0x82, 0xe6, 0xad, 0xa5, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8,
	0xe7, 0x89, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0x99, 0xbb, 0xe8, 0xae, 0xb0, 0xe7, 0xbb, 0x93, 0xe6,
	0x9e, 0x9c, 0xe7, 0x9a, 0x84, 0xe9, 0x93, 0xbe, 0xe6, 0x8e, 0xa5, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20,
	0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a,
	0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0xc5, 0x02, 0x0a,
	0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4e, 0x65,
	0x77, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49,
	0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x14, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0x88, 0x97, 0xe8,
	0xa1, 0xa8, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0a, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x32, 0x92, 0x41, 0x2f, 0x32, 0x2d, 0xe5, 0xbc, 0x82, 0xe6, 0xad, 0xa5, 0xe9, 0x80, 0x9a, 0xe7,
	0x9f, 0xa5, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0x89, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0x99,
	0xbb, 0xe8, 0xae, 0xb0, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe7, 0x9a, 0x84, 0xe9, 0x93, 0xbe,
	0xe6, 0x8e, 0xa5, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe,
	0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5,
	0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4f, 0x70, 0x74, 0x73, 0x22, 0xd7, 0x05, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x4e, 0x65, 0x77, 0x12,
	0x63, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x33,
	0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x69, 0x64, 0x28, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x69,
	0x64, 0xe6, 0x88, 0x96, 0xe8, 0x80, 0x85, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xa0, 0x81,
	0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x8f, 0x90, 0xe4, 0xba, 0xa4, 0xe4, 0xb8, 0x80, 0xe4,
	0xb8, 0xaa, 0x29, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x33, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xa0, 0x81,
	0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x69, 0x64, 0xe6, 0x88, 0x96, 0xe8, 0x80, 0x85, 0xe6, 0x8e,
	0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xa0, 0x81, 0xe5, 0xbf, 0x85, 0xe9, 0xa1, 0xbb, 0xe6, 0x8f, 0x90,
	0xe4, 0xba, 0xa4, 0xe4, 0xb8, 0x80, 0xe4, 0xb8, 0xaa, 0x29, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1a, 0x92, 0x41,
	0x0d, 0x32, 0x0b, 0xe4, 0xbb, 0xb7, 0xe6, 0xa0, 0xbc, 0x28, 0xe5, 0x88, 0x86, 0x29, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe8, 0xae, 0xbf, 0xe9, 0x97, 0xae, 0xe8,
	0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0xe5, 0xaf, 0xb9, 0xe5, 0xba,
	0x94, 0xe7, 0x9a, 0x84, 0x75, 0x72, 0x6c, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x49, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x20, 0x92, 0x41, 0x1a, 0x32,
	0x18, 0xe6, 0x9d, 0x83, 0xe7, 0x9b, 0x8a, 0xe5, 0x8f, 0xaf, 0xe5, 0x85, 0x91, 0xe7, 0x8e, 0xb0,
	0xe6, 0x80, 0xbb, 0xe6, 0xac, 0xa1, 0xe6, 0x95, 0xb0, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61,
	0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x42, 0x20,
	0x92, 0x41, 0x1a, 0x32, 0x18, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0xad, 0x98, 0xe8, 0xaf,
	0x81, 0xe5, 0xa3, 0xb0, 0xe6, 0x98, 0x8e, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe0, 0x41, 0x02,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x3c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x23, 0x92, 0x41, 0x16, 0x32, 0x14, 0xe8,
	0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe6, 0x8c, 0x81, 0xe6, 0x9c, 0x89, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x32, 0x2d,
	0xe5, 0xbc, 0x82, 0xe6, 0xad, 0xa5, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe5, 0xba, 0x94, 0xe7,
	0x94, 0xa8, 0xe7, 0x89, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0x99, 0xbb, 0xe8, 0xae, 0xb0, 0xe7, 0xbb,
	0x93, 0xe6, 0x9e, 0x9c, 0xe7, 0x9a, 0x84, 0xe9, 0x93, 0xbe, 0xe6, 0x8e, 0xa5, 0x52, 0x09, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92,
	0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83,
	0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1, 0x95, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x74, 0x73, 0x22, 0xc3,
	0x05, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x68,
	0x61, 0x73, 0x68, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0xa0, 0x81, 0x52,
	0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x63, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0x92, 0x41, 0x1e,
	0x32, 0x1c, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe9, 0x93, 0xb8, 0xe9, 0x80, 0xa0, 0xe4, 0xba,
	0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e,
	0x63, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x49,
	0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0x92, 0x41, 0x21, 0x32, 0x1f, 0xe8, 0x97, 0x8f, 0xe5,
	0x93, 0x81, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe6, 0x9d, 0x83, 0xe4, 0xba, 0xba, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0xad, 0x98, 0xe8, 0xaf, 0x81,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0x30, 0xe6, 0x8c, 0x81,
	0xe6, 0x9c, 0x89, 0x31, 0xe9, 0x93, 0xb8, 0xe9, 0x80, 0xa0, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x26, 0x92, 0x41, 0x23, 0x32, 0x21, 0xe5, 0x88, 0x9b, 0xe5,
	0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x20, 0x28, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0xe6, 0x88, 0xb3, 0xe7, 0xa7, 0x92, 0x29, 0xe6, 0x9c, 0x80, 0xe5, 0xb0, 0x8f, 0x52, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4f,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x27, 0x92, 0x41, 0x24, 0x32, 0x22, 0xe5, 0x88,
	0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x20, 0x28, 0xe6, 0x97, 0xb6, 0xe9,
	0x97, 0xb4, 0xe6, 0x88, 0xb3, 0xe7, 0xa7, 0x92, 0x29, 0xe6, 0x9c, 0x80, 0xe5, 0xa4, 0xa7, 0x20,
	0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x27, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x13, 0x92,
	0x41, 0x10, 0x32, 0x0e, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae,
	0xa4, 0x31, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe6, 0x9d,
	0xa1, 0xe6, 0x95, 0xb0, 0x20, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0x32, 0x30, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x8c, 0x03, 0x0a, 0x1b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x4e, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x17, 0x92,
	0x41, 0x0a, 0x32, 0x08, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0x69, 0x64, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x61, 0x6f, 0x70, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x42, 0x20, 0x92, 0x41, 0x1a, 0x32, 0x18, 0xe8, 0x97, 0x8f, 0xe5, 0x93, 0x81, 0xe5, 0xad,
	0x98, 0xe8, 0xaf, 0x81, 0xe5, 0xa3, 0xb0, 0xe6, 0x98, 0x8e, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae,
	0xe0, 0x41, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x51, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32,
	0x92, 0x41, 0x2f, 0x32, 0x2d, 0xe5, 0xbc, 0x82, 0xe6, 0xad, 0xa5, 0xe9, 0x80, 0x9a, 0xe7, 0x9f,
	0xa5, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0xe7, 0x89, 0x88, 0xe6, 0x9d, 0x83, 0xe7, 0x99, 0xbb,
	0xe8, 0xae, 0xb0, 0xe7, 0xbb, 0x93, 0xe6, 0x9e, 0x9c, 0xe7, 0x9a, 0x84, 0xe9, 0x93, 0xbe, 0xe6,
	0x8e, 0xa5, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x32, 0x1e, 0xe4, 0xb8, 0x8a, 0xe9, 0x93, 0xbe, 0xe5,
	0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0x28, 0x6a, 0x73, 0x6f, 0x6e, 0x29, 0xe6, 0x89, 0xa9, 0xe5, 0xb1,
	0x95, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f,
	0x70, 0x74, 0x73, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x70, 0x62, 0x3b, 0x64, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pb_dassetpb_collectionnew_proto_rawDescOnce sync.Once
	file_pb_dassetpb_collectionnew_proto_rawDescData = file_pb_dassetpb_collectionnew_proto_rawDesc
)

func file_pb_dassetpb_collectionnew_proto_rawDescGZIP() []byte {
	file_pb_dassetpb_collectionnew_proto_rawDescOnce.Do(func() {
		file_pb_dassetpb_collectionnew_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_dassetpb_collectionnew_proto_rawDescData)
	})
	return file_pb_dassetpb_collectionnew_proto_rawDescData
}

var file_pb_dassetpb_collectionnew_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_dassetpb_collectionnew_proto_goTypes = []interface{}{
	(*CollectionLightCreateReqNew)(nil),      // 0: daop.pb.dassetpb.CollectionLightCreateReqNew
	(*CollectionLightTransactionReqNew)(nil), // 1: daop.pb.dassetpb.CollectionLightTransactionReqNew
	(*CollectionCreateReqNew)(nil),           // 2: daop.pb.dassetpb.CollectionCreateReqNew
	(*CollectionListReqNew)(nil),             // 3: daop.pb.dassetpb.CollectionListReqNew
	(*CollectionTransactionReqNew)(nil),      // 4: daop.pb.dassetpb.CollectionTransactionReqNew
	(*CollectionLight)(nil),                  // 5: daop.pb.dassetpb.CollectionLight
	(*CollectionLightTransaction)(nil),       // 6: daop.pb.dassetpb.CollectionLightTransaction
	(*CollectionClaim)(nil),                  // 7: daop.pb.dassetpb.CollectionClaim
	(*CollectionTransactionClaim)(nil),       // 8: daop.pb.dassetpb.CollectionTransactionClaim
}
var file_pb_dassetpb_collectionnew_proto_depIdxs = []int32{
	5, // 0: daop.pb.dassetpb.CollectionLightCreateReqNew.data:type_name -> daop.pb.dassetpb.CollectionLight
	6, // 1: daop.pb.dassetpb.CollectionLightTransactionReqNew.data:type_name -> daop.pb.dassetpb.CollectionLightTransaction
	7, // 2: daop.pb.dassetpb.CollectionCreateReqNew.claim:type_name -> daop.pb.dassetpb.CollectionClaim
	8, // 3: daop.pb.dassetpb.CollectionTransactionReqNew.claim:type_name -> daop.pb.dassetpb.CollectionTransactionClaim
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pb_dassetpb_collectionnew_proto_init() }
func file_pb_dassetpb_collectionnew_proto_init() {
	if File_pb_dassetpb_collectionnew_proto != nil {
		return
	}
	file_pb_dassetpb_collection_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_dassetpb_collectionnew_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionLightCreateReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_collectionnew_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionLightTransactionReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_collectionnew_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionCreateReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_collectionnew_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionListReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_dassetpb_collectionnew_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionTransactionReqNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_dassetpb_collectionnew_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_dassetpb_collectionnew_proto_goTypes,
		DependencyIndexes: file_pb_dassetpb_collectionnew_proto_depIdxs,
		MessageInfos:      file_pb_dassetpb_collectionnew_proto_msgTypes,
	}.Build()
	File_pb_dassetpb_collectionnew_proto = out.File
	file_pb_dassetpb_collectionnew_proto_rawDesc = nil
	file_pb_dassetpb_collectionnew_proto_goTypes = nil
	file_pb_dassetpb_collectionnew_proto_depIdxs = nil
}
